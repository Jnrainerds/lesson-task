.版本 2

.全局变量 pSkin, 整数型, , "0"
.全局变量 pIcon, 整数型
.全局变量 pEditIco, 整数型
.全局变量 pBtnIco, 整数型
.全局变量 pEditIco2, 整数型
.全局变量 pEditIco3, 整数型
.全局变量 下载项目, 项目, , "0"
.全局变量 下载个数, 整数型
.全局变量 文件号, 整数型
.全局变量 服务器信息, 项目, , "0"
.全局变量 服务器数, 整数型
.全局变量 皮肤, 字节集, , "0"

.版本 2

.数据类型 项目
    .成员 标题, 文本型
    .成员 地址, 文本型

.版本 2

.DLL命令 GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess"

.DLL命令 GetSystemDirectory, 整数型, "kernel32.dll", "GetSystemDirectoryA"
    .参数 lpBuffer, 文本型, 传址
    .参数 uSize, 整数型

.DLL命令 IsWow64Process, 整数型, "kernel32.dll", "IsWow64Process"
    .参数 Process, 整数型
    .参数 IsWow64Process, 逻辑型, 传址

.DLL命令 LoadLibrary, 整数型, "kernel32.dll", "LoadLibraryA"
    .参数 lpFileName, 文本型

.DLL命令 GetProcAddress, 整数型, "kernel32.dll", "GetProcAddress"
    .参数 hModule, 整数型
    .参数 lpProcName, 文本型

.DLL命令 FreeLibrary, 整数型, "kernel32.dll", "FreeLibraryA"
    .参数 hModule, 整数型

.DLL命令 API_Wow64DisableWow64FsRedirection, 逻辑型, "kernel32.dll", "Wow64DisableWow64FsRedirection"
    .参数 oldvalue, 整数型, 传址

.DLL命令 API_Wow64RevertWow64FsRedirection, 逻辑型, "kernel32.dll", "Wow64RevertWow64FsRedirection"
    .参数 oldvalue, 整数型

.DLL命令 API_RegOpenKeyEx, 整数型, "advapi32.dll", "RegOpenKeyExA", , 打开一个现有的项。在win32下推荐使用这个函数　零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpSubKey, 文本型, , 欲打开注册表项的名字
    .参数 ulOptions, 整数型, , 未用，设为零
    .参数 samDesired, 整数型, , 带有前缀KEY_??的一个或多个常数。它们的组合描述了允许对这个项进行哪些操作
    .参数 phkResult, 整数型, , 用于装载打开项的名字的一个变量;

.DLL命令 API_RegQueryValueEx, 整数型, "advapi32.dll", "RegQueryValueExA", , 获取一个项的设置值　零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 lpValueName, 文本型, , 要获取值的名字
    .参数 lpReserved, 整数型, , 未用，设为零
    .参数 lpType, 整数型, , 用于装载取回数据类型的一个变量
    .参数 lpData, 整数型, , 用于装载指定值的一个缓冲区
    .参数 lpcbData, 整数型, , 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际装载到缓冲区的字节数;

.DLL命令 API_RegDisableReflectionKey, 整数型, "advapi32.dll", "RegDisableReflectionKey"
    .参数 hBase, 整数型

.DLL命令 API_RegEnableReflectionKey, 整数型, "advapi32.dll", "RegEnableReflectionKey"
    .参数 hBase, 整数型

.DLL命令 InternetGetConnectedState, , "Wininet.dll", "InternetGetConnectedState"
    .参数 lpdwFlags, 整数型, 传址
    .参数 dwReserved, 整数型

.DLL命令 InternetOpenA, 整数型, "Wininet.dll", "InternetOpenA"
    .参数 lpszAgent, 文本型
    .参数 dwAccessType, 整数型
    .参数 lpszProxyName, 整数型
    .参数 lpszProxyBypass, 整数型
    .参数 dwFlags, 整数型

.DLL命令 InternetOpenUrlA, 整数型, "Wininet.dll", "InternetOpenUrlA"
    .参数 hInternet, 整数型
    .参数 lpszUrl, 文本型
    .参数 lpszHeaders, 文本型
    .参数 dwHeadersLength, 整数型
    .参数 dwFlags, 整数型
    .参数 dwContext, 整数型

.DLL命令 HttpQueryInfoA, 整数型, "Wininet.dll", "HttpQueryInfoA"
    .参数 hRequest, 整数型
    .参数 dwInfoLevel, 整数型
    .参数 lpvBuffer, 整数型, 传址
    .参数 lpdwBufferLength, 整数型, 传址
    .参数 lpdwIndex, 整数型, 传址

.DLL命令 InternetCloseHandle, , "Wininet.dll", "InternetCloseHandle"
    .参数 handle, 整数型

.DLL命令 InternetReadFile, 整数型, "Wininet.dll", "InternetReadFile"
    .参数 hFile, 整数型
    .参数 lpBuffer, 字节集
    .参数 dwNumberOfBytesToRead, 整数型
    .参数 lpdwNumberOfBytesRead, 整数型, 传址

.DLL命令 CallWindowProcA, 整数型, , "CallWindowProcA"
    .参数 子程序指针, 子程序指针
    .参数 参数1, 整数型
    .参数 参数2, 整数型
    .参数 参数3, 整数型
    .参数 参数4, 整数型

.DLL命令 API_RegCloseKey, 整数型, "advapi32.dll", "RegCloseKey", , 关闭系统注册表中的一个项（或键）　零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要关闭的项;

.DLL命令 线程创建API, 整数型, , "CreateThread", , 返回线程句柄
    .参数 ThreadAttributes, 整数型, , 指向一个SECURITY_ATTRIBUTES结构，用来定义线程的安全属性。如果使用默认的安全属性，则设为0
    .参数 StackSize, 整数型, , 线程的堆栈大小。如果为0，那么和主线程的堆栈大小相同
    .参数 StartAddress, 子程序指针, , 线程开始执行的地址
    .参数 Parameter, 整数型, , 传递的参数
    .参数 CreationFlags, 整数型, , 创建标志，如果指定CREATE_SUSPENDED标志，表示线程创建后挂起，直到使用ResumeThread启动线程
    .参数 ThreadID, 整数型, 传址, 返回线程的ID号

.DLL命令 线程关闭API, , , "CloseHandle"
    .参数 hThread, 整数型, , 线程句柄

.DLL命令 线程中止API, 整数型, , "TerminateThread"
    .参数 hThread, 整数型, , 线程句柄
    .参数 dwExitCode, 整数型, , 退出码

模块名称：SyserUI Engine
作者：Baby
版本：8.21

SyserUI Engine - Free DirectUI Engine
Syser Group (C) 2008-2012
Coded By Baby
SUI:Http://Sysxo.com
Blog:Http://9339.me
Forum:Http://Sys8.cC
@备注:
SyserUI Engine
Version:2012.08.21.00

------------------------------

.版本 2

.子程序 ARGB到RGB, 整数型, 公开
.参数 参数_ARGB, 整数型
.参数 参数_透明度, 字节型, 参考 可空

.子程序 GdiplusA2W, 字节集, 公开, 将Ansi转成Unicode
.参数 参数_Ansi文本, 文本型

.子程序 GdiplusW2A, 文本型, 公开, 将Unicode转成Ansi
.参数 参数_Unicode文本指针, 整数型

.子程序 Gdiplus初始化, 整数型, 公开, GdiplusStartup。初始化GDI+。使用GDI+之前必须初始化。返回一个标记，用作关闭()
.参数 参数_版本, 整数型, 可空, 默认为1

.子程序 Gdiplus关闭, , 公开, GdiplusShutdown。
.参数 参数_标记, 整数型, 可空, 由 Gdiplus初始化() 返回。默认为最后一次调用 Gdiplus初始化() 返回的标记。

.子程序 Gdiplus取最后错误, 整数型, 公开, GdiplusGetLastStatus

.子程序 Gdiplus取最后错误文本, 文本型, 公开, GdiplusGetLastStatusText

.子程序 GUID到文本, 文本型, 公开, StringFromGUID2
.参数 参数_CLSID, 字节集

.子程序 Init_SUITypedf_AniImage, , 公开, Public SUI初始化SUITypedf_AniImage类型 宏函数
.参数 SUITypedf_AniImage, SUITypedf_AniImage, 参考
.参数 pBkg, 整数型, , 背景指针 若小于#Limit则为第几帧作为背景 若为-1则无背景绘制
.参数 pAniImage, 整数型, , 动态图片指针
.参数 bSplitLine, 逻辑型, , 原图是否有分割线
.参数 dwTotalFrame, 整数型, , 原图总帧数
.参数 dwStartFrame, 整数型, , 播放起始帧数
.参数 dwStopFrame, 整数型, , 播放停止帧数

.子程序 P_SUITypedf_AniImage, 整数型, 公开, Public SUI获取SUITypedf_AniImage指针
.参数 SUITypedf_AniImage, SUITypedf_AniImage, 参考

.子程序 RGB到ARGB, 整数型, 公开
.参数 参数_RGB, 整数型
.参数 参数_透明度, 字节型, 可空, 默认为255，不透明。

.子程序 SUI_Initialize, 整数型, 公开, Public 初始化SUI引擎
.参数 Bkg, 字节集, , 全局背景图片
.参数 bGdiPlus, 逻辑型, 可空, 是否已经初始化过了Gdi+库
.参数 bCustomMouse, 逻辑型, 可空, 是否使用引擎鼠标

.子程序 SUI_LoadResource, , 公开, Public 加载SUI引擎默认资源

.子程序 SUI_Remove, , 公开, Public 移除SUI引擎（进程结束之前必须调用）
.参数 bGdiPlus, 逻辑型, , 是否卸载Gdi+库

.子程序 SUIAddWinExStyle, 逻辑型, 公开, Public 添加窗口扩展风格
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUIAddWinStyle, 逻辑型, 公开, Public 添加窗口风格
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUIBlurImage, , 公开, Public SUI模糊图像
.参数 Image, GP图像
.参数 BlurRadius, 整数型

.子程序 SUIColorType, 整数型, 公开, Public SUI获取颜色类型 属于黑色系还是白色系
.参数 Color, 整数型

.子程序 SUIContraryColor, 整数型, 公开, Public SUI取相反颜色
.参数 Color, 整数型

.子程序 SUICursor, 逻辑型, 公开, Public 设置引擎鼠标风格
.参数 Type, 整数型, , 要设置的鼠标类型 #SUI_Mouse_
.参数 Cur, SUITypedf_Cur, , SUITypedf_Cur结构 通过SUILoadCur获得

.子程序 SUIDebug, 逻辑型, 公开, Public 设置引擎调试模式
.参数 Bool, 逻辑型, 可空, 空为获取当前模式

.子程序 SUIDebugString, , 公开, Public 输出调试文本 易语言或调试器能接收到调试文本信息
.参数 Str, 文本型

.子程序 SUIDeleteCur, 逻辑型, 公开, Public 销毁SUILoadCur加载的鼠标指针 成功否会真 失败返回假
.参数 Cur, SUITypedf_Cur, 参考

.子程序 SUIDeleteImage, 逻辑型, 公开, Public 销毁SUILoadImage加载的图片
.参数 pImage, 整数型, , 图片指针

.子程序 SUIDelTimer, , 公开, Public SUI移除定时器
.参数 hTimerQueue, 整数型
.参数 hTimer, 整数型, 参考, 定时器句柄

.子程序 SUIDelTimerEx, , 公开, Public SUI移除所有定时器
.参数 hTimerQueue, 整数型, 参考

.子程序 SUIDiluteColor, 整数型, 公开, Public SUI淡化颜色
.参数 Color, 整数型
.参数 Times, 整数型, 可空

.子程序 SUIDispatchHwndMessage, 整数型, 公开, Public 引擎窗口消息循环
.参数 hWnd, 整数型, , 监视窗口句柄
.参数 phWnd, 整数型, , 监视窗口句柄指针
.参数 ParentHwnd, 整数型, 参考, 父窗口句柄

.子程序 SUIDispatchMessage, 整数型, 公开, Public 引擎总体消息循环

.子程序 SUIDrawAniImageBkg, , 公开, Public SUI绘制某背景
.参数 pGraphic, 整数型
.参数 Left, 整数型
.参数 Top, 整数型
.参数 Width, 整数型
.参数 Height, 整数型, , 当前仅能设置为38

.子程序 SUIDrawGraphicText, , 公开, Public SUI画文本
.参数 OriginalGraphic, GP图形
.参数 RectL, 矩形L
.参数 MemberText, MemberText

.子程序 SUIDrawpGraphicText, , 公开, Public SUI图形指针画文本
.参数 pGraphic, 整数型
.参数 Rect, Rect
.参数 MemberText, MemberText

.子程序 SUIFontName, 文本型, 公开, Public 设置引擎全局默认字体
.参数 Font, 文本型, 可空, 空为获取默认字体

.子程序 SUIHoverTime, 整数型, 公开, Public 设置引擎全局悬浮回调时间 原始默认为500ms
.参数 dwMS, 整数型, 可空, 单位ms 

.子程序 SUIImageColorRGB, 整数型, 公开, Public SUI获取图像颜色主色调
.参数 Buffer, 字节集

.子程序 SUIInitTimer, 整数型, 公开, Public SUI初始化定时器 返回hTimerQueue

.子程序 SUIIsDispatchMessage, 逻辑型, 公开, Public 引擎结束循环
.参数 Bool, 逻辑型, 可空, 为空获取

.子程序 SUIIsWinExStyleExist, 逻辑型, 公开, Public 窗口扩展风格是否存在
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUIIsWinStyleExist, 逻辑型, 公开, Public 窗口风格是否存在
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUILoadCur, SUITypedf_Cur, 公开, Public 加载鼠标Cur文件返回SUITypedf_Cur类型
.参数 Image, 字节集

.子程序 SUILoadDll, 整数型, 公开, Public SUI加载Dll
.参数 lpLibFileName, 文本型

.子程序 SUILoadImage, 整数型, 公开, Public 加载图片返回图片指针
.参数 Image, 字节集
.参数 NewWidth, 整数型, 可空, 缩放图片宽度
.参数 NewHeight, 整数型, 可空, 缩放图片高度

.子程序 SUILoadImages, 逻辑型, 公开, Public 加载横排多张图片
.参数 Image, 字节集
.参数 OriginalWidth, 整数型, 数组, 原图每张图的宽度
.参数 bSplitLine, 逻辑型, , 原图是否有分割线
.参数 NewWidth, 整数型, 可空, 每张图片缩放宽度
.参数 NewHeight, 整数型, 可空, 每张图片缩放高度
.参数 pImages, 整数型, 参考 数组, 返回每张图片的指针

.子程序 SUIMeasureText, 矩形L, 公开, Public SUI测量文本矩形
.参数 Text, 文本型
.参数 Width, 整数型, 可空
.参数 Size, 整数型, 可空, 大小
.参数 Bold, 逻辑型, 可空, 加粗
.参数 AutoLine, 逻辑型, 可空, 换行
.参数 VerticalDirection, 逻辑型, 可空, 垂直
.参数 DirectionRightToLeft, 逻辑型, 可空, 从右到左
.参数 HorizontalDirection, 整数型, 可空, #对齐方式_
.参数 LongitudinalDirection, 整数型, 可空, #对齐方式_

.子程序 SUIMixColor, 整数型, 公开, Public SUI混合颜色
.参数 ColorA, 整数型
.参数 ColorB, 整数型

.子程序 SUIOpenLink, 逻辑型, 公开, Public SUI以系统默认浏览器打开一个网页
.参数 Url, 文本型, , 网址

.子程序 SUIRegisteredClass, 整数型, 公开, Public 引擎注册窗口类
.参数 lpfnWndProc, 整数型, , 回调函数
.参数 lpszClassName, 文本型, , 类名
.参数 bLayerd, 逻辑型, , Layer窗口

.子程序 SUIRemoveWinExStyle, 逻辑型, 公开, Public 移除窗口扩展风格
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUIRemoveWinStyle, 逻辑型, 公开, Public 移除窗口风格
.参数 hWnd, 整数型
.参数 Style, 整数型

.子程序 SUISetTimer, 整数型, 公开, Public SUI设置定时器 返回定时器句柄
.参数 hTimerQueue, 整数型
.参数 pCallBack, 整数型, , 回调地址
.参数 Parameter, 整数型, , 参数
.参数 Period, 整数型, , 周期

.子程序 SUIShadowColor, 整数型, 公开, Public 设置引擎全局阴影颜色
.参数 Color, 整数型, 可空, 空为获取默认颜色

.子程序 SUIStyleColor, 整数型, 公开, Public 设置引擎全局窗口风格颜色
.参数 Color, 整数型, 可空, 空为获取默认颜色

.子程序 SUISuperSleep, , 公开, Public SUI高精度延时
.参数 seconds, 整数型

.子程序 SUITemplete, 整数型, 公开, Public 设置当前引擎风格
.参数 Value, 整数型, 可空, #SUI_Templete_

.子程序 SUITextColor, 整数型, 公开, Public 设置引擎全局文字颜色
.参数 Color, 整数型, 可空, 空为获取默认颜色

.子程序 SUIUnicodetoAnsi, 文本型, 公开, Public SUI转换UNICODE为ANSI
.参数 Unicode, 字节集

.子程序 SUIWinOS, 整数型, 公开, Public SUI取系统版本 0.未知； 1.Win95； 2.Win98； 3.WinME； 4.WinNT； 5.Win2000； 6.WinXP； 7.Win2003； 8.Vista 9.win7 10.Win8

.子程序 取宽文本长度, 整数型, 公开, lstrlenw
.参数 参数_Unicode文本, 字节集

.子程序 取图像编码CLSID自Mime, 文本型, 公开, GetCodecClsid
.参数 参数_Mime, 文本型, , 只能是如下值：“image/bmp”、“image/jpeg”、“image/gif”、“image/tiff”、“image/png”

.子程序 取图像编码CLSID自图像格式, 文本型, 公开, GetCodecClsid
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量

.子程序 取图像编码列表, 整数型, 公开, GetImageEncoders 返回图像编码列表数。
.参数 参数_图像编码信息, 图像编解码信息, 数组

.子程序 取图像解码列表, 整数型, 公开, GetImageDecoders 返回图像解码列表数。
.参数 参数_信息, 图像编解码信息, 数组

.子程序 文本到GUDI, 字节集, 公开, CLSIDFromString
.参数 参数_文本, 文本型

.子程序 制矩形F, 矩形F, 公开, MakeRectF
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型, 可空
.参数 参数_高度, 小数型, 可空

.子程序 制矩形L, 矩形L, 公开, MakeRectL
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型, 可空
.参数 参数_高度, 整数型, 可空

.子程序 制坐标F, 坐标F, 公开, MakePointF
.参数 参数_x, 小数型
.参数 参数_y, 小数型

.子程序 制坐标L, 坐标L, 公开, MakePointL
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.数据类型 APM文件头, 公开, APMFileHeader
    .成员 标识, 整数型, , , Key。指示一个可放置图元文件头的存在。此值始终为2596720087
    .成员 句柄, 短整数型, , , hmf。当写入磁盘后，此句柄值为0。
    .成员 范围矩形, 矩形16, , , BoundingBox
    .成员 英寸, 短整数型, , , Inch。每英寸点数。通常为1440。
    .成员 保留, 整数型, , , Reserved
    .成员 校验, 短整数型, , , Checksum。该成员可以检测图元文件是否损坏。

.数据类型 EMF文件头, 公开
    .成员 类型, 整数型, , , Type。EMR_HEADER
    .成员 大小, 整数型, , , Size
    .成员 边界矩形, 矩形L, , , rclBounds
    .成员 框架矩形, 矩形L, , , rclFrame
    .成员 签名, 整数型, , , dSignature。ENHMETA_SIGNATURE
    .成员 版本, 整数型, , , nVersion
    .成员 字节数, 整数型, , , nBytes
    .成员 记录数, 整数型, , , nRecords
    .成员 句柄数, 短整数型, , , nHandles
    .成员 保留, 短整数型, , , sReserved
    .成员 描述数, 整数型, , , nDescription
    .成员 描述偏移, 整数型, , , offDescription
    .成员 调色板项目数, 整数型, , , nPalEntries
    .成员 设备像素尺寸, 尺寸L, , , szlDevice
    .成员 设备毫米尺寸, 尺寸L, , , szlMillimeters

.数据类型 MemberText, 公开
    .成员 Str, 文本型
    .成员 BakUNI, UNICODE_STRING
    .成员 UNI, UNICODE_STRING
    .成员 Caret, xy
    .成员 ShowCaret, 短整数型
    .成员 SelectCaret, 短整数型
    .成员 SelectShowCaret, 短整数型
    .成员 SelectLength, 短整数型
    .成员 bRecoverCaret, 逻辑型
    .成员 OldCaret, 短整数型
    .成员 OldShowCaret, 短整数型
    .成员 SelectColor, 整数型
    .成员 SelectBkgColor, 整数型
    .成员 SelectX, 整数型
    .成员 MaxShowLen, 整数型
    .成员 MaxLen, 整数型
    .成员 Type, 整数型
    .成员 bNumber, 逻辑型
    .成员 bLetter, 逻辑型
    .成员 bChinese, 逻辑型
    .成员 bSymbol, 逻辑型
    .成员 Color, 整数型
    .成员 Size, 整数型
    .成员 bShadow, 逻辑型
    .成员 bUnderLine, 逻辑型
    .成员 bDelLine, 逻辑型
    .成员 bBold, 逻辑型
    .成员 bAutoTab, 逻辑型
    .成员 bVerticalDirection, 逻辑型
    .成员 bDirectionRightToLeft, 逻辑型
    .成员 HorizontalDirection, 整数型
    .成员 LongitudinalDirection, 整数型
    .成员 hFont, 整数型
    .成员 hMemDc, 整数型

.数据类型 Rect, 公开
    .成员 left, 整数型
    .成员 top, 整数型
    .成员 right, 整数型
    .成员 bottom, 整数型

.数据类型 SUITypedf_AniImage, 公开, SUI动画图片框类型
    .成员 pBkg, 整数型, , , 背景指针 若小于#Limit则为第几帧作为背景 若为-1则无背景绘制
    .成员 pAniImage, 整数型, , , 动态图片指针
    .成员 bSplitLine, 逻辑型, , , 原图是否有分割线
    .成员 dwTotalFrame, 整数型, , , 原图总帧数
    .成员 dwStartFrame, 整数型, , , 播放起始帧数
    .成员 dwStopFrame, 整数型, , , 播放停止帧数

.数据类型 SUITypedf_Cur, 公开, SUI鼠标类型
    .成员 pImage, 整数型, , , 鼠标句柄
    .成员 pReserved, 整数型, , , 保留

.数据类型 SUITypedf_MsgBox_Button, 公开, SUI信息框按钮类型
    .成员 Str, 文本型, , , 按钮名称
    .成员 pImage, 整数型, , , 按钮图标句柄
    .成员 bImageSize, 逻辑型, , , T:Big F:Samll

.数据类型 UNICODE_STRING, 公开
    .成员 Length, 短整数型
    .成员 MaximumLength, 短整数型
    .成员 Buffer, 整数型

.数据类型 xy, 公开
    .成员 x, 整数型
    .成员 y, 整数型

.数据类型 编码器参数, 公开, EncoderParameter
    .成员 编码器Guid, 文本型, , , Guid。“编码器_”开头常量
    .成员 值成员数, 整数型, , , NumberOfValues
    .成员 值类型, 整数型, , , Type。“编码器参数值类型_”开头常量
    .成员 值, 字节集, , , Value。

.数据类型 编码器参数集, 公开, EncoderParameters
    .成员 参数数量, 整数型
    .成员 编码器参数, 编码器参数, , "1"

.数据类型 测试字符范围, 公开, CharacterRange
    .成员 起始位置, 整数型, , , First
    .成员 长度, 整数型, , , Length

.数据类型 尺寸F, 公开, SizeF
    .成员 宽度, 小数型, , , Width
    .成员 高度, 小数型, , , Height

.数据类型 尺寸L, 公开, SizeL
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height

.数据类型 红眼修正参数, 公开, RedEyeCorrectionParams 
    .成员 区域数, 整数型, , , numberOfAreas
    .成员 区域, 矩形L, , "1", areas

.数据类型 矩形16, 公开, Rect16
    .成员 左边, 短整数型, , , left
    .成员 顶边, 短整数型, , , top
    .成员 宽度, 短整数型, , , Width
    .成员 高度, 短整数型, , , Height

.数据类型 矩形F, 公开, RectF
    .成员 左边, 小数型, , , left
    .成员 顶边, 小数型, , , top
    .成员 宽度, 小数型, , , Width
    .成员 高度, 小数型, , , Height

.数据类型 矩形L, 公开, RectL
    .成员 左边, 整数型, , , left
    .成员 顶边, 整数型, , , top
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height

.数据类型 亮度对比度参数, 公开, BrightnessContrastParams 
    .成员 亮度, 整数型, , , brightness 0到255之间
    .成员 对比度, 整数型, , , Contrast 0到100之间

.数据类型 路径数据, 公开, PathData
    .成员 总数, 整数型, , , Count
    .成员 坐标组, 坐标F, , "1", Points
    .成员 类型组, 字节型, , "1", Types

.数据类型 模糊参数, 公开, BlurParams
    .成员 半径, 小数型, , , radius 0到255之间
    .成员 是否扩大边缘, 逻辑型, , , expandEdge 

.数据类型 锐化参数, 公开, SharpenParams
    .成员 半径, 小数型, , , radius 0到255之间
    .成员 数量, 小数型, , , amount 0到100之间

.数据类型 色彩平衡参数, 公开, ColorBalanceParams
    .成员 青与红, 整数型, , , cyanRed -100到100之间
    .成员 品与绿, 整数型, , , magentaGreen -100到100之间
    .成员 黄与蓝, 整数型, , , yellowBlue -100到100之间

.数据类型 色彩映射表, 公开, ColorMap
    .成员 原颜色, 整数型, , , ARGB颜色
    .成员 新颜色, 整数型, , , ARGB颜色

.数据类型 色阶参数, 公开, LevelsParams
    .成员 高光, 整数型, , , highlight 
    .成员 中间色调, 整数型, , , midtone 
    .成员 阴影, 整数型, , , shadow 

.数据类型 色调参数, 公开, TintParams
    .成员 色调, 整数型, , , hue -180到180之间
    .成员 数量, 整数型, , , amount -100到100之间

.数据类型 色相饱和亮度参数, 公开, HueSaturationLightnessParams
    .成员 色相, 整数型, , , hueLevel -180到180之间
    .成员 饱和度, 整数型, , , saturationLevel 0到100之间
    .成员 亮度, 整数型, , , lightnessLevel -100到100之间

.数据类型 属性项目, 公开, PropertyItem
    .成员 属性标签, 整数型, , , id“属性标签_”开头常量
    .成员 值大小, 整数型, , , length
    .成员 值类型, 整数型, , , type“属性值类型_”开头常量
    .成员 值, 字节集, , , value

.数据类型 图像编解码信息, 公开, ImageCodecInfo
    .成员 Clsid, 文本型
    .成员 图像格式ID, 文本型, , , FormatID
    .成员 编码器名, 文本型, , , CodecName
    .成员 DLL名, 文本型, , , DllName
    .成员 格式描述, 文本型, , , FormatDescription
    .成员 文件扩展名, 文本型, , , FilenameExtension
    .成员 Mime类型, 文本型, , , MimeType
    .成员 标志, 整数型, , , Flags
    .成员 版本, 整数型, , , Version
    .成员 签名数, 整数型, , , SigCount
    .成员 签名大小, 整数型, , , SigSize
    .成员 签名模式, 字节集, , , SigPattern
    .成员 签名掩码, 字节集, , , SigMask

.数据类型 图元文件头, 公开, MetafileHeader
    .成员 类型, 整数型, , , Type“图元文件类型_”开头常量。
    .成员 大小, 整数型, , , Size
    .成员 版本, 整数型, , , Version
    .成员 增强EMF标识, 整数型, , , EmfPlusFlags
    .成员 水平分辨率, 小数型, , , DpiX
    .成员 垂直分辨率, 小数型, , , DpiY
    .成员 左边, 整数型, , , X
    .成员 顶边, 整数型, , , Y
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height
    .成员 EMF文件头, EMF文件头, , , EmfHeader
    .成员 增强EMF大小, 整数型, , , EmfPlusHeaderSize
    .成员 逻辑水平分辨率, 整数型, , , LogicalDpiX
    .成员 逻辑垂直分辨率, 整数型, , , LogicalDpiY

.数据类型 位图数据, 公开, BitmapData
    .成员 宽度, 整数型, , , Width
    .成员 高度, 整数型, , , Height
    .成员 跨步, 整数型, , , Stride。指定相邻扫描行开始处之间字节偏移量的整数。这通常（但不一定）是以像素格式表示的字节数（例如，2 表示每像素 16 位）乘以位图的宽度。传递给此参数的值必须为 4 的倍数
    .成员 像素格式, 整数型, , , PixelFormat“像素格式_”开头常量。
    .成员 像素数据, 整数型, , , Scan0。指向包含像素数据的字节集指针。
    .成员 保留, 整数型, , , Reserved

.数据类型 颜色查找表参数, 公开, ColorLUTParams
    .成员 蓝色通道, 字节型, , "256", lutB
    .成员 绿色通道, 字节型, , "256", lutG
    .成员 红色通道, 字节型, , "256", lutR
    .成员 透明通道, 字节型, , "256", lutA

.数据类型 颜色曲线参数, 公开, ColorCurveParams
    .成员 调整类型, 整数型, , , adjustment “曲线调整_”开头常量
    .成员 通道, 整数型, , , channel “曲线通道_”开头常量
    .成员 调整值, 整数型, , , adjustValue 范围值具体见 “调整类型”成员常量的备注

.数据类型 颜色调色板, 公开, ColorPalette
    .成员 标志, 整数型, , , “调色板标志_”开头常量。
    .成员 数量, 整数型
    .成员 ARGB颜色, 整数型, , "1"

.数据类型 坐标F, 公开, PointF
    .成员 x, 小数型
    .成员 y, 小数型

.数据类型 坐标L, 公开, PointL
    .成员 x, 整数型
    .成员 y, 整数型

.程序集 GP纯色画刷, , 公开, SolidBrush 基类：GP画刷

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_ARGB颜色, 整数型, , 需要将RGB颜色转换为ARGB颜色。

.子程序 复制, 逻辑型, 公开, Clone 将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, , 参考

.子程序 取类型, 整数型, 公开, GetType 返回“#画刷类型_”开头常量。

.子程序 取颜色, 整数型, 公开, GetColor

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteBrush

.子程序 置颜色, 逻辑型, 公开, SetColor
.参数 参数_ARGB颜色, 整数型

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP红眼修正类, GP效果类, 公开, RedEyeCorrection 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateRedEyeCorrection

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_红眼修正参数, 红眼修正参数

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_红眼修正参数, 红眼修正参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP画笔, , 公开, Pen

.子程序 变形平移, 逻辑型, 公开, TranslateTransform。
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 创建自画刷, 逻辑型, 公开, CreateFromBrush
.参数 参数_画刷, 
.参数 参数_宽度, 小数型
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。默认为：“单位_世界坐标”

.子程序 创建自颜色, 逻辑型, 公开, CreateFromColor
.参数 参数_ARGB颜色, 整数型, , 需要将RGB颜色转换为ARGB颜色。
.参数 参数_宽度, 小数型
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。默认为：“单位_世界坐标”

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_画笔, GP画笔, 参考

.子程序 取单位, 整数型, 公开, GetUnit。返回“单位_”开头常量。

.子程序 取对齐方式, 整数型, 公开, GetAlignment 返回“画笔对齐方式_”开头常量。

.子程序 取分割数组, 整数型, 公开, GetCompoundArray 返回分割数。
.参数 参数_分割数组, 小数型, 参考 数组

.子程序 取画刷, 逻辑型, 公开, GetBrush
.参数 参数_画刷, , 参考

.子程序 取宽度, 小数型, 公开, GetWidth

.子程序 取类型, 整数型, 公开, GetPenType 返回“画笔类型_”开头常量。

.子程序 取连线方式, 整数型, 公开, GetLineJoin。返回“连线方式_”开头常量。

.子程序 取起点线帽, 整数型, 公开, GetStartCap

.子程序 取斜接限制, 小数型, 公开, GetMiterLimit

.子程序 取虚线格式, 整数型, 公开, GetDashPattern 返回虚线格式数量。
.参数 参数_虚线格式, 小数型, 参考 数组

.子程序 取虚线类型, 整数型, 公开, GetDashStyle 返回“虚线类型_”开头常量。

.子程序 取虚线帽, 整数型, 公开, GetDashCap

.子程序 取虚线帽197819, 整数型, 公开, GetDashCap197819

.子程序 取虚线偏移, 小数型, 公开, GetDashOffset

.子程序 取颜色, 整数型, 公开, GetColor 返回ARGB颜色值。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取终点线帽, 整数型, 公开, GetEndCap

.子程序 取自定起点线帽, 逻辑型, 公开, SetCustomStartCap
.参数 参数_自定义线帽, GP自定义线帽, 参考

.子程序 取自定终点线帽, 逻辑型, 公开, GetCustomEndCap
.参数 参数_自定义线帽, GP自定义线帽, 参考

.子程序 销毁, 逻辑型, 公开, DeletePen

.子程序 置单位, 逻辑型, 公开, SetUnit
.参数 参数_单位, 小数型, , “单位_”开头常量。

.子程序 置对齐方式, 逻辑型, 公开, SetAlignment
.参数 参数_对齐方式, 整数型, , “画笔对齐方式_”开头常量。

.子程序 置分割数组, 逻辑型, 公开, SetCompoundArray 将画笔画出的线分割成若干条。
.参数 参数_分割数组, 小数型, 数组, 成员值必须是0到1之间的小数，且必须是升序。如：{0,0.2,0.7,1}，表示分割成两条线，第1条线宽度为20%，中间的空白宽度为50%，第2条线宽度为30%

.子程序 置画刷, 逻辑型, 公开, SetBrush
.参数 参数_画刷, 

.子程序 置宽度, 逻辑型, 公开, SetWidth
.参数 参数_宽度, 小数型

.子程序 置连线方式, 逻辑型, 公开, SetLineJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。

.子程序 置起点线帽, 逻辑型, 公开, SetStartCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量。

.子程序 置线帽, 逻辑型, 公开, SetLineCap
.参数 参数_起点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_终点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_虚线帽, 整数型, , “虚线帽样式_”开头常量。

.子程序 置线帽197819, 逻辑型, 公开, SetLineCap197819
.参数 参数_起点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_终点帽, 整数型, , “线帽样式_”开头常量。
.参数 参数_虚线帽, 整数型, , “虚线帽样式_”开头常量。

.子程序 置斜接限制, 逻辑型, 公开, SetMiterLimit
.参数 参数_斜接限制, 小数型

.子程序 置虚线格式, 逻辑型, 公开, SetDashPattern
.参数 参数_虚线格式, 小数型, 数组, 第一个成员表示虚线长度，第二个成员表示空白长度，以此类推。

.子程序 置虚线类型, 逻辑型, 公开, SetDashStyle
.参数 参数_虚线类型, 整数型, , “虚线类型_”开头常量。

.子程序 置虚线帽, 逻辑型, 公开, SetDashCap
.参数 参数_虚线帽样式, 整数型, , “虚线帽样式_”开头常量

.子程序 置虚线偏移, 逻辑型, 公开, SetDashOffset。
.参数 参数_偏移, 小数型

.子程序 置颜色, 逻辑型, 公开, SetColor
.参数 参数_ARGB颜色, 整数型

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 置终点线帽, 逻辑型, 公开, SetEndCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量。

.子程序 置自定起点线帽, 逻辑型, 公开, SetCustomStartCap
.参数 参数_自定义线帽, GP自定义线帽

.子程序 置自定终点线帽, 逻辑型, 公开, SetCustomEndCap
.参数 参数_自定义线帽, GP自定义线帽

.程序集 GP缓存图形, GP图形, 公开

.子程序 保存, 整数型, 公开, Save 返回状态

.子程序 变形平移, 逻辑型, 公开, TranslateTransform
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考, Matrix

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵, , Matrix
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先”

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵, , Matrix

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 测量文本矩形, 逻辑型, 公开, MeasureString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_参考矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空
.参数 参数_测量矩形, 矩形F, 参考, 返回测量“参数_文本”所需要的矩形。

.子程序 测量文本矩形W, 逻辑型, 公开, MeasureString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_参考矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空
.参数 参数_测量矩形, 矩形F, 参考, 返回测量“参数_文本”所需要的矩形。

.子程序 测量文本区域, 逻辑型, 公开, MeasureCharacterRanges
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_矩形布局, 矩形F
.参数 参数_文本格式, GP文本格式, , 设置 文本格式.置测量字符范围()
.参数 参数_区域数, 整数型
.参数 参数_区域集, GP区域, 参考 数组, 返回区域数组。

.子程序 测量文本区域W, 逻辑型, 公开, MeasureCharacterRanges
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_矩形布局, 矩形F
.参数 参数_文本格式, GP文本格式, , 设置 文本格式.置测量字符范围()
.参数 参数_区域数, 整数型
.参数 参数_区域集, GP区域, 参考 数组, 返回区域数组。

.子程序 创建, 逻辑型, 公开, Create，仅缓存图形使用。
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 创建自DC, 逻辑型, 公开, CreateFromHDC
.参数 参数_hDC, 整数型
.参数 参数_hdevice, 整数型, 可空

.子程序 创建自窗口句柄, 逻辑型, 公开, CreateFromHWND
.参数 参数_窗口句柄, 整数型
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用ICC文件调整颜色。

.子程序 创建自图像, 逻辑型, 公开, CreateFromImage
.参数 参数_Gdiplus图像, GP图像

.子程序 更新到hdc, 逻辑型, 公开, BitBlt，此方法不支持透明，但速度最快
.参数 参数_hdc, 整数型
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_源左边, 整数型, 可空
.参数 参数_源顶边, 整数型, 可空

.子程序 更新到hdc_透明, 逻辑型, 公开, AlphaBlend
.参数 参数_hdc, 整数型
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_源左边, 整数型, 可空
.参数 参数_源顶边, 整数型, 可空
.参数 参数_源宽度, 整数型, 可空
.参数 参数_源高度, 整数型, 可空
.参数 参数_透明度, 整数型, 可空, 0-255，默认为255

.子程序 更新到图形, 逻辑型, 公开, BitBlt，此方法不支持透明，但速度最快
.参数 参数_图形, GP图形
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_源左边, 整数型, 可空
.参数 参数_源顶边, 整数型, 可空

.子程序 更新到图形_透明, 逻辑型, 公开, AlphaBlend
.参数 参数_图形, GP图形
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_源左边, 整数型, 可空
.参数 参数_源顶边, 整数型, 可空
.参数 参数_源宽度, 整数型, 可空
.参数 参数_源高度, 整数型, 可空
.参数 参数_透明度, 整数型, 可空, 0-255，默认为255

.子程序 画贝塞尔曲线, 逻辑型, 公开, DrawBezier
.参数 参数_画笔, GP画笔
.参数 参数_x1, 小数型
.参数 参数_y1, 小数型
.参数 参数_x2, 小数型
.参数 参数_y2, 小数型
.参数 参数_x3, 小数型
.参数 参数_y3, 小数型
.参数 参数_x4, 小数型
.参数 参数_y4, 小数型

.子程序 画贝塞尔曲线I, 逻辑型, 公开, DrawBezierI
.参数 参数_画笔, GP画笔
.参数 参数_x1, 整数型
.参数 参数_y1, 整数型
.参数 参数_x2, 整数型
.参数 参数_y2, 整数型
.参数 参数_x3, 整数型
.参数 参数_y3, 整数型
.参数 参数_x4, 整数型
.参数 参数_y4, 整数型

.子程序 画贝塞尔曲线组, 逻辑型, 公开, DrawBeziers “参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画贝塞尔曲线组I, 逻辑型, 公开, DrawBeziersI “参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画闭合曲线, 逻辑型, 公开, DrawClosedCurve 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画闭合曲线2, 逻辑型, 公开, DrawClosedCurve2 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 画闭合曲线2I, 逻辑型, 公开, DrawClosedCurve2I 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 画闭合曲线I, 逻辑型, 公开, DrawClosedCurveI 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画饼, 逻辑型, 公开, DrawPie
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画饼I, 逻辑型, 公开, DrawPieI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画多边形, 逻辑型, 公开, DrawPolygon
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画多边形I, 逻辑型, 公开, DrawPolygonI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画缓存位图, 逻辑型, 公开, DrawCachedBitmap
.参数 参数_缓存位图, GP缓存位图
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型

.子程序 画矩形, 逻辑型, 公开, DrawRectangle
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 画矩形I, 逻辑型, 公开, DrawRectangleI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 画矩形组, 逻辑型, 公开, DrawRectangles
.参数 参数_画笔, GP画笔
.参数 参数_矩形组, 矩形F, 数组

.子程序 画矩形组I, 逻辑型, 公开, DrawRectanglesI
.参数 参数_画笔, GP画笔
.参数 参数_矩形组, 矩形L, 数组

.子程序 画控制文本, 逻辑型, 公开, DrawDriverString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_坐标集, 坐标F, 数组, 每一个坐标指定每个文本所在的位置。
.参数 参数_标志, 整数型, 可空, “控制文本标志_”开头常量组合。默认为：“控制文本标志_映射查找”
.参数 参数_矩阵, GP矩阵, 可空

.子程序 画控制文本W, 逻辑型, 公开, DrawDriverString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_坐标集, 坐标F, 数组, 每一个坐标指定每个文本所在的位置。
.参数 参数_标志, 整数型, 可空, “控制文本标志_”开头常量组合。默认为：“控制文本标志_映射查找”
.参数 参数_矩阵, GP矩阵, 可空

.子程序 画路径, 逻辑型, 公开, DrawPath
.参数 参数_画笔, GP画笔
.参数 参数_路径, GP路径

.子程序 画曲线, 逻辑型, 公开, DrawCurve
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画曲线2, 逻辑型, 公开, DrawCurve2
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 画曲线2I, 逻辑型, 公开, DrawCurve2I
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 画曲线3, 逻辑型, 公开, DrawCurve3
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 画曲线3I, 逻辑型, 公开, DrawCurve3I
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 画曲线I, 逻辑型, 公开, DrawCurveI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画图像, 逻辑型, 公开, DrawImage
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型

.子程序 画图像I, 逻辑型, 公开, DrawImageI
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型

.子程序 画图像变形, 逻辑型, 公开, GdipDrawImagePoints 可以画出平行四边形的图像。
.参数 参数_图像, GP图像
.参数 参数_左上角X, 小数型
.参数 参数_左上角Y, 小数型
.参数 参数_右上角X, 小数型
.参数 参数_右上角Y, 小数型
.参数 参数_左下角X, 小数型
.参数 参数_左下角Y, 小数型

.子程序 画图像变形I, 逻辑型, 公开, GdipDrawImagePointsI 可以画出平行四边形的图像。
.参数 参数_图像, GP图像
.参数 参数_左上角X, 整数型
.参数 参数_左上角Y, 整数型
.参数 参数_右上角X, 整数型
.参数 参数_右上角Y, 整数型
.参数 参数_左下角X, 整数型
.参数 参数_左下角Y, 整数型

.子程序 画图像变形部分, 逻辑型, 公开, DrawImagePointsRect 可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左上角X, 小数型
.参数 参数_左上角Y, 小数型
.参数 参数_右上角X, 小数型
.参数 参数_右上角Y, 小数型
.参数 参数_左下角X, 小数型
.参数 参数_左下角Y, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像变形部分I, 逻辑型, 公开, DrawImagePointsRectI 可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左上角X, 整数型
.参数 参数_左上角Y, 整数型
.参数 参数_右上角X, 整数型
.参数 参数_右上角Y, 整数型
.参数 参数_左下角X, 整数型
.参数 参数_左下角Y, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像部分, 逻辑型, 公开, DrawImagePointRect 可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像部分I, 逻辑型, 公开, DrawImagePointRectI 可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放, 逻辑型, 公开, GdipDrawImageRect 按照指定的矩形缩放图像。
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放I, 逻辑型, 公开, GdipDrawImageRectI 按照指定的矩形缩放图像。
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放部分, 逻辑型, 公开, DrawImageRectRect 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像缩放部分I, 逻辑型, 公开, DrawImageRectRectI 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像指针缩放部分, 逻辑型, 公开, DrawImageRectRect 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, 整数型
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画椭圆, 逻辑型, 公开, DrawEllipse
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 画椭圆I, 逻辑型, 公开, DrawEllipseI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 画文本, 逻辑型, 公开, DrawString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空

.子程序 画文本W, 逻辑型, 公开, DrawString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空

.子程序 画圆弧, 逻辑型, 公开, DrawArc 以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画圆弧I, 逻辑型, 公开, DrawArcI 以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画直线, 逻辑型, 公开, DrawLine
.参数 参数_画笔, GP画笔
.参数 参数_起始x, 小数型
.参数 参数_起始y, 小数型
.参数 参数_结束x, 小数型
.参数 参数_结束y, 小数型

.子程序 画直线I, 逻辑型, 公开, DrawLineI
.参数 参数_画笔, GP画笔
.参数 参数_起始x, 整数型
.参数 参数_起始y, 整数型
.参数 参数_结束x, 整数型
.参数 参数_结束y, 整数型

.子程序 画直线组, 逻辑型, 公开, DrawLines
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画直线组I, 逻辑型, 公开, DrawLinesI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 恢复, 逻辑型, 公开, Restore 恢复状态
.参数 参数_状态, 整数型, , 由“保存()”返回的值。

.子程序 获取DC, 整数型, 公开, GetDC 返回当前图形对象的DC句柄。不用后用“对象.释放DC”释放设备场景句柄

.子程序 结束容器, 逻辑型, 公开, EndContainer 结束一个绘制状态。
.参数 参数_状态, 整数型

.子程序 开始容器, 整数型, 公开, BeginContainer 返回状态。
.参数 参数_目标矩形, 矩形F
.参数 参数_源矩形, 矩形F
.参数 参数_单位, 整数型, 可空

.子程序 开始容器2, 整数型, 公开, BeginContainer2 建一个新绘图状态，返回状态。

.子程序 开始容器I, 整数型, 公开, BeginContainerI 建一个新绘图状态，返回状态。
.参数 参数_目标矩形, 矩形L
.参数 参数_源矩形, 矩形L
.参数 参数_单位, 整数型, 可空

.子程序 列举图元文件目的矩形, 逻辑型, 公开, EnumerateMetafileDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形F
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的矩形I, 逻辑型, 公开, EnumerateMetafileDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形L
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标, 逻辑型, 公开, EnumerateMetafileDestPoint 这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标F
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标I, 逻辑型, 公开, EnumerateMetafileDestPointI 这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标集, 逻辑型, 公开, EnumerateMetafileDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标F, 数组
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标集I, 逻辑型, 公开, EnumerateMetafileDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标L, 数组
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的矩形, 逻辑型, 公开, EnumerateMetafileSrcRectDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形F
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的矩形I, 逻辑型, 公开, EnumerateMetafileSrcRectDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形L
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标, 逻辑型, 公开, EnumerateMetafileSrcRectDestPoint。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标F
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标I, 逻辑型, 公开, EnumerateMetafileSrcRectDestPointI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标集, 逻辑型, 公开, EnumerateMetafileSrcRectDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标F, 数组
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标集I, 逻辑型, 公开, EnumerateMetafileSrcRectDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L, 数组
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 平移剪辑区, 逻辑型, 公开, TranslateClip
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型

.子程序 平移剪辑区I, 逻辑型, 公开, TranslateClipI
.参数 参数_水平偏移量, 整数型
.参数 参数_垂直偏移量, 整数型

.子程序 清除, 逻辑型, 公开, GraphicsClear 清除整个绘图面，并以指定色填充。
.参数 参数_ARGB颜色, 整数型, 可空, 默认为透明

.子程序 取垂直分辨率, 小数型, 公开, GetDpiY

.子程序 取混合模式, 整数型, 公开, GetCompositingMode。“混合模式_”开头常量。

.子程序 取混合品质, 整数型, 公开, GetCompositingQuality。“混合品质_”开头常量。

.子程序 取剪辑区, 逻辑型, 公开, GetClip
.参数 参数_区域, GP区域, 参考, 返回的区域。

.子程序 取剪辑区边界, 矩形F, 公开, GetClipBounds

.子程序 取剪辑区边界I, 矩形L, 公开, GetClipBoundsI

.子程序 取可见剪辑区边界, 矩形F, 公开, GetVisibleClipBounds

.子程序 取可见剪辑区边界I, 矩形L, 公开, GetVisibleClipBoundsI

.子程序 取平滑模式, 整数型, 公开, GetSmoothingMode 返回“平滑模式_”开头常量。

.子程序 取水平分辨率, 小数型, 公开, GetDpiX

.子程序 取算法模式, 整数型, 公开, GetInterpolationMode “算法模式_”开头常量。

.子程序 取文本对比度, 整数型, 公开, GetTextContrast

.子程序 取文本渲染模式, 整数型, 公开, GetTextRenderingHint。“文本渲染模式_”开头常量。

.子程序 取像素偏移模式, 整数型, 公开, GetTextRenderingHint “像素偏移模式_”开头常量。

.子程序 取渲染原点, 逻辑型, 公开, GetRenderingOrigin
.参数 参数_x, 整数型, 参考, 只能提供变量，装载数据
.参数 参数_y, 整数型, 参考, 只能提供变量，装载数据

.子程序 取页比例, 小数型, 公开, GetPageUnit

.子程序 取页单位, 整数型, 公开, GetPageUnit “单位_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取最近颜色, 整数型, 公开, GetNearestColor 返回最近的ARGB颜色。
.参数 参数_参考颜色, 整数型, 参考

.子程序 是否可见矩形, 逻辑型, 公开, IsVisibleRect
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 是否可见矩形I, 逻辑型, 公开, IsVisibleRectI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 是否可见坐标, 逻辑型, 公开, IsVisiblePoint
.参数 参数_x, 小数型
.参数 参数_y, 小数型

.子程序 是否可见坐标I, 逻辑型, 公开, IsVisiblePointI
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.子程序 是否为空剪辑区, 逻辑型, 公开, IsClipEmpty

.子程序 是否为空可见剪辑区, 逻辑型, 公开, IsVisibleClipEmpty

.子程序 释放DC, 逻辑型, 公开, ReleaseDC 释放由方法“对象.获取DC”返回的设备场景句柄
.参数 参数_DC句柄, 整数型

.子程序 刷新, , 公开, Flush 用此方法强制执行所有挂起的图形操作，按照指定，等待或者不等待，在操作完成之前返回
.参数 参数_方式, 整数型, 可空, “刷新方式_”开头常量。默认为“刷新方式_立即”

.子程序 添加图元文件注译, 逻辑型, 公开, AddMetafileComment
.参数 参数_数据, 字节集

.子程序 填充闭合曲线, 逻辑型, 公开, FillClosedCurve
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组

.子程序 填充闭合曲线2, 逻辑型, 公开, FillClosedCurve2
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充闭合曲线2I, 逻辑型, 公开, FillClosedCurve2
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充闭合曲线I, 逻辑型, 公开, FillClosedCurve
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组

.子程序 填充饼, 逻辑型, 公开, FillPie
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 填充饼I, 逻辑型, 公开, FillPieI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 填充多边形, 逻辑型, 公开, FillPolygon
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充多边形I, 逻辑型, 公开, FillPolygonI
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充矩形, 逻辑型, 公开, FillRectangle
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 填充矩形2, 逻辑型, 公开, FillRectangle2
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F

.子程序 填充矩形I, 逻辑型, 公开, FillRectangleI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 填充矩形组, 逻辑型, 公开, FillRectangles
.参数 参数_画刷, 
.参数 参数_矩形组, 矩形F, 数组

.子程序 填充矩形组I, 逻辑型, 公开, FillRectanglesI
.参数 参数_画刷, 
.参数 参数_矩形组, 矩形L, 数组

.子程序 填充路径, 逻辑型, 公开, FillPath
.参数 参数_画刷, 
.参数 参数_路径, GP路径

.子程序 填充区域, 逻辑型, 公开, FillRegion
.参数 参数_画刷, 
.参数 参数_区域, GP区域

.子程序 填充椭圆, 逻辑型, 公开, FillEllipse
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 填充椭圆I, 逻辑型, 公开, FillEllipseI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 销毁, 逻辑型, 公开, Delete

.子程序 置混合模式, 逻辑型, 公开, SetCompositingMode
.参数 参数_混合模式, 整数型, , “混合模式_”开头常量。

.子程序 置混合品质, 逻辑型, 公开, SetCompositingQuality
.参数 参数_混合模式, 整数型, , “混合品质_”开头常量。

.子程序 置剪辑区自矩形, 逻辑型, 公开, SetClipRect
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自矩形I, 逻辑型, 公开, SetClipRectI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自路径, 逻辑型, 公开, SetClipPath
.参数 参数_路径, GP路径
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自区域, 逻辑型, 公开, SetClipRegion
.参数 参数_区域, GP区域
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自区域句柄, 逻辑型, 公开, SetClipRegion
.参数 参数_区域句柄, 整数型, , hRgn
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自图形, 逻辑型, 公开, SetClipGraphics
.参数 参数_源图形, GP图形
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置平滑模式, 逻辑型, 公开, SetSmoothingMode
.参数 参数_呈现模式, 整数型, , “平滑模式_”开头常量。

.子程序 置算法模式, 逻辑型, 公开, SetInterpolationMode 设置在缩放或旋转图像时使用的算法
.参数 参数_算法模式, 整数型, , “算法模式_”开头常量。

.子程序 置文本对比度, 逻辑型, 公开, SetTextContrast
.参数 参数_对比度, 整数型, , 必须介于 0 和 12 之间

.子程序 置文本渲染模式, 逻辑型, 公开, SetTextRenderingHint
.参数 参数_文本呈现模式, 整数型, , “文本渲染模式_”开头常量。

.子程序 置像素偏移模式, 逻辑型, 公开, SetPixelOffsetMode 设置在缩放或旋转图像时使用的算法
.参数 参数_像素偏移模式, 整数型, , “像素偏移模式_”开头常量。

.子程序 置渲染原点, 逻辑型, 公开, SetRenderingOrigin
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.子程序 置页比例, 逻辑型, 公开, SetPageScale
.参数 参数_比例, 小数型

.子程序 置页单位, 逻辑型, 公开, SetPageUnit 设置当前页的变形单位。
.参数 参数_单位, 整数型, , “单位_”开头常量。

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置剪辑区, 逻辑型, 公开, ResetClip 重置为无限区域。

.子程序 转换坐标空间, 逻辑型, 公开, TransformPoints
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标F, 参考 数组

.子程序 转换坐标空间I, 逻辑型, 公开, TransformPointsI
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标L, 参考 数组

.程序集 GP缓存位图, , 公开, CachedBitmap

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_位图, GP位图
.参数 参数_图形, GP图形

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteCachedBitmap

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP箭头线帽, GP自定义线帽, 公开, AdjustableArrowCap

.子程序 创建箭头线帽, 逻辑型, 公开, CreateAdjustableArrowCap
.参数 参数_高度, 小数型
.参数 参数_宽度, 小数型
.参数 参数_是否填充, 逻辑型, 可空, 默认为真。

.子程序 创建自定义线帽, 逻辑型, 公开, Create
.参数 参数_填充路径, GP路径, 可空, “参数_填充路径”和“参数_笔画路径”二选一，如果两参数都是非空，将忽略“参数_填充路径”
.参数 参数_笔画路径, GP路径, 可空
.参数 参数_基线帽, 整数型, 可空, 默认为：“线帽样式_平线帽”
.参数 参数_基距离, 小数型, 可空, 默认为：0

.子程序 复制, 逻辑型, 公开, GdipCloneCustomLineCap
.参数 参数_自定义线帽, GP自定义线帽, 参考

.子程序 取笔画连线方式, 整数型, 公开, GetStrokeJoin 返回“连线方式_”开头常量。

.子程序 取笔画线帽, 逻辑型, 公开, GetStrokeCaps
.参数 参数_起点线帽, 整数型, 参考, 只能提供变量，装载数据。
.参数 参数_终点线帽, 整数型, 参考, 只能提供变量，装载数据。

.子程序 取高度, 小数型, 公开, GetHeight

.子程序 取基距离, 小数型, 公开, GetBaseInset 

.子程序 取基线帽, 整数型, 公开, GetBaseCap 返回“线帽样式_”开头常量

.子程序 取宽比例, 小数型, 公开, GetWidthScale

.子程序 取宽度, 小数型, 公开, GetWidth

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取中心点, 小数型, 公开, GetMiddleInset

.子程序 是否可填充, 逻辑型, 公开, GetFillState

.子程序 销毁, 逻辑型, 公开, DeleteCustomLineCap

.子程序 置笔画连线方式, 逻辑型, 公开, SetStrokeJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。

.子程序 置笔画线帽, 逻辑型, 公开, SetStrokeCaps
.参数 参数_起点线帽, 整数型, , “线帽样式_”开头常量
.参数 参数_终点线帽, 整数型, , “线帽样式_”开头常量

.子程序 置高度, 逻辑型, 公开, SetHeight
.参数 参数_高度, 小数型

.子程序 置基距离, 逻辑型, 公开, SetBaseInset
.参数 参数_基距离, 小数型

.子程序 置基线帽, 逻辑型, 公开, SetBaseCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量

.子程序 置宽比例, 逻辑型, 公开, SetWidthScale
.参数 参数_宽比例, 小数型

.子程序 置宽度, 逻辑型, 公开, SetWidth
.参数 参数_宽度, 小数型

.子程序 置填充状态, 逻辑型, 公开, SetFillState
.参数 参数_是否可填充, 逻辑型

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 置中心点, 逻辑型, 公开, SetMiddleInset
.参数 参数_偏移, 小数型

.程序集 GP矩阵, , 公开, Matrix。对象是一个3X3的矩阵，元素只有6个，因为都有相同的第三列0,0,1。

.子程序 变换坐标组, 逻辑型, 公开, TransformPoints 对坐标数组应用此　矩阵　变换
.参数 参数_坐标组, 坐标F, 参考 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。

.子程序 变换坐标组I, 逻辑型, 公开, TransformPointsI。对坐标数组应用此　矩阵　变换
.参数 参数_坐标组, 坐标L, 参考 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。

.子程序 变换坐标组向量, 逻辑型, 公开, TransformVectors 对坐标数组应用此　矩阵　变换中的缩放和旋转变换
.参数 参数_坐标组, 坐标F, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。

.子程序 变换坐标组向量I, 逻辑型, 公开, TransformVectorsI 对坐标数组应用此　矩阵　变换中的缩放和旋转变换
.参数 参数_坐标组, 坐标L, 数组, [in, out]输入时提供仿射点，输出时为仿射后结果。

.子程序 创建, 逻辑型, 公开, Create 创建一个默认矩阵。

.子程序 创建自矩形坐标, 逻辑型, 公开, CreateRectPoint
.参数 参数_矩形, 矩形F
.参数 参数_坐标, 坐标F

.子程序 创建自矩形坐标I, 逻辑型, 公开, CreateRectPointI
.参数 参数_矩形, 矩形L
.参数 参数_坐标, 坐标L

.子程序 创建自元素, 逻辑型, 公开, CreateFromElements
.参数 参数_m11, 小数型, , 第一行，第一列
.参数 参数_m12, 小数型, , 第一行，第二列
.参数 参数_m21, 小数型, , 第二行，第一列
.参数 参数_m22, 小数型, , 第二行，第二列
.参数 参数_dx, 小数型, , 第三行，第一列
.参数 参数_dy, 小数型, , 第三行，第二列

.子程序 复制, 逻辑型, 公开, Clone 将本矩阵复制到 参数_矩阵。
.参数 参数_矩阵, GP矩阵, 参考

.子程序 逆转, 逻辑型, 公开, Invert 设置旋转方向为逆向。

.子程序 平移, 逻辑型, 公开, Translate
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 切变, 逻辑型, 公开, Shear
.参数 参数_x, 小数型
.参数 参数_y, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 取垂直偏移, 小数型, 公开, GetOffsetY

.子程序 取水平偏移, 小数型, 公开, GetOffsetX

.子程序 取元素, 逻辑型, 公开, GetElements
.参数 参数_元素组, 小数型, 数组, 返回值。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 是否单位矩阵, 逻辑型, 公开, IsIdentity 斜对角线是1其他是0

.子程序 是否逆转, 逻辑型, 公开, IsInvertible

.子程序 是否相等, 逻辑型, 公开, Equals
.参数 参数_矩阵, GP矩阵

.子程序 缩放, 逻辑型, 公开, Scale
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 缩放在, 逻辑型, 公开, ScaleAt
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 相乘, 逻辑型, 公开, Multiply 如果指定的顺序是“#矩阵顺序_预先计算”，则按预先计算的顺序将此 矩阵 对象乘以指定的矩阵。如果指定的顺序是“#矩阵顺序_追加”，则按追加的顺序将此 矩阵 对象乘以指定的矩阵。
.参数 参数_矩阵, GP矩阵
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先”

.子程序 销毁, 逻辑型, 公开, DeleteMatrix

.子程序 旋转, 逻辑型, 公开, Rotate
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 旋转在, 逻辑型, 公开, RotateAt
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 置元素, 逻辑型, 公开, SetElements 设置矩阵元素。
.参数 参数_m11, 小数型, , 第一行，第一列
.参数 参数_m12, 小数型, , 第一行，第二列
.参数 参数_m21, 小数型, , 第二行，第一列
.参数 参数_m22, 小数型, , 第二行，第二列
.参数 参数_dx, 小数型, , 第三行，第一列
.参数 参数_dy, 小数型, , 第三行，第二列

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置, 逻辑型, 公开, Reset

.程序集 GP亮度对比度类, GP效果类, 公开, BrightnessContrast 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateBrightnessContrast

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_亮度对比度参数, 亮度对比度参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_亮度对比度参数, 亮度对比度参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP路径, , 公开, Path

.子程序 变平, 逻辑型, 公开, Flatten
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25

.子程序 创建, 逻辑型, 公开, CreatePath
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”

.子程序 创建自坐标组, 逻辑型, 公开, CreatePathFromPoints
.参数 参数_坐标, 坐标F, 数组
.参数 参数_类型, 字节型, 数组, “路径点类型_”开头常量。
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”

.子程序 创建自坐标组I, 逻辑型, 公开, CreatePathFromPointsI
.参数 参数_坐标, 坐标L, 数组
.参数 参数_类型, 字节型, 数组, “路径点类型_”开头常量。
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量。默认为“#填充模式_交替”

.子程序 反向, 逻辑型, 公开, Reverse

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_路径, GP路径, 参考

.子程序 关闭所有图形, 逻辑型, 公开, CloseAllFigures 闭合此路径中所有开放的图形并开始一个新图形。它通过连接一条从图形的终结点到起始点的直线，闭合每一开放的图形。 

.子程序 关闭图形, 逻辑型, 公开, CloseFigure 闭合当前图形并开始新的图形。如果当前图形包含一系列相互连接的直线和曲线，该方法通过连接一条从终结点到起始点的直线，闭合该环回。

.子程序 开始图形, 逻辑型, 公开, StartFigure 不闭合当前图形即开始一个新图形。后面添加到该路径的所有点都被添加到此新图形中。

.子程序 扩大, 逻辑型, 公开, Widen
.参数 参数_画笔, GP画笔
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25

.子程序 轮廓线, 逻辑型, 公开, Outline
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25

.子程序 扭曲, 逻辑型, 公开, Warp
.参数 参数_坐标, 坐标F, 数组, 一个 坐标F 结构的数组，它们定义由 “参数_源矩形” 定义的矩形将变形到的平行四边形。该数组可以包含三个或四个元素。如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。
.参数 参数_源矩形, 矩形F, , 一个 矩形F 结构，它表示将变形为 destPoints 定义的平行四边形的矩形
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_扭曲模式, 整数型, 可空, “扭曲模式_”开头常量。默认为：“扭曲模式_透视”
.参数 参数_展平值, 小数型, 可空, 一个介于 0 到 1 之间的值，它指定如何展平最终路径。默认为：0.25

.子程序 清除标记, 逻辑型, 公开, ClearMarkers

.子程序 取边界矩形, 矩形F, 公开, GetBounds
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_画笔, GP画笔, 可空

.子程序 取边界矩形I, 矩形L, 公开, GetBoundsI
.参数 参数_矩阵, GP矩阵, 可空
.参数 参数_画笔, GP画笔, 可空

.子程序 取路径类型组, 逻辑型, 公开, GetTypes
.参数 参数_类型, 字节型, 参考 数组, 返回“路径点类型_”开头常量。
.参数 参数_总数, 整数型, 可空, 默认为“取坐标数()”的返回值。

.子程序 取路径数据, 逻辑型, 公开, GetData
.参数 参数_路径数据, 路径数据, 参考

.子程序 取路径坐标组, 逻辑型, 公开, GetPoints
.参数 参数_坐标, 坐标F, 参考 数组
.参数 参数_总数, 整数型, 可空, 默认为“取坐标数()”的返回值。

.子程序 取路径坐标组I, 逻辑型, 公开, GetPointsI
.参数 参数_坐标, 坐标L, 参考 数组
.参数 参数_总数, 整数型, 可空, 默认为“取坐标数()”的返回值。

.子程序 取填充模式, 整数型, 公开, GetFillMode 返回“填充模式_”开头常量

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取最后坐标, 坐标F, 公开, GetLastPoint

.子程序 取坐标数, 整数型, 公开, GetPointCount

.子程序 是否可见坐标, 逻辑型, 公开, IsVisiblePoint
.参数 参数_x, 小数型
.参数 参数_y, 小数型
.参数 参数_图形, GP图形, 可空

.子程序 是否可见坐标I, 逻辑型, 公开, IsVisiblePointI
.参数 参数_x, 整数型
.参数 参数_y, 整数型
.参数 参数_图形, GP图形, 可空

.子程序 是否可见坐标轮廓, 逻辑型, 公开, IsOutlineVisiblePoint
.参数 参数_x, 小数型
.参数 参数_y, 小数型
.参数 参数_画笔, GP画笔
.参数 参数_图形, GP图形, 可空

.子程序 是否可见坐标轮廓I, 逻辑型, 公开, IsOutlineVisiblePointI
.参数 参数_x, 整数型
.参数 参数_y, 整数型
.参数 参数_画笔, GP画笔
.参数 参数_图形, GP图形, 可空

.子程序 添加贝塞尔曲线, 逻辑型, 公开, AddBezier
.参数 参数_x1, 小数型
.参数 参数_y1, 小数型
.参数 参数_x2, 小数型
.参数 参数_y2, 小数型
.参数 参数_x3, 小数型
.参数 参数_y3, 小数型
.参数 参数_x4, 小数型
.参数 参数_y4, 小数型

.子程序 添加贝塞尔曲线I, 逻辑型, 公开, AddBezierI
.参数 参数_x1, 整数型
.参数 参数_y1, 整数型
.参数 参数_x2, 整数型
.参数 参数_y2, 整数型
.参数 参数_x3, 整数型
.参数 参数_y3, 整数型
.参数 参数_x4, 整数型
.参数 参数_y4, 整数型

.子程序 添加贝塞尔曲线组, 逻辑型, 公开, AddBeziers “参数_坐标组”的成员数必须4个以上。
.参数 参数_坐标组, 坐标F, 数组

.子程序 添加贝塞尔曲线组I, 逻辑型, 公开, AddBeziersI “参数_坐标组”的成员数必须4个以上。
.参数 参数_坐标组, 坐标L, 数组

.子程序 添加闭合曲线, 逻辑型, 公开, AddClosedCurve 最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标F, 数组

.子程序 添加闭合曲线2, 逻辑型, 公开, AddClosedCurve2 最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 添加闭合曲线2I, 逻辑型, 公开, AddClosedCurve2I 最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 添加闭合曲线I, 逻辑型, 公开, AddClosedCurveI 最后一点将和起始点自动连接。
.参数 参数_坐标组, 坐标L, 数组

.子程序 添加饼, 逻辑型, 公开, AddPie
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 添加饼I, 逻辑型, 公开, AddPieI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 添加多边形, 逻辑型, 公开, AddPolygon
.参数 参数_坐标组, 坐标F, 数组

.子程序 添加多边形I, 逻辑型, 公开, AddPolygonI
.参数 参数_坐标组, 坐标L, 数组

.子程序 添加矩形, 逻辑型, 公开, AddRectangle
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 添加矩形I, 逻辑型, 公开, AddRectangleI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 添加矩形组, 逻辑型, 公开, AddRectangles
.参数 参数_矩形组, 矩形F, 数组

.子程序 添加矩形组I, 逻辑型, 公开, AddRectanglesI
.参数 参数_矩形组, 矩形L, 数组

.子程序 添加路径, 逻辑型, 公开, AddPath
.参数 参数_路径, GP路径
.参数 参数_连接, 逻辑型, 可空, 它指定添加的路径中的第一个图形是否是该路径中最后一个图形的一部分。真 的值指定（如果可能）添加的路径中的第一个图形是该路径中最后一个图形的一部分。假 的值指定添加的路径中的第一个图形与该路径中最后一个图形不同。默认为：假。

.子程序 添加曲线, 逻辑型, 公开, AddCurve
.参数 参数_坐标组, 坐标F, 数组

.子程序 添加曲线2, 逻辑型, 公开, AddCurve2
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 添加曲线2I, 逻辑型, 公开, AddCurve2I
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 添加曲线3, 逻辑型, 公开, AddCurve3
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 添加曲线3I, 逻辑型, 公开, AddCurve3I
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 添加曲线I, 逻辑型, 公开, AddCurveI
.参数 参数_坐标组, 坐标L, 数组

.子程序 添加椭圆, 逻辑型, 公开, AddEllipse
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 添加椭圆I, 逻辑型, 公开, AddEllipseI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 添加文本, 逻辑型, 公开, AddString
.参数 参数_文本, 文本型
.参数 参数_字体族, GP字体族
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形F, 可空
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空

.子程序 添加文本I, 逻辑型, 公开, AddStringI
.参数 参数_文本, 文本型
.参数 参数_字体族, GP字体族
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形L, 可空
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空

.子程序 添加文本IW, 逻辑型, 公开, AddStringIW
.参数 参数_文本, 字节集
.参数 参数_字体族, GP字体族
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形L, 可空
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空

.子程序 添加文本W, 逻辑型, 公开, AddStringW
.参数 参数_文本, 字节集, , 宽文本
.参数 参数_字体族, GP字体族
.参数 参数_EM大小, 整数型, , 世界坐标单位
.参数 参数_矩形, 矩形F, 可空
.参数 参数_字体风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_文本格式, GP文本格式, 可空

.子程序 添加圆弧, 逻辑型, 公开, AddArc
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 添加圆弧I, 逻辑型, 公开, AddArcI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 添加圆角矩形, 逻辑型, 公开, AddRoundRect
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_圆角度, 整数型, , 1-100之间

.子程序 添加直线, 逻辑型, 公开, AddLine
.参数 参数_起点X, 小数型
.参数 参数_起点Y, 小数型
.参数 参数_终点X, 小数型
.参数 参数_终点Y, 小数型

.子程序 添加直线I, 逻辑型, 公开, AddLineI
.参数 参数_起点X, 整数型
.参数 参数_起点Y, 整数型
.参数 参数_终点X, 整数型
.参数 参数_终点Y, 整数型

.子程序 添加直线组, 逻辑型, 公开, AddLines
.参数 参数_坐标, 坐标F, 数组

.子程序 添加直线组I, 逻辑型, 公开, AddLinesI
.参数 参数_坐标, 坐标L, 数组

.子程序 销毁, 逻辑型, 公开, DeletePath

.子程序 置标记, 逻辑型, 公开, SetMarker

.子程序 置填充模式, 逻辑型, 公开, SetFillMode
.参数 参数_填充模式, 整数型, , “填充模式_”开头常量

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置, 逻辑型, 公开, Reset

.子程序 转换, 逻辑型, 公开, Transform
.参数 参数_矩阵, GP矩阵

.程序集 GP路径迭代器, , 公开, GraphicsPathIterator

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_路径, GP路径

.子程序 复制数据, 整数型, 公开, CopyData
.参数 参数_开始索引, 整数型
.参数 参数_结束索引, 整数型
.参数 参数_坐标组, 坐标F, 参考 数组
.参数 参数_类型组, 字节型, 参考 数组

.子程序 枚举, 整数型, 公开, Enumerate
.参数 参数_坐标组, 坐标F, 参考 数组
.参数 参数_类型组, 字节型, 参考 数组
.参数 参数_总数, 整数型, 可空, 默认为：对象.取总数() 的返回值

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取子路径总数, 整数型, 公开, GetSubpathCount 返回子路径数。

.子程序 取总数, 整数型, 公开, GetCount 返回路径的数据坐标数

.子程序 是否有曲线, 逻辑型, 公开, HasCurve 如果路径中至少有一个曲线，返回真，否则返回假。

.子程序 下一标记, 整数型, 公开, NextMarker 返回下一个路径标记的数据坐标数，如果没有下一个标记，返回0。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引

.子程序 下一标记自路径, 整数型, 公开, NextMarkerPath 返回下一个路径标记的数据坐标数，如果没有下一个标记，返回0。
.参数 参数_路径, GP路径

.子程序 下一点类型, 整数型, 公开, NextPathType 返回下一个路径的数据点类型数，如果没有点类型，返回0。
.参数 参数_点类型, 字节型, 参考 可空, 返回“路径点类型_”开头常量组合。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引

.子程序 下一子路径, 整数型, 公开, NextSubpath 返回下一个子路径的数据坐标数，如果没有下一个子路径，返回0。
.参数 参数_开始索引, 整数型, 参考 可空, 返回开始索引
.参数 参数_结束索引, 整数型, 参考 可空, 返回结束索引
.参数 参数_是否关闭, 逻辑型, 参考 可空, 返回是否子路径已经关闭。

.子程序 下一子路径自路径, 整数型, 公开, NextSubpathPath 根据指定的路径返回下一个子路径的数据坐标数，如果没有下一个子路径，返回0。
.参数 参数_路径, GP路径
.参数 参数_是否关闭, 逻辑型, 参考 可空, 返回是否子路径已经关闭。

.子程序 销毁, 逻辑型, 公开, DeletePathIter

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置, 逻辑型, 公开, Rewind 将迭代器返回到起点。

.程序集 GP路径渐变画刷, , 公开, PathGradientBrush 基类：GP画刷

.子程序 变形平移, 逻辑型, 公开, TranslateTransform。
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 创建, 逻辑型, 公开, CreateFromPoints
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：#环绕模式_固定

.子程序 创建I, 逻辑型, 公开, CreateFromPointsI
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：#环绕模式_固定

.子程序 创建自路径, 逻辑型, 公开, CreateFromPath
.参数 参数_路径, GP路径

.子程序 复制, 逻辑型, 公开, Clone 将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, , 参考

.子程序 取伽玛校正, 逻辑型, 公开, GetGammaCorrection

.子程序 取环绕模式, 整数型, 公开, GetWrapMode。返回“环绕模式_”开头常量。

.子程序 取混合, 整数型, 公开, GetBlend 返回总数。
.参数 参数_颜色比例, 小数型, 数组, 提供小数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 同上。

.子程序 取混合数, 整数型, 公开, GetBlendCount

.子程序 取矩形, 逻辑型, 公开, GetRectangle
.参数 参数_矩形, 矩形F, 参考

.子程序 取矩形I, 逻辑型, 公开, GetRectangleI
.参数 参数_矩形, 矩形L, 参考

.子程序 取类型, 整数型, 公开, GetType 返回“#画刷类型_”开头常量。

.子程序 取路径, 逻辑型, 公开, GetGraphicsPath
.参数 参数_路径, GP路径, 参考

.子程序 取预设混合数, 整数型, 公开, GetInterpolationColorCount

.子程序 取预设颜色, 整数型, 公开, GetInterpolationColors 返回总数。
.参数 参数_ARGB颜色, 整数型, 数组, 提供整数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 提供小数型数组变量，装载数据。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取中心点, 坐标F, 公开, GetCenterPoint

.子程序 取中心点I, 坐标L, 公开, GetCenterPointI

.子程序 取中心点比例, 逻辑型, 公开, GetFocusScales
.参数 参数_比例X, 小数型, 参考
.参数 参数_比例Y, 小数型, 参考

.子程序 取中心点颜色, 整数型, 公开, GetCenterColor 返回ARGB颜色。

.子程序 取周围颜色, 逻辑型, 公开, GetSurroundColors
.参数 参数_ARGB颜色, 整数型, 参考 数组
.参数 参数_数量, 整数型, 参考, [in/out]

.子程序 取周围颜色数, 整数型, 公开, GetSurroundColorCount

.子程序 取坐标数, 整数型, 公开, GetPointCount

.子程序 销毁, 逻辑型, 公开, DeleteBrush

.子程序 置伽玛校正, 逻辑型, 公开, SetGammaCorrection
.参数 参数_是否启用校正, 逻辑型

.子程序 置环绕模式, 逻辑型, 公开, SetWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。

.子程序 置混合, 逻辑型, 公开, SetBlend
.参数 参数_颜色比例, 小数型, 数组, 如：{0，0.5，1}
.参数 参数_位置比例, 小数型, 数组, 如：{0，0.2，1}

.子程序 置路径, 逻辑型, 公开, SetGraphicsPath
.参数 参数_路径, GP路径

.子程序 置线性混合, 逻辑型, 公开, SetBlendTrianglarShape
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。

.子程序 置预设颜色, 逻辑型, 公开, SetInterpolationColors
.参数 参数_ARGB颜色, 整数型, 数组, ARGB颜色数组。
.参数 参数_位置比例, 小数型, 数组, 如{0，0.3，1}

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 置中心点, 逻辑型, 公开, SetCenterPoint
.参数 参数_坐标, 坐标F

.子程序 置中心点I, 逻辑型, 公开, SetCenterPointI
.参数 参数_坐标, 坐标L

.子程序 置中心点比例, 逻辑型, 公开, GetFocusScales
.参数 参数_比例X, 小数型, , 0到1之间的小数。
.参数 参数_比例Y, 小数型, , 0到1之间的小数。

.子程序 置中心点颜色, 逻辑型, 公开, SetCenterColor
.参数 参数_ARGB颜色, 整数型

.子程序 置钟形混合, 逻辑型, 公开, SetBlendBellShape
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。

.子程序 置周围颜色, 逻辑型, 公开, GdipSetPathGradientSurroundColorsWithCount
.参数 参数_ARGB颜色, 整数型, 数组
.参数 参数_数量, 整数型, 参考 可空, [in/out]

.程序集 GP模糊类, GP效果类, 公开, Blur 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateBlur

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_模糊参数, 模糊参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_模糊参数, 模糊参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP区域, , 公开, Region

.子程序 创建, 逻辑型, 公开, Create

.子程序 创建自矩形, 逻辑型, 公开, CreateFromRect
.参数 参数_矩形, 矩形F

.子程序 创建自矩形I, 逻辑型, 公开, CreateFromRectI
.参数 参数_矩形, 矩形L

.子程序 创建自句柄, 逻辑型, 公开, CreateFromHrgn
.参数 参数_hRgn, 整数型, , 区域句柄

.子程序 创建自路径, 逻辑型, 公开, CreateFromPath
.参数 参数_路径, GP路径

.子程序 创建自数据, 逻辑型, 公开, CreateFromRgnData
.参数 参数_数据, 字节集
.参数 参数_数据大小, 整数型

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_区域, GP区域, 参考

.子程序 合并矩形, 逻辑型, 公开, CombineRect
.参数 参数_矩形, 矩形F
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量

.子程序 合并矩形I, 逻辑型, 公开, CombineRectI
.参数 参数_矩形, 矩形L
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量

.子程序 合并路径, 逻辑型, 公开, CombinePath
.参数 参数_路径, GP路径
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量

.子程序 合并区域, 逻辑型, 公开, CombineRegion
.参数 参数_区域, GP区域
.参数 参数_合并模式, 整数型, 可空, “合并模式_”开头常量

.子程序 平移区域, 逻辑型, 公开, Translate
.参数 参数_水平偏移量, 小数型, , 水平偏移的量。
.参数 参数_垂直偏移量, 小数型, , 垂直偏移的量。

.子程序 平移区域I, 逻辑型, 公开, TranslateI
.参数 参数_水平偏移量, 整数型, , 水平偏移的量。
.参数 参数_垂直偏移量, 整数型, , 垂直偏移的量。

.子程序 取矩形边界, 矩形F, 公开, GetBounds
.参数 参数_图形, GP图形

.子程序 取矩形边界I, 矩形L, 公开, GetBoundsI
.参数 参数_图形, GP图形

.子程序 取区域句柄, 整数型, 公开, GetHRgn 返回区域句柄。
.参数 参数_图形, GP图形

.子程序 取扫描矩形, 整数型, 公开, GetRegionScans
.参数 参数_矩阵, GP矩阵
.参数 参数_矩形, 矩形F, 数组

.子程序 取扫描矩形I, 整数型, 公开, GetRegionScansI
.参数 参数_矩阵, GP矩阵
.参数 参数_矩形, 矩形L, 数组

.子程序 取扫描数, 整数型, 公开, GetRegionScansCount
.参数 参数_矩阵, GP矩阵

.子程序 取数据, 字节集, 公开, GetData
.参数 参数_数据大小, 整数型
.参数 参数_填充大小, 整数型, 参考 可空

.子程序 取数据大小, 整数型, 公开, GetDataSize

.子程序 取指针, 整数型, 公开, GetNative

.子程序 是否可见矩形, 逻辑型, 公开, IsVisibleRect
.参数 参数_矩形, 矩形F
.参数 参数_图形, GP图形, 可空

.子程序 是否可见矩形I, 逻辑型, 公开, IsVisibleRectI
.参数 参数_矩形, 矩形L
.参数 参数_图形, GP图形, 可空

.子程序 是否可见坐标, 逻辑型, 公开, IsVisiblePoint
.参数 参数_坐标, 坐标F
.参数 参数_图形, GP图形, 可空

.子程序 是否可见坐标I, 逻辑型, 公开, IsVisiblePointI
.参数 参数_坐标, 坐标L
.参数 参数_图形, GP图形, 可空

.子程序 是否为空, 逻辑型, 公开, IsEmpty
.参数 参数_图形, GP图形

.子程序 是否为无限, 逻辑型, 公开, IsInfinite
.参数 参数_图形, GP图形

.子程序 是否相等, 逻辑型, 公开, IsEqual
.参数 参数_区域, GP区域
.参数 参数_图形, GP图形

.子程序 销毁, 逻辑型, 公开, DeleteRegion

.子程序 置为空, 逻辑型, 公开, SetEmpty

.子程序 置为无限, 逻辑型, 公开, SetInfinite

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 转换, 逻辑型, 公开, Transform
.参数 参数_矩阵, GP矩阵

.程序集 GP锐化类, GP效果类, 公开, Sharpen 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateSharpen

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_锐化参数, 锐化参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_锐化参数, 锐化参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP色彩平衡类, GP效果类, 公开, ColorBalance 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateColorBalance

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_色彩平衡参数, 色彩平衡参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_色彩平衡参数, 色彩平衡参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP色阶类, GP效果类, 公开, Levels 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateLevels

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_色阶参数, 色阶参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_色阶参数, 色阶参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP色调类, GP效果类, 公开, Tint 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateTint

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_色调参数, 色调参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_色调参数, 色调参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP色相饱和亮度类, GP效果类, 公开, HueSaturationLightness 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateHueSaturationLightness

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_色相饱和亮度参数, 色相饱和亮度参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_色相饱和亮度参数, 色相饱和亮度参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP私有字体集, , 公开, PrivateFontCollection 基类：GP字体集

.子程序 创建, 逻辑型, 公开, Create

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取字体族列表, 整数型, 公开, GetFamilies 成功返回实际字体族数量。
.参数 参数_数量, 整数型
.参数 参数_字体族, GP字体族, 参考 数组

.子程序 取字体族数, 整数型, 公开, GetFamilyCount 

.子程序 添加字体文件, 逻辑型, 公开, AddFontFile
.参数 参数_字体文件名, 文本型

.子程序 添加字体字节集, 逻辑型, 公开, AddMemoryFont
.参数 参数_字体字节集, 字节集

.子程序 销毁, 逻辑型, 公开, DeletePrivateFontCollection

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP图像, , 公开, Image

.子程序 保存到文件, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 文本型
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到文件W, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到字节集, 字节集, 公开, SaveToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存添加, 逻辑型, 公开, SaveAdd
.参数 参数_编码器参数集, 编码器参数集

.子程序 保存添加图像, 逻辑型, 公开, SaveAddImage
.参数 参数_图像, GP图像
.参数 参数_编码器参数集, 编码器参数集

.子程序 创建自文件, 逻辑型, 公开, CreateFromFile
.参数 参数_文件名, 文本型
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 创建自文件W, 逻辑型, 公开, CreateFromFile
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 创建自字节集, 逻辑型, 公开, CreateFromStream
.参数 参数_字节集, 字节集
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_图像, GP图像, 参考

.子程序 取边界矩形, 整数型, 公开, GetBounds 成功返回0
.参数 参数_边界矩形, 矩形F, 参考
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。

.子程序 取编码器参数列表, 逻辑型, 公开, GetEncoderParameterList
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考

.子程序 取垂直分辨率, 小数型, 公开, GetVerticalResolution。以“像素/英寸”为单位

.子程序 取高度, 整数型, 公开, GetHeight

.子程序 取各帧延时, 逻辑型, 公开
.参数 参数_延时, 整数型, 数组

.子程序 取宽度, 整数型, 公开, GetWidth

.子程序 取类型, 整数型, 公开, GetType。返回“图像类型_”开头常量。

.子程序 取属性标签列表, 整数型, 公开, GetPropertyIdList 返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组

.子程序 取属性项目, 逻辑型, 公开, GetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考

.子程序 取水平分辨率, 小数型, 公开, GetHorizontalResolution。以“像素/英寸”为单位

.子程序 取图像属性, 整数型, 公开, GetFlags 返回“图像属性_”开头常量。

.子程序 取图像缩略图, 逻辑型, 公开, GetThumbnailImage
.参数 参数_缩略图宽度, 整数型
.参数 参数_缩略图高度, 整数型
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。

.子程序 取物理尺寸, 尺寸F, 公开, GetPhysicalDimension

.子程序 取像素格式, 整数型, 公开, GetPixelFormat 返回“像素格式_”开头常量。

.子程序 取颜色调色板, 逻辑型, 公开, GetPalette
.参数 参数_颜色调色板, 颜色调色板, 参考

.子程序 取原始格式, 文本型, 公开, GetRawFormat 返回“图像格式_”开头常量。

.子程序 取帧数, 整数型, 公开, GetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。

.子程序 取帧维面列表, 整数型, 公开, GetFrameDimensionsList 返回数量
.参数 参数_帧惟面, 文本型, 参考 数组, “帧维面_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DisposeImage

.子程序 旋转翻转, 逻辑型, 公开, RotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。

.子程序 移除属性项目, 逻辑型, 公开, RemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。

.子程序 置活动帧, 逻辑型, 公开, SelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型

.子程序 置属性项目, 逻辑型, 公开, SetPropertyItem
.参数 参数_属性项目, 属性项目

.子程序 置颜色调色板, 逻辑型, 公开, SetPalette
.参数 参数_颜色调色板, 颜色调色板

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP图像属性, , 公开, ImageAttribute

.子程序 创建, 逻辑型, 公开, Create

.子程序 复制, 逻辑型, 公开, Clone 复制本图像属性到 参数_图像属性。
.参数 参数_图像属性, GP图像属性, 参考

.子程序 恢复, 逻辑型, 公开, ClearNoOp。恢复禁用的颜色调整类型。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 禁用, 逻辑型, 公开, SetNoOp 可以用 恢复() 方法恢复被禁用的颜色调整类型。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 清除出通道配置文件, 逻辑型, 公开, ClearOutputChannelColorProfile
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常。默认为：“颜色调整类型_默认”。

.子程序 清除伽玛值, 逻辑型, 公开, ClearGamma
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 清除临界值, 逻辑型, 公开, ClearThreshold
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。。默认为：“颜色调整类型_默认”

.子程序 清除色彩映射表, 逻辑型, 公开, ClearRemapTable
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 清除输出通道, 逻辑型, 公开, ClearOutputChannel
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 清除透明色范围, 逻辑型, 公开, ClearColorKeys
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 清除颜色矩阵, 逻辑型, 公开, ClearColorMatrix
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 取调整调色板, 逻辑型, 公开, GetAdjustedPalette 获取变换后的调色板
.参数 参数_颜色调色板, 颜色调色板, 参考, 输入\输出，
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DisposeImageAttributes

.子程序 置伽玛值, 逻辑型, 公开, SetGamma 可以用它调整亮度
.参数 参数_伽玛值, 小数型, , 一般是1.0到2.2之间，有时候0.1到5.0也有效。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置环绕模式, 逻辑型, 公开, SetWrapMode 设置空白区域的覆盖模式。
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。
.参数 参数_背景颜色, 整数型, 可空, ARGB颜色，当环绕模式为“环绕模式_固定”时，指定用什么颜色来填充空白区域。

.子程序 置类型, 逻辑型, 公开, SetToIdentity
.参数 参数_颜色调整类型, 整数型, , “颜色调整类型_”开头常量。

.子程序 置临界值, 逻辑型, 公开, SetThreshold
.参数 参数_临界值, 小数型, , 临界值是一个从0到1，指定每个颜色成分分界点。例如，假设临界值为0.7，假设你是提供一种颜色的红，绿，蓝230，50，220。红色部分，230>0.7 × 255，因此红色成分将改为255（全强度）。绿色部分，50<0.7 × 255，所以绿色成分将被更改为0。蓝色的部分，220>0.7 × 255，所以蓝色部分将改为255
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置色彩映射表, 逻辑型, 公开, SetRemapTable 将原来的颜色映射成为新的颜色。
.参数 参数_色彩映射表, 色彩映射表, 数组
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置输出通道, 逻辑型, 公开, SetOutputChannel 设置CMYK输出通道。
.参数 参数_输出通道, 整数型, , “输出通道_”开头常量。
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置输出通道配置文件, 逻辑型, 公开, SetOutputChannelColorProfile
.参数 参数_颜色配置文件, 文本型, , *.ICM
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置透明色范围, 逻辑型, 公开, SetColorKeys 在 参数_低颜色 和 参数_高颜色 之间的颜色值将是透明的。
.参数 参数_低颜色, 整数型, , ARGB颜色
.参数 参数_高颜色, 整数型, , ARGB颜色
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置颜色矩阵, 逻辑型, 公开, SetColorMatrix
.参数 参数_颜色矩阵, 小数型, 数组, 颜色矩阵是一个5x5的二维数组。
.参数 参数_灰度矩阵, 小数型, 可空 数组, 同上。
.参数 参数_颜色矩阵标志, 整数型, 可空, “颜色矩阵标志_”开头常量。默认为：“颜色矩阵标志_默认”
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置颜色矩阵类, 逻辑型, 公开, SetColorMatrix
.参数 参数_颜色矩阵类, GP颜色矩阵类
.参数 参数_灰度矩阵类, GP颜色矩阵类, 可空
.参数 参数_颜色矩阵标志, 整数型, 可空, “颜色矩阵标志_”开头常量。默认为：“颜色矩阵标志_默认”
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。默认为：“颜色调整类型_默认”

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置, 逻辑型, 公开, Reset
.参数 参数_颜色调整类型, 整数型, 可空, “颜色调整类型_”开头常量。

.程序集 GP图形, , 公开, Graphics

.子程序 保存, 整数型, 公开, Save 返回状态

.子程序 变形平移, 逻辑型, 公开, TranslateTransform
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考, Matrix

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵, , Matrix
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先”

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵, , Matrix

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 测量文本矩形, 逻辑型, 公开, MeasureString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_参考矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空
.参数 参数_测量矩形, 矩形F, 参考, 返回测量“参数_文本”所需要的矩形。

.子程序 测量文本矩形W, 逻辑型, 公开, MeasureString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_参考矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空
.参数 参数_测量矩形, 矩形F, 参考, 返回测量“参数_文本”所需要的矩形。

.子程序 测量文本区域, 逻辑型, 公开, MeasureCharacterRanges
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_矩形布局, 矩形F
.参数 参数_文本格式, GP文本格式, , 设置 文本格式.置测量字符范围()
.参数 参数_区域数, 整数型
.参数 参数_区域集, GP区域, 参考 数组, 返回区域数组。

.子程序 测量文本区域W, 逻辑型, 公开, MeasureCharacterRanges
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_矩形布局, 矩形F
.参数 参数_文本格式, GP文本格式, , 设置 文本格式.置测量字符范围()
.参数 参数_区域数, 整数型
.参数 参数_区域集, GP区域, 参考 数组, 返回区域数组。

.子程序 创建自DC, 逻辑型, 公开, CreateFromHDC
.参数 参数_hDC, 整数型
.参数 参数_hdevice, 整数型, 可空

.子程序 创建自窗口句柄, 逻辑型, 公开, CreateFromHWND
.参数 参数_窗口句柄, 整数型
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用ICC文件调整颜色。

.子程序 创建自图像, 逻辑型, 公开, CreateFromImage
.参数 参数_Gdiplus图像, GP图像

.子程序 画贝塞尔曲线, 逻辑型, 公开, DrawBezier
.参数 参数_画笔, GP画笔
.参数 参数_x1, 小数型
.参数 参数_y1, 小数型
.参数 参数_x2, 小数型
.参数 参数_y2, 小数型
.参数 参数_x3, 小数型
.参数 参数_y3, 小数型
.参数 参数_x4, 小数型
.参数 参数_y4, 小数型

.子程序 画贝塞尔曲线I, 逻辑型, 公开, DrawBezierI
.参数 参数_画笔, GP画笔
.参数 参数_x1, 整数型
.参数 参数_y1, 整数型
.参数 参数_x2, 整数型
.参数 参数_y2, 整数型
.参数 参数_x3, 整数型
.参数 参数_y3, 整数型
.参数 参数_x4, 整数型
.参数 参数_y4, 整数型

.子程序 画贝塞尔曲线组, 逻辑型, 公开, DrawBeziers “参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画贝塞尔曲线组I, 逻辑型, 公开, DrawBeziersI “参数_坐标组”的成员数必须4个以上。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画闭合曲线, 逻辑型, 公开, DrawClosedCurve 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画闭合曲线2, 逻辑型, 公开, DrawClosedCurve2 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 画闭合曲线2I, 逻辑型, 公开, DrawClosedCurve2I 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 画闭合曲线I, 逻辑型, 公开, DrawClosedCurveI 最后一点将和起始点自动连接。
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画饼, 逻辑型, 公开, DrawPie
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画饼I, 逻辑型, 公开, DrawPieI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画多边形, 逻辑型, 公开, DrawPolygon
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画多边形I, 逻辑型, 公开, DrawPolygonI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画缓存位图, 逻辑型, 公开, DrawCachedBitmap
.参数 参数_缓存位图, GP缓存位图
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型

.子程序 画矩形, 逻辑型, 公开, DrawRectangle
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 画矩形I, 逻辑型, 公开, DrawRectangleI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 画矩形组, 逻辑型, 公开, DrawRectangles
.参数 参数_画笔, GP画笔
.参数 参数_矩形组, 矩形F, 数组

.子程序 画矩形组I, 逻辑型, 公开, DrawRectanglesI
.参数 参数_画笔, GP画笔
.参数 参数_矩形组, 矩形L, 数组

.子程序 画控制文本, 逻辑型, 公开, DrawDriverString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_坐标集, 坐标F, 数组, 每一个坐标指定每个文本所在的位置。
.参数 参数_标志, 整数型, 可空, “控制文本标志_”开头常量组合。默认为：“控制文本标志_映射查找”
.参数 参数_矩阵, GP矩阵, 可空

.子程序 画控制文本W, 逻辑型, 公开, DrawDriverString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_坐标集, 坐标F, 数组, 每一个坐标指定每个文本所在的位置。
.参数 参数_标志, 整数型, 可空, “控制文本标志_”开头常量组合。默认为：“控制文本标志_映射查找”
.参数 参数_矩阵, GP矩阵, 可空

.子程序 画路径, 逻辑型, 公开, DrawPath
.参数 参数_画笔, GP画笔
.参数 参数_路径, GP路径

.子程序 画曲线, 逻辑型, 公开, DrawCurve
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画曲线2, 逻辑型, 公开, DrawCurve2
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型

.子程序 画曲线2I, 逻辑型, 公开, DrawCurve2I
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型

.子程序 画曲线3, 逻辑型, 公开, DrawCurve3
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 画曲线3I, 逻辑型, 公开, DrawCurve3I
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_偏移量, 整数型, , 从0开始
.参数 参数_段数, 整数型, , 从0开始
.参数 参数_张力, 小数型

.子程序 画曲线I, 逻辑型, 公开, DrawCurveI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 画图像, 逻辑型, 公开, DrawImage
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型

.子程序 画图像I, 逻辑型, 公开, DrawImageI
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型

.子程序 画图像变形, 逻辑型, 公开, GdipDrawImagePoints 可以画出平行四边形的图像。
.参数 参数_图像, GP图像
.参数 参数_左上角X, 小数型
.参数 参数_左上角Y, 小数型
.参数 参数_右上角X, 小数型
.参数 参数_右上角Y, 小数型
.参数 参数_左下角X, 小数型
.参数 参数_左下角Y, 小数型

.子程序 画图像变形I, 逻辑型, 公开, GdipDrawImagePointsI 可以画出平行四边形的图像。
.参数 参数_图像, GP图像
.参数 参数_左上角X, 整数型
.参数 参数_左上角Y, 整数型
.参数 参数_右上角X, 整数型
.参数 参数_右上角Y, 整数型
.参数 参数_左下角X, 整数型
.参数 参数_左下角Y, 整数型

.子程序 画图像变形部分, 逻辑型, 公开, DrawImagePointsRect 可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左上角X, 小数型
.参数 参数_左上角Y, 小数型
.参数 参数_右上角X, 小数型
.参数 参数_右上角Y, 小数型
.参数 参数_左下角X, 小数型
.参数 参数_左下角Y, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像变形部分I, 逻辑型, 公开, DrawImagePointsRectI 可以画出平行四边形的图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左上角X, 整数型
.参数 参数_左上角Y, 整数型
.参数 参数_右上角X, 整数型
.参数 参数_右上角Y, 整数型
.参数 参数_左下角X, 整数型
.参数 参数_左下角Y, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像部分, 逻辑型, 公开, DrawImagePointRect 可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像部分I, 逻辑型, 公开, DrawImagePointRectI 可以画出源图像的一部分或全部。
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放, 逻辑型, 公开, GdipDrawImageRect 按照指定的矩形缩放图像。
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放I, 逻辑型, 公开, GdipDrawImageRectI 按照指定的矩形缩放图像。
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”

.子程序 画图像缩放部分, 逻辑型, 公开, DrawImageRectRect 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像缩放部分I, 逻辑型, 公开, DrawImageRectRectI 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_原图左边, 整数型
.参数 参数_原图顶边, 整数型
.参数 参数_原图宽度, 整数型
.参数 参数_原图高度, 整数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画图像指针缩放部分, 逻辑型, 公开, DrawImageRectRect 按照指定的矩形缩放图像，并且可以是源图像的一部分或全部
.参数 参数_图像, 整数型
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_原图左边, 小数型
.参数 参数_原图顶边, 小数型
.参数 参数_原图宽度, 小数型
.参数 参数_原图高度, 小数型
.参数 参数_原图单位, 整数型, 可空, 默认为“单位_像素”
.参数 参数_图像属性, GP图像属性, 可空

.子程序 画椭圆, 逻辑型, 公开, DrawEllipse
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 画椭圆I, 逻辑型, 公开, DrawEllipseI
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 画文本, 逻辑型, 公开, DrawString
.参数 参数_文本, 文本型
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空

.子程序 画文本W, 逻辑型, 公开, DrawString
.参数 参数_宽文本, 字节集
.参数 参数_字体, GP字体
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F, 可空
.参数 参数_文本格式, GP文本格式, 可空

.子程序 画圆弧, 逻辑型, 公开, DrawArc 以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画圆弧I, 逻辑型, 公开, DrawArcI 以顺时针方向画一个圆弧
.参数 参数_画笔, GP画笔
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 画直线, 逻辑型, 公开, DrawLine
.参数 参数_画笔, GP画笔
.参数 参数_起始x, 小数型
.参数 参数_起始y, 小数型
.参数 参数_结束x, 小数型
.参数 参数_结束y, 小数型

.子程序 画直线I, 逻辑型, 公开, DrawLineI
.参数 参数_画笔, GP画笔
.参数 参数_起始x, 整数型
.参数 参数_起始y, 整数型
.参数 参数_结束x, 整数型
.参数 参数_结束y, 整数型

.子程序 画直线组, 逻辑型, 公开, DrawLines
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标F, 数组

.子程序 画直线组I, 逻辑型, 公开, DrawLinesI
.参数 参数_画笔, GP画笔
.参数 参数_坐标组, 坐标L, 数组

.子程序 恢复, 逻辑型, 公开, Restore 恢复状态
.参数 参数_状态, 整数型, , 由“保存()”返回的值。

.子程序 获取DC, 整数型, 公开, GetDC 返回当前图形对象的DC句柄。不用后用“对象.释放DC”释放设备场景句柄

.子程序 结束容器, 逻辑型, 公开, EndContainer 结束一个绘制状态。
.参数 参数_状态, 整数型

.子程序 开始容器, 整数型, 公开, BeginContainer 返回状态。
.参数 参数_目标矩形, 矩形F
.参数 参数_源矩形, 矩形F
.参数 参数_单位, 整数型, 可空

.子程序 开始容器2, 整数型, 公开, BeginContainer2 建一个新绘图状态，返回状态。

.子程序 开始容器I, 整数型, 公开, BeginContainerI 建一个新绘图状态，返回状态。
.参数 参数_目标矩形, 矩形L
.参数 参数_源矩形, 矩形L
.参数 参数_单位, 整数型, 可空

.子程序 列举图元文件目的矩形, 逻辑型, 公开, EnumerateMetafileDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形F
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的矩形I, 逻辑型, 公开, EnumerateMetafileDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形L
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标, 逻辑型, 公开, EnumerateMetafileDestPoint 这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标F
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标I, 逻辑型, 公开, EnumerateMetafileDestPointI 这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标集, 逻辑型, 公开, EnumerateMetafileDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标F, 数组
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件目的坐标集I, 逻辑型, 公开, EnumerateMetafileDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标L, 数组
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的矩形, 逻辑型, 公开, EnumerateMetafileSrcRectDestRect。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形F
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的矩形I, 逻辑型, 公开, EnumerateMetafileSrcRectDestRectI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的矩形, 矩形L
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标, 逻辑型, 公开, EnumerateMetafileSrcRectDestPoint。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标F
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标I, 逻辑型, 公开, EnumerateMetafileSrcRectDestPointI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标集, 逻辑型, 公开, EnumerateMetafileSrcRectDestPoints。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标组, 坐标F, 数组
.参数 参数_源矩形, 矩形F
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 列举图元文件源矩形目的坐标集I, 逻辑型, 公开, EnumerateMetafileSrcRectDestPointsI。这个方法可以在回调函数中使用回放图元文件。
.参数 参数_图元文件, GP图元文件
.参数 参数_目的坐标, 坐标L, 数组
.参数 参数_源矩形, 矩形L
.参数 参数_源单位, 整数型, , “单位_”开头常量。
.参数 参数_回调函数, 整数型, , 参数1 整数型：记录类型，参数2 整数型：标志，参数3 整数型：数据大小，参数4 整数型：数据指针，参数5 整数型：自定义数值。返回值 逻辑型。
.参数 参数_自定义数值, 整数型, 可空
.参数 参数_图像属性, GP图像属性, 可空

.子程序 平移剪辑区, 逻辑型, 公开, TranslateClip
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型

.子程序 平移剪辑区I, 逻辑型, 公开, TranslateClipI
.参数 参数_水平偏移量, 整数型
.参数 参数_垂直偏移量, 整数型

.子程序 清除, 逻辑型, 公开, GraphicsClear 清除整个绘图面，并以指定色填充。
.参数 参数_ARGB颜色, 整数型, 可空, 默认为透明

.子程序 取垂直分辨率, 小数型, 公开, GetDpiY

.子程序 取混合模式, 整数型, 公开, GetCompositingMode。“混合模式_”开头常量。

.子程序 取混合品质, 整数型, 公开, GetCompositingQuality。“混合品质_”开头常量。

.子程序 取剪辑区, 逻辑型, 公开, GetClip
.参数 参数_区域, GP区域, 参考, 返回的区域。

.子程序 取剪辑区边界, 矩形F, 公开, GetClipBounds

.子程序 取剪辑区边界I, 矩形L, 公开, GetClipBoundsI

.子程序 取可见剪辑区边界, 矩形F, 公开, GetVisibleClipBounds

.子程序 取可见剪辑区边界I, 矩形L, 公开, GetVisibleClipBoundsI

.子程序 取平滑模式, 整数型, 公开, GetSmoothingMode 返回“平滑模式_”开头常量。

.子程序 取水平分辨率, 小数型, 公开, GetDpiX

.子程序 取算法模式, 整数型, 公开, GetInterpolationMode “算法模式_”开头常量。

.子程序 取文本对比度, 整数型, 公开, GetTextContrast

.子程序 取文本渲染模式, 整数型, 公开, GetTextRenderingHint。“文本渲染模式_”开头常量。

.子程序 取像素偏移模式, 整数型, 公开, GetTextRenderingHint “像素偏移模式_”开头常量。

.子程序 取渲染原点, 逻辑型, 公开, GetRenderingOrigin
.参数 参数_x, 整数型, 参考, 只能提供变量，装载数据
.参数 参数_y, 整数型, 参考, 只能提供变量，装载数据

.子程序 取页比例, 小数型, 公开, GetPageUnit

.子程序 取页单位, 整数型, 公开, GetPageUnit “单位_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取最近颜色, 整数型, 公开, GetNearestColor 返回最近的ARGB颜色。
.参数 参数_参考颜色, 整数型, 参考

.子程序 是否可见矩形, 逻辑型, 公开, IsVisibleRect
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 是否可见矩形I, 逻辑型, 公开, IsVisibleRectI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 是否可见坐标, 逻辑型, 公开, IsVisiblePoint
.参数 参数_x, 小数型
.参数 参数_y, 小数型

.子程序 是否可见坐标I, 逻辑型, 公开, IsVisiblePointI
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.子程序 是否为空剪辑区, 逻辑型, 公开, IsClipEmpty

.子程序 是否为空可见剪辑区, 逻辑型, 公开, IsVisibleClipEmpty

.子程序 释放DC, 逻辑型, 公开, ReleaseDC 释放由方法“对象.获取DC”返回的设备场景句柄
.参数 参数_DC句柄, 整数型

.子程序 刷新, , 公开, Flush 用此方法强制执行所有挂起的图形操作，按照指定，等待或者不等待，在操作完成之前返回
.参数 参数_方式, 整数型, 可空, “刷新方式_”开头常量。默认为“刷新方式_立即”

.子程序 添加图元文件注译, 逻辑型, 公开, AddMetafileComment
.参数 参数_数据, 字节集

.子程序 填充闭合曲线, 逻辑型, 公开, FillClosedCurve
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组

.子程序 填充闭合曲线2, 逻辑型, 公开, FillClosedCurve2
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_张力, 小数型
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充闭合曲线2I, 逻辑型, 公开, FillClosedCurve2
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_张力, 小数型
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充闭合曲线I, 逻辑型, 公开, FillClosedCurve
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组

.子程序 填充饼, 逻辑型, 公开, FillPie
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 填充饼I, 逻辑型, 公开, FillPieI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_开始角度, 小数型
.参数 参数_扫描角度, 小数型

.子程序 填充多边形, 逻辑型, 公开, FillPolygon
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标F, 数组
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充多边形I, 逻辑型, 公开, FillPolygonI
.参数 参数_画刷, 
.参数 参数_坐标组, 坐标L, 数组
.参数 参数_填充模式, 整数型, 可空, “填充模式_”开头常量，默认为：“#填充模式_交替”

.子程序 填充矩形, 逻辑型, 公开, FillRectangle
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 填充矩形2, 逻辑型, 公开, FillRectangle2
.参数 参数_画刷, 
.参数 参数_矩形, 矩形F

.子程序 填充矩形I, 逻辑型, 公开, FillRectangleI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 填充矩形组, 逻辑型, 公开, FillRectangles
.参数 参数_画刷, 
.参数 参数_矩形组, 矩形F, 数组

.子程序 填充矩形组I, 逻辑型, 公开, FillRectanglesI
.参数 参数_画刷, 
.参数 参数_矩形组, 矩形L, 数组

.子程序 填充路径, 逻辑型, 公开, FillPath
.参数 参数_画刷, 
.参数 参数_路径, GP路径

.子程序 填充区域, 逻辑型, 公开, FillRegion
.参数 参数_画刷, 
.参数 参数_区域, GP区域

.子程序 填充椭圆, 逻辑型, 公开, FillEllipse
.参数 参数_画刷, 
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型

.子程序 填充椭圆I, 逻辑型, 公开, FillEllipseI
.参数 参数_画刷, 
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型

.子程序 销毁, 逻辑型, 公开, DeleteGraphics

.子程序 置混合模式, 逻辑型, 公开, SetCompositingMode
.参数 参数_混合模式, 整数型, , “混合模式_”开头常量。

.子程序 置混合品质, 逻辑型, 公开, SetCompositingQuality
.参数 参数_混合模式, 整数型, , “混合品质_”开头常量。

.子程序 置剪辑区自矩形, 逻辑型, 公开, SetClipRect
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自矩形I, 逻辑型, 公开, SetClipRectI
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自路径, 逻辑型, 公开, SetClipPath
.参数 参数_路径, GP路径
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自区域, 逻辑型, 公开, SetClipRegion
.参数 参数_区域, GP区域
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自区域句柄, 逻辑型, 公开, SetClipRegion
.参数 参数_区域句柄, 整数型, , hRgn
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置剪辑区自图形, 逻辑型, 公开, SetClipGraphics
.参数 参数_源图形, GP图形
.参数 参数_合并模式, 整数型, 可空, 默认为“#合并模式_替代”。

.子程序 置平滑模式, 逻辑型, 公开, SetSmoothingMode
.参数 参数_呈现模式, 整数型, , “平滑模式_”开头常量。

.子程序 置算法模式, 逻辑型, 公开, SetInterpolationMode 设置在缩放或旋转图像时使用的算法
.参数 参数_算法模式, 整数型, , “算法模式_”开头常量。

.子程序 置文本对比度, 逻辑型, 公开, SetTextContrast
.参数 参数_对比度, 整数型, , 必须介于 0 和 12 之间

.子程序 置文本渲染模式, 逻辑型, 公开, SetTextRenderingHint
.参数 参数_文本呈现模式, 整数型, , “文本渲染模式_”开头常量。

.子程序 置像素偏移模式, 逻辑型, 公开, SetPixelOffsetMode 设置在缩放或旋转图像时使用的算法
.参数 参数_像素偏移模式, 整数型, , “像素偏移模式_”开头常量。

.子程序 置渲染原点, 逻辑型, 公开, SetRenderingOrigin
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.子程序 置页比例, 逻辑型, 公开, SetPageScale
.参数 参数_比例, 小数型

.子程序 置页单位, 逻辑型, 公开, SetPageUnit 设置当前页的变形单位。
.参数 参数_单位, 整数型, , “单位_”开头常量。

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 重置剪辑区, 逻辑型, 公开, ResetClip 重置为无限区域。

.子程序 转换坐标空间, 逻辑型, 公开, TransformPoints
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标F, 参考 数组

.子程序 转换坐标空间I, 逻辑型, 公开, TransformPointsI
.参数 参数_目标坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_源坐标空间, 整数型, , “坐标空间_”开头常量。
.参数 参数_坐标组, 坐标L, 参考 数组

.程序集 GP图元文件, GP图像, 公开, Metafile 基类：GP图像

.子程序 Emf到Wmf数据, 逻辑型, 公开, EmfToWmfBits
.参数 参数_hemf, 整数型
.参数 参数_数据大小, 整数型
.参数 参数_数据, 字节集, 参考 可空, 如果为空，则返回数据大小。
.参数 参数_映射模式, 整数型, 可空, 见GDI中的SetMapMode。默认为：MM_ANISOTROPIC
.参数 参数_标志, 整数型, 可空, “EMF到WMF标志_”开头常量，默认为“EMF到WMF标志_默认”

.子程序 保存到文件, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 文本型
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到文件W, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到字节集, 字节集, 公开, SaveToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存添加, 逻辑型, 公开, SaveAdd
.参数 参数_编码器参数集, 编码器参数集

.子程序 保存添加图像, 逻辑型, 公开, SaveAddImage
.参数 参数_图像, GP图像
.参数 参数_编码器参数集, 编码器参数集

.子程序 播放记录, 逻辑型, 公开, PlayRecord
.参数 参数_记录类型, 整数型
.参数 参数_标志, 整数型, , 0
.参数 参数_数据大小, 整数型
.参数 参数_数据指针, 整数型

.子程序 创建自hEMF, 逻辑型, 公开, CreateFromEmf
.参数 参数_EMF句柄, 整数型
.参数 参数_是否删除句柄, 逻辑型, 可空, 指定是否自动删除图元文件句柄。

.子程序 创建自hWMF, 逻辑型, 公开, CreateFromWmf
.参数 参数_WMF句柄, 整数型
.参数 参数_APM文件头, APM文件头
.参数 参数_是否删除句柄, 逻辑型, 可空, 指定是否自动删除图元文件句柄。

.子程序 创建自WMF文件, 逻辑型, 公开, CreateFromWmfFile
.参数 参数_文件名, 文本型
.参数 参数_APM文件头, APM文件头

.子程序 创建自WMF文件W, 逻辑型, 公开, CreateFromWmfFileW
.参数 参数_文件名, 字节集
.参数 参数_APM文件头, APM文件头

.子程序 创建自记录, 逻辑型, 公开, CreateFromRecord
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自记录I, 逻辑型, 公开, CreateFromRecordI
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自记录文件名, 逻辑型, 公开, CreateFromRecordFileName
.参数 参数_文件名, 文本型
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_适合
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自记录文件名I, 逻辑型, 公开, CreateFromRecordFileNameI
.参数 参数_文件名, 文本型
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_适合
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自记录字节集, 逻辑型, 公开, CreateFromRecordStream
.参数 参数_字节集, 字节集
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形F, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自记录字节集I, 逻辑型, 公开, CreateFromRecordStreamI
.参数 参数_字节集, 字节集
.参数 参数_hdc, 整数型, , 设备上下文句柄。
.参数 参数_框架矩形, 矩形L, 可空
.参数 参数_框架单位, 整数型, 可空, “图元文件单位_”开头常量。默认为：图元文件单位_GDI
.参数 参数_EMF类型, 整数型, 可空, “EMF类型_”开头常量。默认为：EMF类型_EmfPlusDual
.参数 参数_描述文本, 文本型, 可空

.子程序 创建自文件, 逻辑型, 公开, CreateFromFile
.参数 参数_文件名, 文本型
.参数 参数_保留, 逻辑型, 可空

.子程序 创建自文件W, 逻辑型, 公开, CreateFromFileW
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_保留, 逻辑型, 可空

.子程序 创建自字节集, 逻辑型, 公开, CreateFromStream
.参数 参数_字节集, 字节集
.参数 参数_保留, 逻辑型, 可空

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_图像, GP图像, 参考

.子程序 取EMF句柄, 整数型, 公开, GetHenhMetafile 需要使用 DeleteEnhMetafile 释放。

.子程序 取边界矩形, 整数型, 公开, GetBounds 成功返回0
.参数 参数_边界矩形, 矩形F, 参考
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。

.子程序 取编码器参数列表, 逻辑型, 公开, GetEncoderParameterList
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考

.子程序 取垂直分辨率, 小数型, 公开, GetVerticalResolution。以“像素/英寸”为单位

.子程序 取高度, 整数型, 公开, GetHeight

.子程序 取各帧延时, 逻辑型, 公开
.参数 参数_延时, 整数型, 数组

.子程序 取宽度, 整数型, 公开, GetWidth

.子程序 取类型, 整数型, 公开, GetType。返回“图像类型_”开头常量。

.子程序 取属性标签列表, 整数型, 公开, GetPropertyIdList 返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组

.子程序 取属性项目, 逻辑型, 公开, GetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考

.子程序 取水平分辨率, 小数型, 公开, GetHorizontalResolution。以“像素/英寸”为单位

.子程序 取图像属性, 整数型, 公开, GetFlags 返回“图像属性_”开头常量。

.子程序 取图像缩略图, 逻辑型, 公开, GetThumbnailImage
.参数 参数_缩略图宽度, 整数型
.参数 参数_缩略图高度, 整数型
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。

.子程序 取图元文件头, 图元文件头, 公开, GetMetafileHeader

.子程序 取图元文件头自hEMF, 图元文件头, 公开, GetMetafileHeaderFromhEMF
.参数 参数_hEMF, 整数型

.子程序 取图元文件头自hWMF, 图元文件头, 公开, GetMetafileHeaderFromhWMF
.参数 参数_hWMF, 整数型
.参数 参数_APM文件头, APM文件头

.子程序 取图元文件头自文件, 图元文件头, 公开, GetMetafileHeaderFromFile
.参数 参数_文件名, 文本型

.子程序 取图元文件头自字节集, 图元文件头, 公开, GetMetafileHeaderFromStream
.参数 参数_字节集, 字节集

.子程序 取物理尺寸, 尺寸F, 公开, GetPhysicalDimension

.子程序 取像素格式, 整数型, 公开, GetPixelFormat 返回“像素格式_”开头常量。

.子程序 取颜色调色板, 逻辑型, 公开, GetPalette
.参数 参数_颜色调色板, 颜色调色板, 参考

.子程序 取原始格式, 文本型, 公开, GetRawFormat 返回“图像格式_”开头常量。

.子程序 取栅格化限制, 整数型, 公开, GetDownLevelRasterizationLimit

.子程序 取帧数, 整数型, 公开, GetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。

.子程序 取帧维面列表, 整数型, 公开, GetFrameDimensionsList 返回数量
.参数 参数_帧惟面, 文本型, 参考 数组, “帧维面_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DisposeMetafile

.子程序 旋转翻转, 逻辑型, 公开, RotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。

.子程序 移除属性项目, 逻辑型, 公开, RemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。

.子程序 置活动帧, 逻辑型, 公开, SelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型

.子程序 置属性项目, 逻辑型, 公开, SetPropertyItem
.参数 参数_属性项目, 属性项目

.子程序 置颜色调色板, 逻辑型, 公开, SetPalette
.参数 参数_颜色调色板, 颜色调色板

.子程序 置栅格化限制, 逻辑型, 公开, SetDownLevelRasterizationLimit
.参数 参数_栅格化限制DPI, 整数型

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP位图, GP图像, 公开, Bitmap 基类：GP图像

.子程序 保存到文件, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 文本型
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到文件W, 逻辑型, 公开, SaveToFile
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量。默认为“图像格式_BMP”
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存到字节集, 字节集, 公开, SaveToStream
.参数 参数_图像格式, 文本型, 可空, “图像格式_”开头常量
.参数 参数_编码器参数集, 编码器参数集, 可空

.子程序 保存添加, 逻辑型, 公开, SaveAdd
.参数 参数_编码器参数集, 编码器参数集

.子程序 保存添加图像, 逻辑型, 公开, SaveAddImage
.参数 参数_图像, GP图像
.参数 参数_编码器参数集, 编码器参数集

.子程序 创建自GDI对象, 逻辑型, 公开, CreateFromGdiDib
.参数 参数_BITMAPINFO, 整数型, , BITMAPINFO结构指针。
.参数 参数_位图数据, 整数型, , 位图数据指针。

.子程序 创建自扫描行, 逻辑型, 公开, CreateFromScan0
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_跨步, 整数型, , 指定相邻扫描行开始处之间字节偏移量的整数。这通常（但不一定）是以像素格式表示的字节数（例如，2 表示每像素 16 位）乘以位图的宽度。传递给此参数的值必须为 4 的倍数。提供一个公式：左移(右移(参数_宽度*位深+31,5),2)
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_像素数据, 整数型, 可空, 指向包含像素数据的字节集指针。

.子程序 创建自图标句柄, 逻辑型, 公开, CreateFromHICON
.参数 参数_图标句柄, 整数型, , hIcon

.子程序 创建自图形, 逻辑型, 公开, CreateFromGraphics
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_图形, GP图形, , 使用其分辨率

.子程序 创建自位图句柄, 逻辑型, 公开, CreateFromHBITMAP
.参数 参数_位图句柄, 整数型, , hBitmap
.参数 参数_调色板句柄, 整数型, 可空, 如果位图句柄不是一个设备无关位图，则用于定义位图颜色。

.子程序 创建自文件, 逻辑型, 公开, CreateFromFile
.参数 参数_文件名, 文本型
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 创建自文件W, 逻辑型, 公开, CreateFromFileW
.参数 参数_文件名, 字节集, , 宽文本
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 创建自像素格式, 逻辑型, 公开, CreateFromPixelFormat
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_像素格式, 整数型, 可空, “像素格式_”开头常量。默认为：“像素格式_32bppARGB”

.子程序 创建自资源, 逻辑型, 公开, CreateFromResource
.参数 参数_实例句柄, 整数型
.参数 参数_资源ID, 整数型

.子程序 创建自字节集, 逻辑型, 公开, CreateFromStream
.参数 参数_字节集, 字节集
.参数 参数_是否ICM, 逻辑型, 可空, 默认为假。如果为真表示使用已嵌入颜色管理信息来进行颜色校正。

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_图像, GP图像, 参考

.子程序 复制部分, 逻辑型, 公开, CloneArea
.参数 参数_矩形, 矩形F
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_位图, GP位图, 参考, 返回新的位图对象。

.子程序 复制部分I, 逻辑型, 公开, CloneAreaI
.参数 参数_矩形, 矩形L
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_位图, GP位图, 参考, 返回新的位图对象。

.子程序 解锁数据, 逻辑型, 公开, UnlockBits
.参数 参数_位图数据, 位图数据

.子程序 取边界矩形, 整数型, 公开, GetBounds 成功返回0
.参数 参数_边界矩形, 矩形F, 参考
.参数 参数_单位, 整数型, 参考 可空, 提供整数型变量取返回值,指定该矩形的单位。“单位_”开头常量。

.子程序 取编码器参数列表, 逻辑型, 公开, GetEncoderParameterList
.参数 参数_图像格式, 文本型, , “图像格式_”开头常量。
.参数 参数_编码器, 编码器参数集, 参考

.子程序 取垂直分辨率, 小数型, 公开, GetVerticalResolution。以“像素/英寸”为单位

.子程序 取高度, 整数型, 公开, GetHeight

.子程序 取各帧延时, 逻辑型, 公开
.参数 参数_延时, 整数型, 数组

.子程序 取宽度, 整数型, 公开, GetWidth

.子程序 取类型, 整数型, 公开, GetType。返回“图像类型_”开头常量。

.子程序 取某点颜色, 整数型, 公开, GetPixel 返回ARGB颜色值。
.参数 参数_x, 整数型
.参数 参数_y, 整数型

.子程序 取属性标签列表, 整数型, 公开, GetPropertyIdList 返回属性标签数。
.参数 参数_属性标签数组, 整数型, 数组

.子程序 取属性项目, 逻辑型, 公开, GetPropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。
.参数 参数_属性项目, 属性项目, 参考

.子程序 取水平分辨率, 小数型, 公开, GetHorizontalResolution。以“像素/英寸”为单位

.子程序 取图标句柄, 整数型, 公开, GetHICON 返回图标句柄。需要调用 DestroyIcon 释放。

.子程序 取图像属性, 整数型, 公开, GetFlags 返回“图像属性_”开头常量。

.子程序 取图像缩略图, 逻辑型, 公开, GetThumbnailImage
.参数 参数_缩略图宽度, 整数型
.参数 参数_缩略图高度, 整数型
.参数 参数_缩略图, GP图像, 参考, 返回一个缩略图的Gdip图像。

.子程序 取位图句柄, 整数型, 公开, GetHBITMAP 返回位图句柄。需要调用 DeleteObject 释放。
.参数 参数_背景ARGB颜色, 整数型, 可空, 指定背景色。如果位图完全不透明，则忽略此参数。

.子程序 取物理尺寸, 尺寸F, 公开, GetPhysicalDimension

.子程序 取像素格式, 整数型, 公开, GetPixelFormat 返回“像素格式_”开头常量。

.子程序 取颜色调色板, 逻辑型, 公开, GetPalette
.参数 参数_颜色调色板, 颜色调色板, 参考

.子程序 取原始格式, 文本型, 公开, GetRawFormat 返回“图像格式_”开头常量。

.子程序 取帧数, 整数型, 公开, GetFrameCount
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。

.子程序 取帧维面列表, 整数型, 公开, GetFrameDimensionsList 返回数量
.参数 参数_帧惟面, 文本型, 参考 数组, “帧维面_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 锁定数据, 逻辑型, 公开, LockBits
.参数 参数_锁定矩形, 矩形L, , 被锁定的矩形范围。
.参数 参数_锁定模式, 整数型, , “图像锁定模式_”开头常量。
.参数 参数_像素格式, 整数型, , “像素格式_”开头常量。
.参数 参数_位图数据, 位图数据, 参考, [in,out]

.子程序 销毁, 逻辑型, 公开, DisposeBitmap

.子程序 旋转到, 逻辑型, 公开, 根据指定的角度旋转，旋转后的位图保存在“参数_旋转后位图”
.参数 参数_旋转角度, 小数型
.参数 参数_旋转后位图, GP位图, 参考
.参数 参数_旋转后ARGB背景色, 整数型, 可空, 设置旋转后图像ARGB背景色，默认为透明
.参数 参数_旋转后算法模式, 整数型, 可空, 设置旋转的算法模式，“算法模式_”开头常量
.参数 参数_旋转后尺寸, 尺寸F, 可空, 设置旋转后宽度和高度，如果为空，则自动计算

.子程序 旋转翻转, 逻辑型, 公开, RotateFlip
.参数 参数_旋转翻转类型, 整数型, , “旋转翻转_”开头常量。

.子程序 移除属性项目, 逻辑型, 公开, RemovePropertyItem
.参数 参数_属性标签, 整数型, , “属性标签_”开头常量。通常是通过“取属性标签列表()”方法来查看此图像有哪些属性。

.子程序 应用效果, 逻辑型, 公开, ApplyEffect
.参数 参数_效果, GP效果类
.参数 参数_矩形, 矩形L, 可空

.子程序 置分辨率, 逻辑型, 公开, SetResolution
.参数 参数_水平分辨率, 小数型
.参数 参数_垂直分辨率, 小数型

.子程序 置活动帧, 逻辑型, 公开, SelectActiveFrame
.参数 参数_帧维面, 文本型, , “帧维面_”开头常量。
.参数 参数_索引, 整数型

.子程序 置某点颜色, 逻辑型, 公开, SetPixel
.参数 参数_x, 整数型
.参数 参数_y, 整数型
.参数 参数_ARGB颜色, 整数型

.子程序 置属性项目, 逻辑型, 公开, SetPropertyItem
.参数 参数_属性项目, 属性项目

.子程序 置颜色调色板, 逻辑型, 公开, SetPalette
.参数 参数_颜色调色板, 颜色调色板

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP文本格式, , 公开, StringFormat

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_格式标志, 整数型, 可空, “文本格式标志_”开头常量。
.参数 参数_语言, 短整数型, 可空, 默认为：LANG_NEUTRAL=0

.子程序 创建自通用默认, 逻辑型, 公开, CreateFromGenericDefault

.子程序 创建自通用印刷, 逻辑型, 公开, CreateFromGenericTypographic

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_文本格式, GP文本格式, 参考

.子程序 取测量字符范围数, 整数型, 公开, GetMeasurableCharacterRangeCount

.子程序 取对齐, 整数型, 公开, GetAlignment 返回“文本对齐_”开头常量。

.子程序 取格式标志, 整数型, 公开, GetFlags 返回“文本格式标志_”开头常量。

.子程序 取行对齐, 整数型, 公开, GetLineAlignment 返回“文本对齐_”开头常量。

.子程序 取热键前缀, 整数型, 公开, GetHotkeyPrefix 返回“热键前缀_”开头常量。

.子程序 取数字替换, 逻辑型, 公开, GetDigitSubstitution
.参数 参数_数字替换, 整数型, 参考, 返回“文本数字替换_”开头常量。
.参数 参数_语言, 短整数型, 参考 可空

.子程序 取修整, 整数型, 公开, GetTrimming 返回“文本修整_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取制表位偏移, 整数型, 公开, GetTabStops 返回制表位偏移总数。
.参数 参数_初始偏移量, 小数型, 参考, 文本行开头和第一个制表位之间的空格数
.参数 参数_偏移距离, 小数型, 参考 数组, 数组中的每个制表位偏移量（第一个除外）都是相对于前一个的。第一个制表位偏移量相对于由 “参数_初始偏移量” 指定的初始偏移位置。例如，如果初始偏移位置是 8，第一个制表位偏移量是 50，则第一个制表位的位置是 58。如果初始偏移位置是零，则第一个制表位偏移量相对于位置 0（即原点字符串）。

.子程序 销毁, 逻辑型, 公开, DeleteStringFormat

.子程序 置测量字符范围, 逻辑型, 公开, SetMeasurableCharacterRanges
.参数 参数_字符范围, 测试字符范围, 数组

.子程序 置对齐, 逻辑型, 公开, SetAlignment
.参数 参数_对齐方式, 整数型, , “文本对齐_”开头常量。

.子程序 置格式标志, 逻辑型, 公开, SetFlags
.参数 参数_格式标志, 整数型, , “文本格式标志_”开头常量。

.子程序 置行对齐, 逻辑型, 公开, SetLineAlignment
.参数 参数_对齐方式, 整数型, , “文本对齐_”开头常量。

.子程序 置热键前缀, 逻辑型, 公开, SetHotkeyPrefix 字符(&)
.参数 参数_热键前缀, 整数型, , “热键前缀_”开头常量。

.子程序 置数字替换, 逻辑型, 公开, SetDigitSubstitution
.参数 参数_数字替换, 整数型, , “文本数字替换_”开头常量。
.参数 参数_语言, 短整数型, 可空, 默认为：LANG_NEUTRAL

.子程序 置修整, 逻辑型, 公开, SetTrimming
.参数 参数_修整方式, 整数型, , “文本修整_”开头常量。

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 置制表位偏移, 逻辑型, 公开, SetTabStops
.参数 参数_初始偏移量, 小数型, , 文本行开头和第一个制表位之间的空格数
.参数 参数_偏移距离, 小数型, 数组, 数组中的每个制表位偏移量（第一个除外）都是相对于前一个的。第一个制表位偏移量相对于由 “参数_初始偏移量” 指定的初始偏移位置。例如，如果初始偏移位置是 8，第一个制表位偏移量是 50，则第一个制表位的位置是 58。如果初始偏移位置是零，则第一个制表位偏移量相对于位置 0（即原点字符串）。

.程序集 GP纹理画刷, , 公开, TextureBrush 基类：GP画刷

.子程序 变形平移, 逻辑型, 公开, TranslateTransform
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 创建, 逻辑型, 公开, CreateFromImage
.参数 参数_图像, GP图像
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。默认为：“环绕模式_平铺”

.子程序 创建自矩形, 逻辑型, 公开, CreateFromImageRect
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。

.子程序 创建自矩形I, 逻辑型, 公开, CreateFromImageRectI
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_环绕模式, 整数型, 可空, “环绕模式_”开头常量。

.子程序 创建自图像属性, 逻辑型, 公开, CreateFromImageAttributes
.参数 参数_图像, GP图像
.参数 参数_左边, 小数型
.参数 参数_顶边, 小数型
.参数 参数_宽度, 小数型
.参数 参数_高度, 小数型
.参数 参数_图像属性, GP图像属性, 可空

.子程序 创建自图像属性I, 逻辑型, 公开, CreateFromImageAttributesI
.参数 参数_图像, GP图像
.参数 参数_左边, 整数型
.参数 参数_顶边, 整数型
.参数 参数_宽度, 整数型
.参数 参数_高度, 整数型
.参数 参数_图像属性, GP图像属性, 可空

.子程序 复制, 逻辑型, 公开, Clone 将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, , 参考

.子程序 取环绕模式, 整数型, 公开, GetWrapMode。返回“环绕模式_”开头常量。

.子程序 取类型, 整数型, 公开, GetType 返回“#画刷类型_”开头常量。

.子程序 取图像, 逻辑型, 公开, GetImage
.参数 参数_图像, GP图像, 参考

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteBrush

.子程序 置环绕模式, 逻辑型, 公开, SetWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP系统字体集, , 公开, InstalledFontCollection 基类：GP字体集

.子程序 创建, 逻辑型, 公开, Create

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取字体族列表, 整数型, 公开, GetFamilies 成功返回实际字体族数量。
.参数 参数_数量, 整数型
.参数 参数_字体族, GP字体族, 参考 数组

.子程序 取字体族数, 整数型, 公开, GetFamilyCount 

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP线性渐变画刷, , 公开, LinearGradientBrush 基类：GP画刷

.子程序 变形平移, 逻辑型, 公开, TranslateTransform。
.参数 参数_水平偏移量, 小数型
.参数 参数_垂直偏移量, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形取矩阵, 逻辑型, 公开, GetTransform
.参数 参数_矩阵, GP矩阵, 参考

.子程序 变形缩放, 逻辑型, 公开, ScaleTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先计算”

.子程序 变形缩放在, 逻辑型, 公开, ScaleAtTransform
.参数 参数_水平缩放倍数, 小数型
.参数 参数_垂直缩放倍数, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形相乘, 逻辑型, 公开, MultiplyTransform
.参数 参数_矩阵, GP矩阵
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算”

.子程序 变形旋转, 逻辑型, 公开, RotateTransform
.参数 参数_角度, 小数型
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“#矩阵顺序_预先计算

.子程序 变形旋转在, 逻辑型, 公开, RotateAtTransform
.参数 参数_角度, 小数型
.参数 参数_中心点, 坐标F
.参数 参数_矩阵顺序, 整数型, 可空, “矩阵顺序_”开头常量。默认为“ #矩阵顺序_预先”

.子程序 变形置矩阵, 逻辑型, 公开, SetTransform
.参数 参数_矩阵, GP矩阵

.子程序 变形重置, 逻辑型, 公开, ResetTransform

.子程序 创建, 逻辑型, 公开, CreateFromPoint
.参数 参数_起点坐标, 坐标F
.参数 参数_终点坐标, 坐标F
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型

.子程序 创建Ex, 逻辑型, 公开, CreateFromPoint
.参数 参数_起点坐标, 坐标F
.参数 参数_终点坐标, 坐标F
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型
.参数 环绕模式, 整数型, , #环绕模式_

.子程序 创建I, 逻辑型, 公开, CreateFromPointI
.参数 参数_起点坐标, 坐标L
.参数 参数_终点坐标, 坐标L
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型

.子程序 创建自矩形, 逻辑型, 公开, CreateFromRect
.参数 参数_矩形, 矩形F
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型
.参数 参数_线性渐变模式, 整数型, 可空, “线性渐变模式_”开头常量。

.子程序 创建自矩形I, 逻辑型, 公开, CreateFromRectI
.参数 参数_矩形, 矩形L
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型
.参数 参数_线性渐变模式, 整数型, 可空, “线性渐变模式_”开头常量。

.子程序 创建自矩形角度, 逻辑型, 公开, CreateFromRectWithAngle
.参数 参数_矩形, 矩形F
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型
.参数 参数_角度, 小数型
.参数 参数_角度是否可扩展, 逻辑型, 可空

.子程序 创建自矩形角度I, 逻辑型, 公开, CreateFromRectWithAngleI
.参数 参数_矩形, 矩形L
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型
.参数 参数_角度, 小数型
.参数 参数_角度是否可扩展, 逻辑型, 可空

.子程序 复制, 逻辑型, 公开, Clone 将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, , 参考

.子程序 取伽玛校正, 逻辑型, 公开, GetGammaCorrection

.子程序 取环绕模式, 整数型, 公开, GetWrapMode 返回“环绕模式_”开头常量。

.子程序 取混合, 整数型, 公开, GetBlend 返回总数。
.参数 参数_颜色比例, 小数型, 数组, 提供小数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 同上。

.子程序 取混合数, 整数型, 公开, GetBlendCount

.子程序 取矩形, 矩形F, 公开, GetRectangle

.子程序 取矩形I, 矩形L, 公开, GetRectangleI

.子程序 取类型, 整数型, 公开, GetType 返回“#画刷类型_”开头常量。

.子程序 取线性渐变色, 逻辑型, 公开, GetLineColors
.参数 参数_起点ARGB颜色, 整数型, 参考
.参数 参数_终点ARGB颜色, 整数型, 参考

.子程序 取预设颜色, 整数型, 公开, GetInterpolationColor 返回总数。
.参数 参数_ARGB颜色, 整数型, 数组, 提供整数型数组变量，装载数据。
.参数 参数_位置比例, 小数型, 数组, 提供小数型数组变量，装载数据。

.子程序 取预设颜色数, 整数型, 公开, GetInterpolationColorCount

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteBrush

.子程序 置伽玛校正, 逻辑型, 公开, SetGammaCorrection
.参数 参数_是否启用校正, 逻辑型

.子程序 置环绕模式, 逻辑型, 公开, SetWrapMode
.参数 参数_环绕模式, 整数型, , “环绕模式_”开头常量。

.子程序 置混合, 逻辑型, 公开, SetBlend
.参数 参数_颜色比例, 小数型, 数组, 如：{0，0.5，1}
.参数 参数_位置比例, 小数型, 数组, 如：{0，0.2，1}

.子程序 置线性混合, 逻辑型, 公开, SetBlendTrianglarShape
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。

.子程序 置线性渐变色, 逻辑型, 公开, SetLineColors
.参数 参数_起点ARGB颜色, 整数型
.参数 参数_终点ARGB颜色, 整数型

.子程序 置预设颜色, 逻辑型, 公开, SetInterpolationColors
.参数 参数_ARGB颜色, 整数型, 数组, ARGB颜色数组。
.参数 参数_位置比例, 小数型, 数组, 如{0，0.3，1}

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.子程序 置钟形混合, 逻辑型, 公开, SetBlendBellShape
.参数 参数_焦点, 小数型, , 0到1之间的小数。
.参数 参数_比例, 小数型, , 0到1之间的小数。

.程序集 GP效果类, , 公开, Effect

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP颜色查找表类, GP效果类, 公开, ColorLUT 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateColorLUT

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_颜色查找表参数, 颜色查找表参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_颜色查找表参数, 颜色查找表参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP颜色矩阵类, , 公开, ColorMatrix

.子程序 饱和度, , 公开
.参数 参数_饱和度, 小数型, , 0-2 之间

.子程序 对比度, , 公开
.参数 参数_对比度, 小数型, , 0-2 之间

.子程序 反相, , 公开, 底片效果

.子程序 亮度, , 公开
.参数 参数_比例, 小数型, , -1 到 1 之前

.子程序 取数组, , 公开
.参数 参数_小数组, 小数型, 参考 数组

.子程序 去色, , 公开, 灰度化(黑白)

.子程序 色相, , 公开
.参数 参数_色相, 整数型, , -180 到 180 之间

.子程序 置红色, , 公开
.参数 参数_比例, 小数型, , -1 到 1 之间

.子程序 置蓝色, , 公开
.参数 参数_比例, 小数型, , -1 到 1 之前

.子程序 置绿色, , 公开
.参数 参数_比例, 小数型, , -1 到 1 之前

.子程序 置数组, 逻辑型, 公开
.参数 参数_小数组, 小数型, 数组

.子程序 置透明度, , 公开
.参数 参数_比例, 小数型, , 0 到 1 之前

.子程序 重置, , 公开

.程序集 GP颜色矩阵效果类, GP效果类, 公开, ColorMatrixEffect 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateColorMatrixEffect

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_颜色矩阵, 小数型, 参考 数组, 只能提供变量，装载数据

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_颜色矩阵, 小数型, 数组, 应该是一个 5x5 的小数型数组

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP颜色曲线类, GP效果类, 公开, ColorCurve 基类：GP效果类

.子程序 创建, 逻辑型, 公开, CreateColorCurve

.子程序 取参数, 逻辑型, 公开, GetParameters
.参数 参数_颜色曲线参数, 颜色曲线参数, 参考

.子程序 取参数大小, 整数型, 公开, GetParameterSize

.子程序 取辅助数据, 整数型, 公开, GetAuxData
.参数 auxData, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取辅助数据大小, 整数型, 公开, GetAuxDataSize
.参数 auxDataSize, 整数型, 可空, 内部使用，不要设置此参数。

.子程序 取指针, 整数型, 公开

.子程序 使用辅助数据, 逻辑型, 公开, UseAuxData
.参数 参数_使用辅助数据, 逻辑型, 可空

.子程序 销毁, 逻辑型, 公开

.子程序 置参数, 逻辑型, 公开, SetParameters
.参数 参数_颜色曲线参数, 颜色曲线参数

.子程序 置指针, , 公开
.参数 参数_指针, 整数型

.程序集 GP阴影画刷, , 公开, HatchBrush 基类：GP画刷

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_阴影风格, 整数型, , “阴影风格_”开头常量。
.参数 参数_前景ARGB颜色, 整数型
.参数 参数_背景ARGB颜色, 整数型

.子程序 复制, 逻辑型, 公开, Clone 将当前画刷复制到“参数_画刷”。
.参数 参数_画刷, , 参考

.子程序 取背景色, 整数型, 公开, GetHatchBackgroundColor 返回背景ARGB颜色。

.子程序 取类型, 整数型, 公开, GetType 返回“#画刷类型_”开头常量。

.子程序 取前景色, 整数型, 公开, GetHatchForegroundColor 返回前景ARGB颜色。

.子程序 取阴影风格, 整数型, 公开, GetHatchStyle 返回“阴影风格_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteBrush

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP自定义线帽, , 公开, CustomLineCap

.子程序 创建自定义线帽, 逻辑型, 公开, Create
.参数 参数_填充路径, GP路径, 可空, “参数_填充路径”和“参数_笔画路径”二选一，如果两参数都是非空，将忽略“参数_填充路径”
.参数 参数_笔画路径, GP路径, 可空
.参数 参数_基线帽, 整数型, 可空, 默认为：“线帽样式_平线帽”
.参数 参数_基距离, 小数型, 可空, 默认为：0

.子程序 复制, 逻辑型, 公开, GdipCloneCustomLineCap
.参数 参数_自定义线帽, GP自定义线帽, 参考

.子程序 取笔画连线方式, 整数型, 公开, GetStrokeJoin 返回“连线方式_”开头常量。

.子程序 取笔画线帽, 逻辑型, 公开, GetStrokeCaps
.参数 参数_起点线帽, 整数型, 参考, 只能提供变量，装载数据。
.参数 参数_终点线帽, 整数型, 参考, 只能提供变量，装载数据。

.子程序 取基距离, 小数型, 公开, GetBaseInset 

.子程序 取基线帽, 整数型, 公开, GetBaseCap 返回“线帽样式_”开头常量

.子程序 取宽比例, 小数型, 公开, GetWidthScale

.子程序 取指针, 整数型, 公开, GetNative

.子程序 销毁, 逻辑型, 公开, DeleteCustomLineCap

.子程序 置笔画连线方式, 逻辑型, 公开, SetStrokeJoin
.参数 参数_连线方式, 整数型, , “连线方式_”开头常量。

.子程序 置笔画线帽, 逻辑型, 公开, SetStrokeCaps
.参数 参数_起点线帽, 整数型, , “线帽样式_”开头常量
.参数 参数_终点线帽, 整数型, , “线帽样式_”开头常量

.子程序 置基距离, 逻辑型, 公开, SetBaseInset
.参数 参数_基距离, 小数型

.子程序 置基线帽, 逻辑型, 公开, SetBaseCap
.参数 参数_线帽样式, 整数型, , “线帽样式_”开头常量

.子程序 置宽比例, 逻辑型, 公开, SetWidthScale
.参数 参数_宽比例, 小数型

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP字体, , 公开, Font

.子程序 创建, 逻辑型, 公开, Create
.参数 参数_字体族, GP字体族
.参数 参数_字体大小, 小数型, , 字体大小
.参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。

.子程序 创建自DC, 逻辑型, 公开, CreateFromDC
.参数 参数_hdc, 整数型, , 设备场景句柄。

.子程序 创建自hFont, 逻辑型, 公开, CreateFromhFont
.参数 参数_hdc, 整数型, , 设备场景句柄
.参数 参数_hFont, 整数型, , 字体句柄

.子程序 创建自逻辑字体, 逻辑型, 公开, CreateFromLogfontA
.参数 参数_hdc, 整数型, , 设备场景句柄。
.参数 参数_pLogfont, 整数型, , logfont的指针。

.子程序 创建自逻辑字体W, 逻辑型, 公开, CreateFromLogfontW
.参数 参数_hdc, 整数型, , 设备场景句柄。
.参数 参数_pLogfont, 整数型, , logfont的指针。

.子程序 创建自名称, 逻辑型, 公开, CreateFromName
.参数 参数_名称, 文本型
.参数 参数_尺寸, 小数型, , 字体大小
.参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。

.子程序 创建自名称W, 逻辑型, 公开, CreateFromName
.参数 参数_名称, 字节集
.参数 参数_尺寸, 小数型, , 字体大小
.参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
.参数 参数_单位, 整数型, 可空, “单位_”开头常量。

.子程序 创建自默认字体, 逻辑型, 公开, CreateFromDefault

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_字体, GP字体, 参考

.子程序 取尺寸, 小数型, 公开, GetSize

.子程序 取单位, 整数型, 公开, GetUnit “单位_”开头常量。

.子程序 取风格, 整数型, 公开, GetStyle 返回“字体风格_”开头常量。

.子程序 取高度, 小数型, 公开, GetHeight
.参数 参数_图形, GP图形, 可空, 参数为空时，字体单位必须是像素。

.子程序 取高度自分辨率, 小数型, 公开, GetHeightGivenDPI
.参数 参数_分辨率, 小数型

.子程序 取逻辑字体, 逻辑型, 公开, GetLogFontA
.参数 参数_图形, GP图形, 可空
.参数 参数_逻辑字体指针, 整数型

.子程序 取逻辑字体W, 逻辑型, 公开, GetLogFontW
.参数 参数_图形, GP图形, 可空
.参数 参数_逻辑字体指针, 整数型

.子程序 取指针, 整数型, 公开, GetNative

.子程序 取字体族, 逻辑型, 公开, GetFamily
.参数 参数_字体族, GP字体族, 参考

.子程序 销毁, 逻辑型, 公开, DeleteFont

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 GP字体族, , 公开, FontFamily

.子程序 创建自名称, 逻辑型, 公开, CreateFromName
.参数 参数_名称, 文本型
.参数 参数_字体集, , 可空

.子程序 创建自名称W, 逻辑型, 公开, CreateFromNameW
.参数 参数_名称, 字节集, , 宽文本
.参数 参数_字体集, , 可空

.子程序 创建自通用衬线, 逻辑型, 公开, GenericSerif

.子程序 创建自通用等宽, 逻辑型, 公开, GenericMonospace

.子程序 创建自通用无衬线, 逻辑型, 公开, GenericSansSerif

.子程序 复制, 逻辑型, 公开, Clone
.参数 参数_字体族, GP字体族, 参考

.子程序 取EM高度, 短整数型, 公开, GetEmHeight 以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。

.子程序 取行间距, 短整数型, 公开, GetCellDescent 以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。

.子程序 取名称, 文本型, 公开, GetName

.子程序 取名称W, 字节集, 公开, GetNameW

.子程序 取上区高度, 短整数型, 公开, GetCellAscent 以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。

.子程序 取下区高度, 短整数型, 公开, GetCellDescent 以字体设计单位为单位
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。

.子程序 取指针, 整数型, 公开, GetNative

.子程序 是否有效风格, 逻辑型, 公开, IsStyleAvailable
.参数 参数_字体风格, 整数型, , “字体风格_”开头常量。

.子程序 销毁, 逻辑型, 公开, DeleteFontFamily

.子程序 置指针, , 公开, SetNative
.参数 参数_指针, 整数型

.程序集 SUI_CopyRight, , 公开

.子程序 Close, 逻辑型, 公开, Public 等同于WM_CLOSE

.子程序 Create, 整数型, 公开, Public 创建版权窗口
.参数 hParentWnd, 整数型, , 父窗口句柄
.参数 bAlpha, 逻辑型, , 是否开启透明
.参数 bSlowShow, 逻辑型, 可空, 慢速显示和关闭
.参数 bWaitReturn, 逻辑型, , 对话框方式

.子程序 Flash, 逻辑型, 公开, Public 刷新

.子程序 Hwnd, 整数型, 公开, Public 获取窗口句柄

.子程序 Redraw, 逻辑型, 公开, Public 完全重画

.程序集 SUI_MsgBox, , 公开

.子程序 CheckBox, 逻辑型, 公开, Public 若信息框含有选择框则返回选择框选中状态（取返回值高16位）
.参数 Value, 整数型, , 信息框返回值

.子程序 Close, 逻辑型, 公开, Public 等同于WM_CLOSE

.子程序 Content, 文本型, 公开, Public 信息框内容操作
.参数 Str, 文本型, 可空, 非空则置信息框内容

.子程序 Create, 整数型, 公开, Public  创建动态信息框
.参数 hParentWnd, 整数型, 可空, 父窗口句柄
.参数 Title, 文本型, , 信息标题
.参数 Content, 文本型, , 信息内容
.参数 bHMiddle, 逻辑型, , 信息内容横向居中
.参数 bLMiddle, 逻辑型, , 信息内容竖向居中
.参数 IcoType, 整数型, , #信息图标 #询问图标 #警告图标 #错误图标 #NULL为不显示图标
.参数 bAlpha, 逻辑型, , 是否开启透明
.参数 Button, 文本型, 数组, 按钮
.参数 Focus, 整数型, 可空, 当前焦点所在按钮 为空或#NULL为无焦点
.参数 bCheckBox, 逻辑型, , 是否有选择框
.参数 CheckBoxtr, 文本型, 可空, 选择框标题
.参数 bSlowShow, 逻辑型, 可空, 慢速显示和关闭

.子程序 CreateEx, 整数型, 公开, Public  创建动态信息框扩展
.参数 hParentWnd, 整数型, 可空, 父窗口句柄
.参数 Title, 文本型, , 信息标题
.参数 Content, 文本型, , 信息内容
.参数 bHMiddle, 逻辑型, , 信息内容横向居中
.参数 bLMiddle, 逻辑型, , 信息内容竖向居中
.参数 IcoType, 整数型, , #信息图标 #询问图标 #警告图标 #错误图标 #NULL为不显示图标
.参数 pCustomIcon, 整数型, 可空, 自定义图标
.参数 bAlpha, 逻辑型, , 是否开启透明
.参数 Button, SUITypedf_MsgBox_Button, 数组, 按钮
.参数 Focus, 整数型, 参考, 当前焦点所在按钮 为空或#NULL为无焦点
.参数 bCheckBox, 逻辑型, , 是否有选择框
.参数 CheckBoxtr, 文本型, 可空, 选择框标题
.参数 bSlowShow, 逻辑型, 可空, 慢速显示和关闭

.子程序 Flash, 逻辑型, 公开, Public 刷新

.子程序 Hwnd, 整数型, 公开, Public 获取窗口句柄

.子程序 Redraw, 逻辑型, 公开, Public 完全重画

.子程序 Ret, 整数型, 公开, Public 取信息框最后点击返回按钮（取返回值低16位）
.参数 Value, 整数型, , 信息框返回值

.子程序 Tittle, 文本型, 公开, Public 信息框标题操作
.参数 Str, 文本型, 可空, 非空则置信息框标题

.程序集 SUI_PaintBorad, , 公开

.子程序 Clean, , 公开, 完全清理画板

.子程序 CleanEx, , 公开, 清理画板局部
.参数 RectL, Rect

.子程序 Create, , 公开, 创建画板
.参数 hWnd, 整数型, , 窗口句柄
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度

.子程序 Destroy, , 公开, 销毁画板

.子程序 Flash, , 公开, 刷新画板
.参数 Position, xy, 可空, 位置改变
.参数 Size, xy, 可空, 大小改变
.参数 Alpha, 整数型, 可空, 透明度

.子程序 mDC, 整数型, 公开, 获取mDC

.程序集 SUI_Window, , 公开

.子程序 _Destroy, , 公开, 销毁窗口所有资源(一般情况下无需调用)

.子程序 AddAniImage, 整数型, 公开, 添加动画图片框
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 dwSleep, 整数型, 可空, 动画间隔倍数 1-5 默认为1
.参数 pImage, 整数型, , 正常SUITypedf_AniImage指针
.参数 bShow, 逻辑型, , 不响应pHoverImage
.参数 bFrame, 逻辑型, 可空, 若bShow为真此项有效 播放动画
.参数 pHoverImage, 整数型, 可空, 点燃SUITypedf_AniImage指针
.参数 pBanImage, 整数型, 可空, 禁止图片指针
.参数 pBkgCallBack, 整数型, 可空, 背景回调绘制指针
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止

.子程序 AddButton, 整数型, 公开, 添加按钮
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, 可空, 高度
.参数 pImage, 整数型, 可空, 按钮图标指针
.参数 bImageSize, 逻辑型, 可空, 真：大图标 假：小图标 为空：自动处理大小
.参数 Text, 文本型, , 按钮文本
.参数 Color, 整数型, , 文本颜色
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 bAutoTab, 逻辑型, , 自动换行
.参数 bVerticalDirection, 逻辑型, , 文本纵向
.参数 bDirectionRightToLeft, 逻辑型, , 文本从右到左
.参数 HorizontalDirection, 整数型, , 横向对齐方式 #StringFormat_
.参数 LongitudinalDirection, 整数型, , 纵向对齐方式 #StringFormat_
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止
.参数 pOnClick, 整数型, 可空, 鼠标左键单击事件

.子程序 AddCheckBox, 整数型, 公开, 添加选择框
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 Text, 文本型, , 选择框文本
.参数 Color, 整数型, , 文本颜色
.参数 bShadow, 逻辑型, , 文本阴影
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 bAutoTab, 逻辑型, , 自动换行
.参数 bVerticalDirection, 逻辑型, , 文本纵向
.参数 bDirectionRightToLeft, 逻辑型, , 文本从右到左
.参数 HorizontalDirection, 整数型, , 横向对齐方式 #StringFormat_
.参数 LongitudinalDirection, 整数型, , 纵向对齐方式 #StringFormat_
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止
.参数 bCheck, 逻辑型, , 选中
.参数 pOnClick, 整数型, 可空, 鼠标左键单击事件

.子程序 AddEdit, 整数型, 公开, 添加编辑框
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 pImage, 整数型, 可空, 编辑框图标指针
.参数 bImageSize, 逻辑型, 可空, 真：大图标 假：小图标 为空：自动处理大小
.参数 strText, 文本型, 可空, 编辑框文本
.参数 Size, 整数型, 可空, 字体大小 默认为#SUI_FontSize
.参数 MaxLen, 整数型, 可空, 最大长度 若为空则为#SUI_EditLength_Max
.参数 Type, 整数型, , 编辑框类型 #SUI_EditType_
.参数 TextColor, 整数型, 可空, 文本颜色 默认为#黑色
.参数 SelectTextColor, 整数型, 可空, 文本选中颜色 默认为#白色
.参数 SelectBkgColor, 整数型, 可空, 文本选中背景颜色 默认为#天蓝
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 HorizontalDirection, 整数型, 可空, 纵向对齐方式 #StringFormat_ 默认为 #StringFormat_Top
.参数 bNumber, 逻辑型, , 允许输入数字
.参数 bLetter, 逻辑型, , 允许输入字母
.参数 bChinese, 逻辑型, , 允许输入中文
.参数 bSymbol, 逻辑型, , 允许输入符号
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止

.子程序 AddImage, 整数型, 公开, 添加图像
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 pImage, 整数型, , 正常图像指针
.参数 pHoverImage, 整数型, 可空, 点燃图像指针
.参数 pHitImage, 整数型, 可空, 按下图像指针
.参数 pBanImage, 整数型, 可空, 禁止图像指针
.参数 pbVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止

.子程序 AddLabel, 整数型, 公开, 添加标签
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 Text, 文本型, , 标题
.参数 bShadow, 逻辑型, , 文本阴影
.参数 bFrame, 逻辑型, , 带文本框
.参数 Color, 整数型, , 文本颜色
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 bAutoTab, 逻辑型, , 自动换行
.参数 bVerticalDirection, 逻辑型, , 文本纵向
.参数 bDirectionRightToLeft, 逻辑型, , 文本从右到左
.参数 HorizontalDirection, 整数型, , 横向对齐方式 #StringFormat_
.参数 LongitudinalDirection, 整数型, , 纵向对齐方式 #StringFormat_
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止
.参数 bRecvMsg, 逻辑型, , 接收消息 若为假 则设置事件回调时无法响应

.子程序 AddLink, 整数型, 公开, 添加链接
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 bIcon, 逻辑型, , 带动态图标
.参数 Text, 文本型, , 标题
.参数 bShadow, 逻辑型, , 阴影
.参数 Color, 整数型, , 文本颜色
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 bVerticalDirection, 逻辑型, , 文本纵向
.参数 bDirectionRightToLeft, 逻辑型, , 文本从右到左
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止
.参数 pOnClick, 整数型, 可空, 鼠标左键单击事件

.子程序 AddProgress, 整数型, 公开, 添加进度条
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Min, 整数型, , 最小值
.参数 Max, 整数型, , 最大值
.参数 Position, 整数型, , 当前位置
.参数 Templete, 整数型, , 进度条风格 #SUI_ProgressTemplete_
.参数 Str, 文本型, , 显示文本
.参数 Color, 整数型, , 文本颜色
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bVisible, 逻辑型, , 可视
.参数 bAni, 逻辑型, , 光晕动画

.子程序 AddRadioButton, 整数型, 公开, 添加单选框
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 bSquare, 逻辑型, 可空, 特殊：单选框形状为方形
.参数 Text, 文本型, , 文本
.参数 Color, 整数型, , 文本颜色
.参数 Size, 整数型, , 文本大小
.参数 bBold, 逻辑型, , 加粗
.参数 bUnderLine, 逻辑型, , 下划线
.参数 bDelLine, 逻辑型, , 删除线
.参数 bAutoTab, 逻辑型, , 自动换行
.参数 bVerticalDirection, 逻辑型, , 文本纵向
.参数 bDirectionRightToLeft, 逻辑型, , 文本从右到左
.参数 HorizontalDirection, 整数型, , 横向对齐方式 #StringFormat_
.参数 LongitudinalDirection, 整数型, , 纵向对齐方式 #StringFormat_
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止
.参数 bCheck, 逻辑型, , 选中
.参数 pOnClick, 整数型, 可空, 鼠标左键单击事件

.子程序 AddSlider, 整数型, 公开, 添加滑动条
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 Min, 整数型, , 最小值
.参数 Max, 整数型, , 最大值
.参数 Current, 整数型, , 当前值
.参数 bFrame, 逻辑型, 可空, 带框架
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止

.子程序 AddSwithcer, 整数型, 公开, 添加开关
.参数 Left, 整数型, , 左边
.参数 Top, 整数型, , 顶边
.参数 bCheck, 逻辑型, , 开启
.参数 bAni, 逻辑型, , 开关时滑动效果
.参数 bVisible, 逻辑型, , 可视
.参数 bBan, 逻辑型, , 禁止

.子程序 Alpha, 整数型, 公开, 设置或查询当前SUI窗口的透明度 与方法bAlpha合用
.参数 Int, 整数型, 可空, 为空则查询当前窗口透明度 0 - 255

.子程序 AlwaysTop, 逻辑型, 公开, 这是或查询当前窗口是否总在最前
.参数 Bool, 逻辑型, 可空, 为空则获取

.子程序 Animation, 整数型, 公开, 设置窗口载入与关闭动画效果 成功返回设置动画类型 失败返回#NULL
.参数 Type, 整数型, 可空, 为空获取当前动画类型 #NULL表示动画不存在 #SUI_WindowAni_

.子程序 bAlpha, 逻辑型, 公开, 设置或查询SUI窗口是否可透明 与方法Alpha合用
.参数 Bool, 逻辑型, 可空, 为空则查询当前窗口是否可透明

.子程序 Ban, 逻辑型, 公开, 设置或查询当前SUI窗口是否禁止 成功返回真 失败返回假
.参数 Bool, 逻辑型, 可空, 如果为空则获取 真为禁止 假为允许

.子程序 BanRedraw, 逻辑型, 公开, 设置禁止窗口重画 成功返回真 失败返回假
.参数 Bool, 逻辑型, , 真为禁止重画 假为允许重画

.子程序 Close, 逻辑型, 公开, Public 等同于WM_CLOSE

.子程序 CloseButtonID, 整数型, 公开, 取窗口关闭按钮ID 失败返回#NULL

.子程序 Control_AniImage, 逻辑型, 公开, 控制动画图片框 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 bFrame, 逻辑型, 可空, 是否播放动画
.参数 dwSleep, 整数型, 可空, 动画间隔倍数 1-5
.参数 pImage, 整数型, 可空, 正常SUITypedf_AniImage指针
.参数 bShow, 逻辑型, 可空, 不响应pHoverImage
.参数 pHoverImage, 整数型, 可空, 点燃SUITypedf_AniImage指针
.参数 pBanImage, 整数型, 可空, 禁止图片指针
.参数 pBkgCallBack, 整数型, 可空, 背景回调绘制指针
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Button, 逻辑型, 公开, 控制按钮 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 Str, 文本型, 可空, 按钮标题
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_CheckBox, 逻辑型, 公开, 控制单选框 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 bCheck, 逻辑型, 可空, 选中
.参数 Str, 文本型, 可空, 文本
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Edit, 逻辑型, 公开, 控制编辑框 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 Str, 文本型, 可空, 编辑框内容
.参数 MaxLen, 整数型, 可空, 最大字符数
.参数 ShowCaret, 整数型, 可空, 当前编辑框显示位置 ！非文本长度 例如：中国 算2个长度 非4个长度
.参数 SelectCaret, 整数型, 可空, 当前编辑框选择位置 ！与上相同 
.参数 SelectLength, 整数型, 可空, 当前编辑框选中长度 正数时为正向选择 负数为负向选择 ！与上相同 
.参数 pImage, 整数型, 可空, 编辑框图标指针
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Image, 逻辑型, 公开, 控制图像 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 pImage, 整数型, 可空, 正常图片指针 若为#NULL则不拥有正常状态
.参数 pHoverImage, 整数型, 可空, 点燃图片指针 若为#NULL则不拥有点燃状态
.参数 pHitImage, 整数型, 可空, 按下图片指针 若为#NULL则不拥有按下状态
.参数 pBanImage, 整数型, 可空, 禁止图片指针 若为#NULL则不拥有禁止状态
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Label, 逻辑型, 公开, 控制标签 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 Str, 文本型, 可空, 标签标题
.参数 bFrame, 逻辑型, 可空, 框架
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Link, 逻辑型, 公开, 控制链接 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 Str, 文本型, 可空, 链接标题
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Progress, 逻辑型, 公开, 控制进度条 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 Str, 文本型, 可空, 显示文本
.参数 bAni, 逻辑型, 可空, 光晕动画
.参数 Position, 整数型, 可空, 当前位置
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_RadioButton, 逻辑型, 公开, 控制标单选框 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 bCheck, 逻辑型, 可空, 选中
.参数 Str, 文本型, 可空, 文本
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Slider, 逻辑型, 公开, 控制滑动条 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 Position, 整数型, 可空, 当前位置
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Control_Switcher, 逻辑型, 公开, 控制开关 下列参数为空则不修改
.参数 hID, 整数型, , 控件ID
.参数 bVisible, 逻辑型, 可空, 可视
.参数 bBan, 逻辑型, 可空, 禁止
.参数 bCheck, 逻辑型, 可空, 当前开关
.参数 bAni, 逻辑型, 可空, 处理中带滑动效果
.参数 bUpdate, 逻辑型, 可空, 立即更新显示

.子程序 Create, 整数型, 公开, 绑定已经创建的窗口 成功返回#SUI_STATUS_SUCCESS 失败返回#SUI_STATUS_错误代码
.参数 hWnd, 整数型, , 绑定的窗口句柄
.参数 bControlButton, 逻辑型, , 控制按钮
.参数 bMaxControlButton, 逻辑型, , 最大化按钮
.参数 bMinControlButton, 逻辑型, , 最小化按钮
.参数 bSizeRegulator, 逻辑型, 可空, 窗口可调
.参数 pIco, 整数型, 可空, 图标指针
.参数 pIcoHover, 整数型, 可空, 图标悬浮指针
.参数 bDrawIco, 逻辑型, 可空, 显示图标
.参数 Tittle, 文本型, 可空, 窗口标题
.参数 TittleColor, 整数型, 可空, 窗口标题颜色
.参数 bTittleShadow, 逻辑型, 可空, 窗口标题是否有背景
.参数 bDrawTitle, 逻辑型, 可空, 显示标题
.参数 bDrawTitleBkg, 逻辑型, 可空, 显示标题背景
.参数 pPaintCallBack, 整数型, , 窗口底图绘制回调函数 例子见本类中CreateCallBackDemo方法

.子程序 CreateCallBackDemo, 整数型, 公开, 演示Create和CreateEx后背景绘制回调函数 若返回#TRUE则拦截引擎绘制 相反返回#FALSE
.参数 PaintStep, 整数型, , 引擎绘制窗口背景步骤
.参数 pGraphic, 整数型, , 引擎绘制窗口图形指针 GP图形.置指针() 使用后务必 GP图形.置指针(#NULL) 
.参数 pBlankBitMap, 整数型, , 引擎绘制窗口空白背景位图指针 GP位图.置指针() 使用后务必 GP位图.置指针(#NULL) 
.参数 pWinBitMap, 整数型, , 引擎绘制窗口位图指针 GP位图.置指针() 使用后务必 GP位图.置指针(#NULL) 

.子程序 CreateEx, 整数型, 公开, 创建一个完全新的窗口 成功返回窗口句柄
.参数 ParenthWnd, 整数型, 可空, 父窗口句柄
.参数 bWait, 逻辑型, , 载入后立即返回 类似于 载入（,,真） 或 载入（,,假）
.参数 Left, 整数型, 可空, 左边
.参数 Top, 整数型, 可空, 顶边
.参数 Width, 整数型, , 宽度
.参数 Height, 整数型, , 高度
.参数 bMiddlePosition, 逻辑型, , 居中
.参数 pCreateCallBack, 整数型, , 窗口回调函数 参数仅一个窗口句柄
.参数 bControlButton, 逻辑型, , 控制按钮
.参数 bMaxControlButton, 逻辑型, , 最大化按钮
.参数 bMinControlButton, 逻辑型, , 最小化按钮
.参数 bSizeRegulator, 逻辑型, 可空, 窗口可调
.参数 pIco, 整数型, 可空, 图标指针
.参数 pIcoHover, 整数型, 可空, 图标悬浮指针
.参数 bDrawIco, 逻辑型, 可空, 显示图标
.参数 Tittle, 文本型, 可空, 窗口标题
.参数 TittleColor, 整数型, 可空, 窗口标题颜色
.参数 bTittleShadow, 逻辑型, 可空, 窗口标题是否有背景
.参数 bDrawTitle, 逻辑型, 可空, 显示标题
.参数 bDrawTitleBkg, 逻辑型, 可空, 显示标题背景
.参数 pPaintCallBack, 整数型, , 窗口底图绘制回调函数 例子见本类中CreateCallBackDemo方法

.子程序 CurrenthWnd, 整数型, 公开, 返回当前窗口句柄

.子程序 Data_Bool, 逻辑型, 公开, 控制控件逻辑型属性
.参数 hID, 整数型, , 控件ID
.参数 Member, 整数型, , 控件属性名称 #SUI_Member_
.参数 Bool, 逻辑型, 可空, 若为空为获取 非空置值

.子程序 Data_Int, 整数型, 公开, 控制控件整数型属性
.参数 ID, 整数型, , 控件ID
.参数 Member, 整数型, , 控件属性名称 #SUI_Member_
.参数 Int, 整数型, 可空, 若为空为获取 非空置值

.子程序 Data_Str, 文本型, 公开, 控制控件文本型属性
.参数 ID, 整数型, , 控件ID
.参数 Member, 整数型, , 控件属性名称 #SUI_Member_
.参数 Str, 文本型, 可空, 若为空为获取 非空置值

.子程序 Event, 整数型, 公开, 设置或获取当前控件相关事件 成功返回处理地址 失败或无处理地址返回#NULL
.参数 hID, 整数型, , 控件ID
.参数 Member, 整数型, , 要修改或获取的控件事件属性名称 #SUI_Event_
.参数 pProc, 整数型, 可空, 事件处理地址

.子程序 Flash, 逻辑型, 公开, 刷新窗口 成功返回真 失败返回假
.参数 bNow, 逻辑型, , 是否立即更新

.子程序 GetHeight, 整数型, 公开

.子程序 GetWidth, 整数型, 公开

.子程序 Height, 整数型, 公开, 控制或获取窗口高度
.参数 dwHeight, 整数型, 可空, 如果为空则获取
.参数 bUpdate, 逻辑型, 可空, 是否立即重画

.子程序 HitFocusID, 整数型, 公开, 返回当前焦点所在控件ID 返回#NULL为无焦点
.参数 hID, 整数型, 可空, 不为空则为置

.子程序 Icon, 逻辑型, 公开, 设置当前窗口图标(主界面不显示 任务栏等更新用)
.参数 pImage, 整数型, , 图标指针 SUILoadImage获得

.子程序 IconicButtonID, 整数型, 公开, 取窗口最小化按钮ID 失败返回#NULL

.子程序 IconID, 整数型, 公开, 取窗口图标控件ID

.子程序 Left, 整数型, 公开, 控制或获取窗口左边
.参数 dwLeft, 整数型, 可空, 如果为空则获取
.参数 bUpdate, 逻辑型, 可空, 是否立即重画

.子程序 NumOfControl, 整数型, 公开, 当前控件总数

.子程序 Ptr, 逻辑型, 公开, 设置窗口事件回调指针，回调参数参考PtrCallBackDemo 参数为空则不设置 成功返回真 失败返回假
.参数 lpCose, 整数型, 可空, WM_Close 窗口将被关闭
.参数 lpDestroy, 整数型, 可空, WM_Destroy 窗口完全销毁
.参数 lpShow, 整数型, 可空, #WM_SHOWWINDOW wParam=#TRUE 窗口显示
.参数 lpHide, 整数型, 可空, #WM_SHOWWINDOW wParam=#FALSE 窗口隐藏
.参数 lpHover, 整数型, 可空, #WM_MouseHover 当鼠标悬浮的位置不存在任何控件内时触发此回调
.参数 lpKeyDown, 整数型, 可空, #WM_KEYDOWN 返回 真拦截 否则返回假
.参数 lpKeyUp, 整数型, 可空, #WM_KEYUP 返回 真拦截 否则返回假
.参数 lpSUI, 整数型, 可空, #WM_ 支持所有消息类型 注意：请参照

.子程序 PtrCallBackDemo, 逻辑型, 公开, 演示消息回调函数 若返回真则拦截消息 否则返回假不拦截
.参数 hwnd, 整数型
.参数 wMsg, 整数型
.参数 wParam, 整数型
.参数 lParam, 整数型

.子程序 PtrSUICallBackDemo, 逻辑型, 公开, 演示消息回调函数 若返回真则拦截消息 否则返回假不拦截
.参数 hwnd, 整数型
.参数 wMsg, 整数型
.参数 wParam, 整数型
.参数 lParam, 整数型
.参数 RetValue, 整数型, 参考, 若返回真 则  此值告诉SUI返回的值为多少

.子程序 Redraw, , 公开, 完全重画窗口,使用后用Flash刷新显示 成功返回真 失败返回假

.子程序 RoundRgn, 逻辑型, 公开, 设置创建偶圆角矩形 成功返回真 否则返回假
.参数 Ellipse, 整数型, , 圆角半径
.参数 bUpdate, 逻辑型, , 圆角后立即重画

.子程序 SetBkg, 逻辑型, 公开, 设置背景图片或者颜色 只能设置一种若设置了图片则颜色无效
.参数 BkgImage, 字节集, 可空, 背景图片
.参数 BkgColor_ImageType, 整数型, 可空, 背景颜色(RGB) 若参数BkgImage设置了图片此项为背景方式#SUI_BkgType_

.子程序 Show, 逻辑型, 公开, 设置或查询当前SUI窗口是否可视 成功返回真 失败返回假
.参数 Bool, 逻辑型, 可空, 如果为空则获取 真为显示 假为隐藏

.子程序 Top, 整数型, 公开, 控制或获取窗口顶边
.参数 dwTop, 整数型, 可空, 如果为空则获取
.参数 bUpdate, 逻辑型, 可空, 是否立即重画

.子程序 Width, 整数型, 公开, 控制或获取窗口宽度
.参数 dwWidth, 整数型, 可空, 如果为空则获取
.参数 bUpdate, 逻辑型, 可空, 是否立即重画

.子程序 ZoomedButtonID, 整数型, 公开, 取窗口最大化按钮ID 失败返回#NULL

.DLL命令 Api_CreateThread, 整数型, "kernel32.dll", "CreateThread", 公开
    .参数 lpThreadAttributes, 整数型
    .参数 dwStackSize, 整数型
    .参数 lpStartAddress, 整数型
    .参数 lpParameter, 整数型
    .参数 dwCreationFlags, 整数型
    .参数 lpThreadId, 整数型, 传址

.DLL命令 Api_CreateWindowExA, 整数型, "user32.dll", "CreateWindowExA", 公开
    .参数 dwExStyle, 整数型
    .参数 lpClassName, 文本型
    .参数 lpWindowName, 文本型
    .参数 dwStyle, 整数型
    .参数 x, 整数型
    .参数 y, 整数型
    .参数 nWidth, 整数型
    .参数 nHeight, 整数型
    .参数 hWndParent, 整数型
    .参数 hMenu, 整数型
    .参数 hInstance, 整数型
    .参数 lpParam, 整数型

.DLL命令 Api_DefWindowProcA, 整数型, "user32.dll", "DefWindowProcA", 公开
    .参数 hwnd, 整数型
    .参数 wMsg, 整数型
    .参数 wParam, 整数型
    .参数 lParam, 整数型

.DLL命令 Api_GetModuleHandleA, 整数型, "kernel32.dll", "GetModuleHandleA", 公开
    .参数 lpModuleName, 文本型

.DLL命令 Api_GetWindowLongA, 整数型, "user32.dll", "GetWindowLongA", 公开
    .参数 hwnd, 整数型
    .参数 dwLong, 整数型

.DLL命令 Api_GetWindowRect, 整数型, "user32.dll", "GetWindowRect", 公开
    .参数 hWnd, 整数型
    .参数 lpRect, Rect

.DLL命令 Api_IsWindow, 逻辑型, "user32.dll", "IsWindow", 公开
    .参数 hwnd, 整数型

.DLL命令 Api_MoveWindow, 整数型, "user32.dll", "MoveWindow", 公开
    .参数 hwnd, 整数型
    .参数 x, 整数型
    .参数 y, 整数型
    .参数 nWidth, 整数型
    .参数 nHeight, 整数型
    .参数 bRepaint, 逻辑型

.DLL命令 Api_PostMessageA, 逻辑型, "user32.dll", "PostMessageA", 公开
    .参数 hwnd, 整数型
    .参数 wMsg, 整数型
    .参数 wParam, 整数型
    .参数 lParam, 整数型

.DLL命令 Api_SendMessageA, 逻辑型, "user32.dll", "SendMessageA", 公开
    .参数 hwnd, 整数型
    .参数 wMsg, 整数型
    .参数 wParam, 整数型
    .参数 lParam, 整数型

.DLL命令 Api_SendMessageA_dw, 整数型, "user32.dll", "SendMessageA", 公开
    .参数 hwnd, 整数型
    .参数 wMsg, 整数型
    .参数 wParam, 整数型
    .参数 lParam, 整数型

.DLL命令 Api_SetRect, 整数型, "user32.dll", "SetRect", 公开
    .参数 lprc, Rect
    .参数 xLeft, 整数型
    .参数 yTop, 整数型
    .参数 xRight, 整数型
    .参数 yBottom, 整数型

.DLL命令 Api_SetWindowLongA, 整数型, "user32.dll", "SetWindowLongA", 公开
    .参数 hwnd, 整数型
    .参数 nIndex, 整数型
    .参数 dwNewLong, 整数型

.DLL命令 Api_ShowWindow, 整数型, "user32.dll", "ShowWindow", 公开
    .参数 hwnd, 整数型
    .参数 nCmdShow, 整数型

.DLL命令 Api_ShowWindowAsync, 整数型, "user32.dll", "ShowWindowAsync", 公开
    .参数 hwnd, 整数型
    .参数 nCmdShow, 整数型

.常量 CurrentProcess, "-1", 公开
.常量 EMF到WMF标志_包含文件头, "2", 公开, EmfToWmfBitsFlagsIncludePlaceable
.常量 EMF到WMF标志_不异或裁剪, "3", 公开, EmfToWmfBitsFlagsNoXORClip
.常量 EMF到WMF标志_默认, "0", 公开, EmfToWmfBitsFlagsDefault
.常量 EMF到WMF标志_嵌入, "1", 公开, EmfToWmfBitsFlagsEmbedEmf
.常量 EMF类型_Emf, "3", 公开, EmfTypeEmfOnly
.常量 EMF类型_EmfPlusDual, "5", 公开, EmfTypeEmfPlusDual
.常量 EMF类型_EmfPlusOnly, "4", 公开, EmfTypeEmfPlusOnly
.常量 FALSE, "0", 公开
.常量 HighPart, "65535", 公开
.常量 Limit, "65535", 公开
.常量 LowPart, "16", 公开
.常量 NULL, "0", 公开
.常量 SizeOfInt, "4", 公开, 整数型尺寸
.常量 SizeOfSUITypedf_AniImage, "24", 公开, SUITypedf_AniImage 类型尺寸
.常量 SRCCOPY, "13369376", 公开
.常量 StringFormat_Bottom, "2", 公开, 对齐方式_底对齐
.常量 StringFormat_Left, "0", 公开, 对齐方式_左对齐
.常量 StringFormat_Middle, "1", 公开, 对齐方式_居中
.常量 StringFormat_Right, "2", 公开, 对齐方式_右对齐
.常量 StringFormat_Top, "0", 公开, 对齐方式_顶对齐
.常量 SUI_BkgType_Tensile, "1", 公开, 背景_拉伸
.常量 SUI_BkgType_Tile, "0", 公开, 背景_平铺
.常量 SUI_CallBack_AniImage_Bkg, "100", 公开, 动画图片框正常背景绘制
.常量 SUI_CallBack_AniImage_HitBkg, "102", 公开, 动画图片框按下背景绘制
.常量 SUI_CallBack_AniImage_HoverBkg, "101", 公开, 动画图片框点燃背景绘制
.常量 SUI_CallBack_AniImage_Other, "103", 公开, 动画图片框其它背景绘制
.常量 SUI_CallBack_RoundRectRgn, "9", 公开, 引擎将窗口圆角化
.常量 SUI_CallBack_WindowEndPaint, "8", 公开, 结束绘制
.常量 SUI_CallBack_WindowEndPaintBkg, "3", 公开, 结束背景绘制
.常量 SUI_CallBack_WindowEndPaintBorder, "5", 公开, 结束绘制边框
.常量 SUI_CallBack_WindowEndPaintControl, "7", 公开, 结束绘制组件
.常量 SUI_CallBack_WindowPaint, "1", 公开, 开始绘制
.常量 SUI_CallBack_WindowPaintBkg, "2", 公开, 开始绘制背景
.常量 SUI_CallBack_WindowPaintBorder, "4", 公开, 开始绘制边框
.常量 SUI_CallBack_WindowPaintControl, "6", 公开, 开始绘制组件
.常量 SUI_Control_Ban, "4", 公开, 控件_禁止
.常量 SUI_Control_Down, "3", 公开, 控件_按下
.常量 SUI_Control_Light, "2", 公开, 控件_点燃
.常量 SUI_Control_Normal, "1", 公开, 控件_正常
.常量 SUI_EditLength_Max, "16383", 公开, 编辑框_最大支持字符个数 0x3FFF
.常量 SUI_EditType_Normal, "0", 公开, 编辑框_正常
.常量 SUI_EditType_OnlyRead, "2", 公开, 编辑框_仅读
.常量 SUI_EditType_PassWord, "1", 公开, 编辑框_密码
.常量 SUI_EditType_PWStr, "<文本长度: 1>", 公开, 编辑框_密码替代符号
.常量 SUI_Event_Hover, "118", 公开, 事件_鼠标悬浮事件
.常量 SUI_Event_Input, "117", 公开, 事件_文本输入 回调中返回 真 拦截输入，返回 假 放行输入
.常量 SUI_Event_LDoubleClick, "115", 公开, 事件_鼠标左键双击
.常量 SUI_Event_LDown, "112", 公开, 事件_鼠标左键按下
.常量 SUI_Event_LOnClick, "114", 公开, 事件_鼠标左键单击
.常量 SUI_Event_LUp, "113", 公开, 事件_鼠标左键弹起
.常量 SUI_Event_Move, "111", 公开, 事件_移动
.常量 SUI_Event_SliderValue, "116", 公开, 事件_滑动条值被改变
.常量 SUI_FontSize, "12", 公开, SUI默认字体大小
.常量 SUI_Member_bAni, "117", 公开, 组件成员_动画 适用于Progress等
.常量 SUI_Member_bBan, "114", 公开, 组件成员_禁止
.常量 SUI_Member_bCheck, "111", 公开, 组件成员_选中 适用于CheckBox Switcher RadioButton等
.常量 SUI_Member_bFrame, "112", 公开, 组件成员_保留
.常量 SUI_Member_bUpdate, "119", 公开, 组件成员_时时完全重画
.常量 SUI_Member_bVisible, "116", 公开, 组件成员_可视
.常量 SUI_Member_CurrentAlpha, "113", 公开, 组件成员_保留
.常量 SUI_Member_Height, "127", 公开, 组件成员_消息响应区域高度
.常量 SUI_Member_Left, "124", 公开, 组件成员_消息响应区域左边
.常量 SUI_Member_NumOfChar, "123", 公开, 组件成员_编辑框字符个数 ！不等同于取文本长度（）
.常量 SUI_Member_SelectCaret, "121", 公开, 组件成员_编辑框选择位置
.常量 SUI_Member_SelectLength, "122", 公开, 组件成员_编辑框选择长度
.常量 SUI_Member_ShowCaret, "120", 公开, 组件成员_编辑框显示首位置
.常量 SUI_Member_TextStr, "115", 公开, 组件成员_文本
.常量 SUI_Member_Top, "125", 公开, 组件成员_消息响应区域顶边
.常量 SUI_Member_Value, "118", 公开, 组件成员_当前值 适用于Slider Progress等当前值
.常量 SUI_Member_Width, "126", 公开, 组件成员_消息响应区域宽度
.常量 SUI_Mouse_Alternate, "2", 公开, 鼠标_反向
.常量 SUI_Mouse_Diagonal1, "3", 公开, 鼠标_斜向1
.常量 SUI_Mouse_Diagonal2, "4", 公开, 鼠标_斜向2
.常量 SUI_Mouse_Handwriting, "5", 公开, 鼠标_手写
.常量 SUI_Mouse_Help, "6", 公开, 鼠标_帮助
.常量 SUI_Mouse_Horizontal, "7", 公开, 鼠标_横向箭头
.常量 SUI_Mouse_Link, "8", 公开, 鼠标_链接
.常量 SUI_Mouse_Move, "9", 公开, 鼠标_移动
.常量 SUI_Mouse_Normal, "1", 公开, 鼠标_正常
.常量 SUI_Mouse_Precision, "10", 公开, 鼠标_预测
.常量 SUI_Mouse_Text, "11", 公开, 鼠标_文本
.常量 SUI_Mouse_Unavailable, "12", 公开, 鼠标_繁忙
.常量 SUI_Mouse_Vertical, "13", 公开, 鼠标_纵向
.常量 SUI_NoFocus, "0", 公开, 控件_无焦点
.常量 SUI_ProgressTemplete_Bt, "11", 公开, 进度条风格_细长型
.常量 SUI_ProgressTemplete_ColorBlue, "18", 公开, 进度条风格_蓝色3
.常量 SUI_ProgressTemplete_ColorGray, "19", 公开, 进度条风格_灰色
.常量 SUI_ProgressTemplete_ColorGreen, "16", 公开, 进度条风格_蓝色2
.常量 SUI_ProgressTemplete_ColorYellow, "17", 公开, 进度条风格_黄色
.常量 SUI_ProgressTemplete_Glass1, "8", 公开, 进度条风格_水晶1
.常量 SUI_ProgressTemplete_Glass2, "9", 公开, 进度条风格_水晶2
.常量 SUI_ProgressTemplete_Glass3, "10", 公开, 进度条风格_水晶3
.常量 SUI_ProgressTemplete_HealthGreen, "22", 公开, 进度条风格_绿色2
.常量 SUI_ProgressTemplete_HealthLightGreen, "23", 公开, 进度条风格_淡绿色
.常量 SUI_ProgressTemplete_HealthOrange, "21", 公开, 进度条风格_橘黄色
.常量 SUI_ProgressTemplete_HealthRed, "20", 公开, 进度条风格_红色2
.常量 SUI_ProgressTemplete_Normal, "1", 公开, 进度条风格_普通
.常量 SUI_ProgressTemplete_RglBlue, "14", 公开, 进度条风格_蓝色1
.常量 SUI_ProgressTemplete_RglGreen, "13", 公开, 进度条风格_绿色1
.常量 SUI_ProgressTemplete_RglRed, "15", 公开, 进度条风格_红色1
.常量 SUI_ProgressTemplete_RglWhite, "12", 公开, 进度条风格_白色
.常量 SUI_ProgressTemplete_Task1, "6", 公开, 进度条风格_默认5
.常量 SUI_ProgressTemplete_Task2, "7", 公开, 进度条风格_默认6
.常量 SUI_ProgressTemplete_Texture1, "2", 公开, 进度条风格_默认1
.常量 SUI_ProgressTemplete_Texture2, "3", 公开, 进度条风格_默认2
.常量 SUI_ProgressTemplete_User1, "4", 公开, 进度条风格_默认3
.常量 SUI_ProgressTemplete_User2, "5", 公开, 进度条风格_默认4
.常量 SUI_STATUS_DATA_ERROR, "-1073741762", 公开, SUI错误代码0xC000003E
.常量 SUI_STATUS_INVALID_HANDLE, "-1073741816", 公开, SUI错误代码0xC0000008
.常量 SUI_STATUS_OBJECT_NAME_EXISTS, "1073741824", 公开, SUI错误代码0x40000000
.常量 SUI_STATUS_OBJECT_NAME_NOT_FOUND, "-1073741772", 公开, SUI错误代码0xC0000034
.常量 SUI_STATUS_SUCCESS, "0", 公开, SUI成功
.常量 SUI_Templete_Metro, "1", 公开, SUI引擎全局风格_Metro
.常量 SUI_Templete_Normal, "0", 公开, SUI引擎全局风格_普通
.常量 SUI_Type_AniImage, "112", 公开, 组件类型_动画图片框
.常量 SUI_Type_Button, "100", 公开, 组件类型_按钮
.常量 SUI_Type_CheckBox, "101", 公开, 组件类型_选择框
.常量 SUI_Type_Edit, "107", 公开, 组件类型_编辑框
.常量 SUI_Type_FloatLight, "108", 公开, 组件类型_保留2
.常量 SUI_Type_Image, "104", 公开, 组件类型_图片框
.常量 SUI_Type_Label, "102", 公开, 组件类型_标签
.常量 SUI_Type_Link, "105", 公开, 组件类型_超链接框
.常量 SUI_Type_Progress, "111", 公开, 组件类型_进度条
.常量 SUI_Type_RadioButton, "106", 公开, 组件类型_单选框
.常量 SUI_Type_Slider, "109", 公开, 组件类型_滑动条
.常量 SUI_Type_Switcher, "110", 公开, 组件类型_开关
.常量 SUI_Type_Tittle, "103", 公开, 组件类型_保留1
.常量 SUI_Version, "<文本长度: 376>", 公开, SUI引擎版本信息
.常量 SUI_WindowAni_A, "1", 公开, 窗口效果_渐隐渐显
.常量 SUI_WindowAni_B, "2", 公开, 窗口效果_伸缩
.常量 SUI_WM_Ani, "3", 公开, SUI动画消息
.常量 SUI_WM_Close, "9339", 公开, SUI关闭消息
.常量 SUI_WM_Flash, "1026", 公开, SUI刷新消息
.常量 SUI_WM_Hide, "2", 公开, SUI隐藏消息
.常量 SUI_WM_Redraw, "1025", 公开, SUI重画消息
.常量 SUI_WM_Show, "1", 公开, SUI显示消息
.常量 SW_HIDE, "0", 公开, 隐藏
.常量 SW_SHOW, "5", 公开, 显示
.常量 TRUE, "1", 公开
.常量 UnKnown, "-1", 公开
.常量 WM_CLOSE, "16", 公开, 当一个窗口或应用程序要关闭时发送一个信号
.常量 WM_DESTROY, "2", 公开, 一个窗口被销毁
.常量 WM_KEYDOWN, "256", 公开
.常量 WM_KEYUP, "257", 公开
.常量 WM_MOUSEHOVER, "673", 公开
.常量 WM_SHOWWINDOW, "24", 公开, 当隐藏或显示窗口是发送此消息给这个窗口
.常量 编码器_版本, "“{24D18C76-814A-41A4-BF53-1C219CCCF797}”", 公开, EncoderVersion
.常量 编码器_保存标志, "“{292266FC-AC40-47BF-8CFC-A85B89A655DE}”", 公开, EncoderSaveFlag
.常量 编码器_呈现方式, "“{6D42C53A-229A-4825-8BB7-5C99E2B9A8B8}”", 公开, EncoderRenderMethod
.常量 编码器_亮度表, "“{EDB33BCE-0266-4A77-B904-27216099E717}”", 公开, EncoderLuminanceTable
.常量 编码器_品质, "“{1D5BE4B5-FA4A-452D-9CDD-5DB35105E7EB}”", 公开, EncoderQuality
.常量 编码器_扫描方式, "“{3A4E2661-3109-4E56-8536-42C156E7DCFA}”", 公开, EncoderScanMethod
.常量 编码器_色度表, "“{F2E455DC-09B3-4316-8260-676ADA32481C}”", 公开, EncoderChrominanceTable
.常量 编码器_色深, "“{66087055-AD66-4C7C-9A18-38A2310B8337}”", 公开, EncoderColorDepth
.常量 编码器_压缩, "“{E09D739D-CCD4-44EE-8EBA-3FBF8BE4FC58}”", 公开, EncoderCompression
.常量 编码器_转换, "“{8D0EB2D1-A58E-4EA8-AA14-108074B7B6F9}”", 公开, EncoderTransformation
.常量 编码器参数值类型_短整数型, "3", 公开, EncoderParameterValueTypeShort
.常量 编码器参数值类型_未定义, "7", 公开, EncoderParameterValueTypeUndefined。
.常量 编码器参数值类型_整数对, "5", 公开, EncoderParameterValueTypeRational。为整数型数组，有两个成员。第一个表示最小值，第二个表示最大值。
.常量 编码器参数值类型_整数对范围, "8", 公开, EncoderParameterValueTypeRationalRange。
.常量 编码器参数值类型_整数范围, "6", 公开, EncoderParameterValueTypeLongRange。为整数型数组，有两个成员。第一个表示低32位，第二个表示高32位。
.常量 编码器参数值类型_整数型, "4", 公开, EncoderParameterValueTypeLong
.常量 编码器参数值类型_字符型, "2", 公开, EncoderParameterValueTypeASCII
.常量 编码器参数值类型_字节型, "1", 公开, EncoderParameterValueTypeByte
.常量 编码器值_版本GIF87, "9", 公开, EncoderValueVersionGif87。GDI+1.0没有使用。
.常量 编码器值_版本GIF89, "10", 公开, EncoderValueVersionGif89。GDI+1.0没有使用。
.常量 编码器值_不渲染, "12", 公开, EncoderValueRenderNonProgressive。GDI+1.0没有使用。
.常量 编码器值_垂直翻转, "17", 公开, EncoderValueTransformFlipVertical。对于JPEG图像无损垂直翻转。
.常量 编码器值_多帧编码, "18", 公开, EncoderValueMultiFrame
.常量 编码器值_扫描方式隔行扫描, "7", 公开, EncoderValueScanMethodInterlaced。GDI+1.0没有使用。
.常量 编码器值_扫描方式逐行扫描, "8", 公开, EncoderValueScanMethodNonInterlaced。GDI+1.0没有使用。
.常量 编码器值_刷新, "20", 公开, EncoderValueFlush。指定的编码对象是被关闭的
.常量 编码器值_水平翻转, "16", 公开, EncoderValueTransformFlipHorizontal。对于JPEG图像无损水平翻转。
.常量 编码器值_旋转180度, "14", 公开, EncoderValueTransformRotate180。对于JPEG图像无损旋转180度
.常量 编码器值_旋转270度, "15", 公开, EncoderValueTransformRotate270。对于JPEG图像无损逆时针旋转270度。
.常量 编码器值_旋转90度, "13", 公开, EncoderValueTransformRotate90。对于JPEG图像无损逆时针旋转90度。
.常量 编码器值_渲染, "11", 公开, EncoderValueRenderProgressive。GDI+1.0没有使用。
.常量 编码器值_压缩CCITT3, "3", 公开, EncoderValueCompressionCCITT3。对于TIF图像的CCITT3压缩方法
.常量 编码器值_压缩CCITT4, "4", 公开, EncoderValueCompressionCCITT4。对于TIF图像的CCITT4压缩方法
.常量 编码器值_压缩LZW, "2", 公开, EncoderValueCompressionLZW。对于TIF图像的LZW压缩方法
.常量 编码器值_压缩RLE, "5", 公开, EncoderValueCompressionRle。对于TIF图像的RLE压缩方法
.常量 编码器值_压缩无, "6", 公开, EncoderValueCompressionNone。对于TIF图像指定无压缩
.常量 编码器值_颜色类型CMYK, "0", 公开, EncoderValueColorTypeCMYK。GDI+1.0没有使用。
.常量 编码器值_颜色类型YCCK, "1", 公开, EncoderValueColorTypeYCCK。GDI+1.0没有使用。
.常量 编码器值_帧维面分辨率, "22", 公开, EncoderValueFrameDimensionResolution。GDI+1.0没有使用。
.常量 编码器值_帧维面延时, "21", 公开, EncoderValueFrameDimensionTime。GDI+1.0没有使用。
.常量 编码器值_帧维面页, "23", 公开, EncoderValueFrameDimensionPage。对于TIF图像指定页。
.常量 编码器值_最后一帧, "19", 公开, EncoderValueLastFrame
.常量 单位_点, "3", 公开, UnitPoint
.常量 单位_毫米, "6", 公开, UnitMillimeter。
.常量 单位_世界坐标, "0", 公开, UnitWorld
.常量 单位_文档, "5", 公开, UnitDocument。1/300英寸
.常量 单位_显示器, "1", 公开, UnitDisplay
.常量 单位_像素, "2", 公开, UnitPixel
.常量 单位_英寸, "4", 公开, UnitInch
.常量 合并模式_并集, "2", 公开, Union 通过采用两个剪辑区域的联合组合两个剪辑区域。
.常量 合并模式_并集减交集, "3", 公开, Xor 两者的并集减去两者的交集。通过只采纳单独由其中一个区域（而非两个区域一起）包括的范围来组合两个剪辑区域。
.常量 合并模式_交集, "1", 公开, Intersect 通过采用两个剪辑区域的交集组合两个剪辑区域。
.常量 合并模式_排除旧区域, "5", 公开, Complement 指定由从新区域移除的现有区域的结果替代现有区域。换言之，从新区域中排除现有区域。
.常量 合并模式_排除新区域, "4", 公开, Exclude 指定由从现有区域移除的新区域的结果替代现有区域。换言之，从现有区域中排除新区域。
.常量 合并模式_替代, "0", 公开, Replace 一个剪辑区域被另一个剪辑区域替代。
.常量 画笔对齐方式_居中, "0", 公开
.常量 画笔对齐方式_内侧, "1", 公开
.常量 画笔对齐方式_外侧, "2", 公开, 1.0没有使用
.常量 画笔对齐方式_右侧, "4", 公开, 1.0没有使用
.常量 画笔对齐方式_左侧, "3", 公开, 1.0没有使用
.常量 画笔类型_固色, "0", 公开
.常量 画笔类型_路径渐变, "3", 公开
.常量 画笔类型_图像纹理, "2", 公开
.常量 画笔类型_未知, "-1", 公开
.常量 画笔类型_线性渐变, "4", 公开
.常量 画笔类型_阴影, "1", 公开
.常量 画刷类型_固定色, "0", 公开, BrushTypeSolidColor
.常量 画刷类型_路径渐变, "3", 公开, BrushTypePathGradient
.常量 画刷类型_图像纹理, "2", 公开, BrushTypeTextureFill
.常量 画刷类型_线性渐变, "4", 公开, BrushTypeLinearGradient
.常量 画刷类型_阴影, "1", 公开, BrushTypeHatchFill
.常量 环绕模式_固定, "4", 公开, Clamp 纹理或渐变没有平铺。
.常量 环绕模式_平铺, "0", 公开, Tile 平铺渐变或纹理。
.常量 环绕模式_平铺垂直翻转, "2", 公开, TileFlipY 垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_平铺水平垂直翻转, "3", 公开, TileFlipXY 水平和垂直反转纹理或渐变，然后平铺该纹理或渐变。
.常量 环绕模式_平铺水平翻转, "1", 公开, TileFlipX 水平反转纹理或渐变，然后平铺该纹理或渐变。
.常量 混合模式_复制, "1", 公开, CompositingModeSourceCopy
.常量 混合模式_替换, "0", 公开, CompositingModeSourceOver
.常量 混合品质_伽玛校正, "3", 公开, CompositingQualityGammaCorrected
.常量 混合品质_假定线性, "4", 公开, CompositingQualityAssumeLinear
.常量 混合品质_默认, "0", 公开, CompositingQualityDefault
.常量 混合品质_无效, "-1", 公开, CompositingQualityInvalid
.常量 混合品质_最佳性能, "1", 公开, CompositingQualityHighSpeed
.常量 混合品质_最佳质量, "2", 公开, CompositingQualityHighQuality
.常量 矩阵顺序_预先, "0", 公开, Prepend 在旧操作前应用新操作。 
.常量 矩阵顺序_追加, "1", 公开, Append 在旧操作后应用新操作。 
.常量 控制文本标志_查找映射表, "1", 公开, DriverStringOptionsCmapLookup。必须包含此标志，原因暂时不明
.常量 控制文本标志_垂直显示, "2", 公开, DriverStringOptionsVertical
.常量 控制文本标志_高质量, "8", 公开, DriverStringOptionsLimitSubpixel
.常量 控制文本标志_预先实现, "4", 公开, DriverStringOptionsRealizedAdvance。只提供第一个字符的坐标。
.常量 连线方式_斜角, "1", 公开, LineJoinBevel
.常量 连线方式_斜接, "0", 公开, LineJoinMiter
.常量 连线方式_斜接截断, "3", 公开, LineJoinMiterClipped。1.0没有使用
.常量 连线方式_圆角, "2", 公开, LineJoinRound
.常量 路径点类型_贝塞尔曲线, "3", 公开, PathPointTypeBezier
.常量 路径点类型_贝塞尔曲线2, "2", 公开, PathPointTypeBezier2
.常量 路径点类型_贝塞尔曲线3, "3", 公开, PathPointTypeBezier3
.常量 路径点类型_贝塞尔曲线4, "4", 公开, PathPointTypeBezier4
.常量 路径点类型_贝塞尔曲线5, "5", 公开, PathPointTypeBezier5
.常量 路径点类型_贝塞尔曲线6, "6", 公开, PathPointTypeBezier6
.常量 路径点类型_标记, "32", 公开, PathPointTypePathMarker
.常量 路径点类型_关闭子路径, "128", 公开, PathPointTypeCloseSubpath
.常量 路径点类型_开始, "0", 公开, PathPointTypeStart
.常量 路径点类型_类型掩膜, "7", 公开, PathPointTypePathTypeMask
.常量 路径点类型_虚线模式, "16", 公开, PathPointTypePathDashMode。1.0没有使用
.常量 路径点类型_直线, "1", 公开, PathPointTypeLine
.常量 扭曲模式_双线性, "1", 公开
.常量 扭曲模式_透视, "0", 公开
.常量 平滑模式_不抗锯齿, "3", 公开, SmoothingModeNone
.常量 平滑模式_抗锯齿, "4", 公开, SmoothingModeAntiAlias
.常量 平滑模式_默认, "0", 公开, SmoothingModeDefault
.常量 平滑模式_无效, "-1", 公开, SmoothingModeInvalid
.常量 平滑模式_最佳性能, "1", 公开, SmoothingModeHighSpeed
.常量 平滑模式_最佳质量, "2", 公开, SmoothingModeHighQuality
.常量 曲线调整_白色饱和度, "6", 公开, AdjustWhiteSaturation 调整值为：0到255之间
.常量 曲线调整_对比度, "2", 公开, AdjustContrast 调整值为：-100到100之间
.常量 曲线调整_高光, "3", 公开, AdjustHighlight 调整值为：-100到100之间
.常量 曲线调整_黑色饱和度, "7", 公开, AdjustBlackSaturation 调整值为：0到255之间
.常量 曲线调整_密度, "1", 公开, AdjustDensity 调整值为：-255到255之间
.常量 曲线调整_曝光, "0", 公开, AdjustExposure 调整值为：-255到255之间
.常量 曲线调整_阴影, "4", 公开, AdjustShadow 调整值为：-100到100之间
.常量 曲线调整_中间色调, "5", 公开, AdjustMidtone 调整值为：-100到100之间
.常量 曲线通道_红, "1", 公开, CurveChannelRed
.常量 曲线通道_蓝, "3", 公开, CurveChannelBlue
.常量 曲线通道_绿, "2", 公开, CurveChannelGreen
.常量 曲线通道_所有, "0", 公开, CurveChannelAll
.常量 热键前缀_无, "0", 公开, HotkeyPrefixNone
.常量 热键前缀_显示, "1", 公开, HotkeyPrefixShow
.常量 热键前缀_隐藏, "2", 公开, HotkeyPrefixHide
.常量 输出通道_C, "0", 公开, ColorChannelFlagsC
.常量 输出通道_K, "3", 公开, ColorChannelFlagsK
.常量 输出通道_Last, "4", 公开, ColorChannelFlagsLast
.常量 输出通道_M, "1", 公开, ColorChannelFlagsM
.常量 输出通道_Y, "2", 公开, ColorChannelFlagsY
.常量 属性标签_ICC配置文件, "770", 公开, PropertyTagICCProfileDescriptor
.常量 属性标签_JPEGac表, "521", 公开, PropertyTagJPEGACTables
.常量 属性标签_JPEGdc表, "520", 公开, PropertyTagJPEGDCTables
.常量 属性标签_JPEG点变化值, "518", 公开, PropertyTagJPEGPointTransforms
.常量 属性标签_JPEG格式, "513", 公开, PropertyTagJPEGInterFormat
.常量 属性标签_JPEG量化表, "519", 公开, PropertyTagJPEGQTables
.常量 属性标签_JPEG品质_Adobe, "20496", 公开, PropertyTagJPEGQuality
.常量 属性标签_JPEG无损预测, "517", 公开, PropertyTagJPEGLosslessPredictors
.常量 属性标签_JPEG压缩, "512", 公开, PropertyTagJPEGProc
.常量 属性标签_JPEG长度, "514", 公开, PropertyTagJPEGInterLength
.常量 属性标签_JPEG重置间隔, "515", 公开, PropertyTagJPEGRestartInterval
.常量 属性标签_SRGB渲染, "771", 公开, PropertyTagSRGBRenderingIntent
.常量 属性标签_T4选项, "292", 公开, PropertyTagT4Option
.常量 属性标签_T6选项, "293", 公开, PropertyTagT6Option
.常量 属性标签_白点色度, "318", 公开, PropertyTagWhitePoint
.常量 属性标签_白平衡, "37384", 公开, PropertyTagExifLightSource。0.未知，1.日光，2.荧光灯，3.钨丝灯，17.标准A，18.标准B，19.标准C，20.D55，21.D65，22.D75。
.常量 属性标签_版本, "36864", 公开, PropertyTagExifVer
.常量 属性标签_版权, "33432", 公开, PropertyTagCopyright
.常量 属性标签_半色调, "321", 公开, PropertyTagHalftoneHints
.常量 属性标签_采样格式, "339", 公开, PropertyTagSampleFormat
.常量 属性标签_采样最大值, "341", 公开, PropertyTagSMaxSampleValue
.常量 属性标签_采样最小值, "340", 公开, PropertyTagSMinSampleValue
.常量 属性标签_测光, "34852", 公开, PropertyTagExifSpectralSense
.常量 属性标签_测光模式, "37383", 公开, PropertyTagExifMeteringMode。0.未知，1.正常，2.中央重点测光，3.点测光，4.多分区，5.平均测光，6.局部测光。
.常量 属性标签_传输范围, "342", 公开, PropertyTagTransferRange
.常量 属性标签_传输功能, "301", 公开, PropertyTagTransferFuncition
.常量 属性标签_创建时间, "306", 公开, PropertyTagDateTime
.常量 属性标签_创建时间2, "37520", 公开, PropertyTagExifDTSubsec
.常量 属性标签_垂直分辨率, "283", 公开, PropertyTagYResolution
.常量 属性标签_垂直分辨率单位, "20482", 公开, PropertyTagResolutionYUnit。1、每英寸，2.每厘米
.常量 属性标签_垂直位置, "287", 公开, PropertyTagYPosition
.常量 属性标签_垂直像素单位, "20754", 公开, PropertyTagPixelPerUnitY
.常量 属性标签_打印版本, "20486", 公开, PropertyTagPrintFlagsVersion
.常量 属性标签_打印裁剪标志, "20487", 公开, PropertyTagPrintFlagsCrop
.常量 属性标签_打印环境, "337", 公开, PropertyTagTargetPrinter
.常量 属性标签_打印宽度, "20488", 公开, PropertyTagPrintFlagsBleedWidth
.常量 属性标签_打印宽度比例, "20489", 公开, PropertyTagPrintFlagsBleedWidthScale
.常量 属性标签_打印选项, "20485", 公开, PropertyTagPrintFlags
.常量 属性标签_抖动或半色调高, "265", 公开, PropertyTagCellHeight
.常量 属性标签_抖动或半色调宽, "264", 公开, PropertyTagCellWidth
.常量 属性标签_额外颜色分量, "338", 公开, PropertyTagExtraSamples
.常量 属性标签_方向定位, "274", 公开, PropertyTagOrientation
.常量 属性标签_分辨率单位, "296", 公开, PropertyTagResolutionUnit
.常量 属性标签_分离黑白, "263", 公开, PropertyTagThreshHolding
.常量 属性标签_伽玛值, "769", 公开, PropertyTagGamma
.常量 属性标签_感光度, "34855", 公开, PropertyTagExifISOSpeed
.常量 属性标签_感光元件, "41495", 公开, PropertyTagExifSensingMethod。1.未定义，2.单芯片，3.双芯片，4.三芯片，5.连续色彩，7.三线，8.线性连续色彩
.常量 属性标签_高度单位, "20484", 公开, PropertyTagResolutionYLengthUnit。1、英寸，2、厘米，3、点，4、派卡，5、列
.常量 属性标签_格式版本, "40960", 公开, PropertyTagExifFPXVer
.常量 属性标签_光度测量解释, "262", 公开, PropertyTagPhotometricInterp
.常量 属性标签_光圈, "37378", 公开, PropertyTagExifAperture
.常量 属性标签_光转换能力, "34856", 公开, PropertyTagExifOECF
.常量 属性标签_灰度单位, "290", 公开, PropertyTagGrayResponseUnit
.常量 属性标签_灰度密度, "291", 公开, PropertyTagGrayResponseCurve
.常量 属性标签_焦距, "33437", 公开, PropertyTagExifFNumber
.常量 属性标签_焦平面X分辨率, "41486", 公开, PropertyTagExifFocalXRes
.常量 属性标签_焦平面Y分辨率, "41487", 公开, PropertyTagExifFocalYRes
.常量 属性标签_焦平面分辨率单位, "41488", 公开, PropertyTagExifFocalResUnit
.常量 属性标签_空间频率表, "41484", 公开, PropertyTagExifSpatialFR
.常量 属性标签_快门速度, "37377", 公开, PropertyTagExifShutterSpeed
.常量 属性标签_宽度单位, "20483", 公开, PropertyTagResolutionXLengthUnit。1、英寸，2、厘米，3、点，4、派卡，5、列
.常量 属性标签_扩展压缩, "37121", 公开, PropertyTagExifCompConfig
.常量 属性标签_亮度, "37379", 公开, PropertyTagExifBrightness。-99.99到99.99
.常量 属性标签_亮度表, "20624", 公开, PropertyTagLuminanceTable
.常量 属性标签_每行字节数, "278", 公开, PropertyTagRowsPerStrip
.常量 属性标签_每像素颜色分量, "277", 公开, PropertyTagSamplesPerPixel
.常量 属性标签_墨水名, "333", 公开, PropertyTagInkNames
.常量 属性标签_墨水数, "334", 公开, PropertyTagNumberOfInks
.常量 属性标签_偏移块, "40965", 公开, PropertyTagExifInterop
.常量 属性标签_平铺宽度, "322", 公开, PropertyTagTileWidth
.常量 属性标签_平铺偏移量, "324", 公开, PropertyTagTileOffset
.常量 属性标签_平铺长度, "323", 公开, PropertyTagTileLength
.常量 属性标签_平铺字节总数, "325", 公开, PropertyTagTileByteCounts
.常量 属性标签_曝光模式, "34850", 公开, PropertyTagExifExposureProg。0.没有定义，1.手动，2.正常程序，3.光圈优先，4.快门优先，5.创意程序，6.运动模式，7.人像模式，8.风景模式
.常量 属性标签_曝光偏差, "37380", 公开, PropertyTagExifExposureBias。-99.99到99.99
.常量 属性标签_曝光时间, "33434", 公开, PropertyTagLuminanceTable。单位秒
.常量 属性标签_曝光指数, "41493", 公开, PropertyTagExifExposureIndex
.常量 属性标签_软件名, "305", 公开, PropertyTagSoftwareUsed
.常量 属性标签_色彩滤镜阵列, "41730", 公开, PropertyTagExifCfaPattern
.常量 属性标签_色度表, "20625", 公开, PropertyTagChrominanceTable
.常量 属性标签_闪光灯, "37385", 公开, PropertyTagExifFlash
.常量 属性标签_闪光量, "41483", 公开, PropertyTagExifFlashEnergy
.常量 属性标签_设备型号, "272", 公开, PropertyTagEquipModel
.常量 属性标签_设备制造商, "271", 公开, PropertyTagEquipMake
.常量 属性标签_实际焦距, "37386", 公开, PropertyTagExifFocalLength
.常量 属性标签_释放偏移, "288", 公开, PropertyTagFreeOffset
.常量 属性标签_释放字节偏移, "289", 公开, PropertyTagFreeByteCounts
.常量 属性标签_数据配置, "284", 公开, PropertyTagPlanarConfig
.常量 属性标签_数字时间, "36868", 公开, PropertyTagExifDTDigitized
.常量 属性标签_数字时间2, "37522", 公开, PropertyTagExifDTDigSS
.常量 属性标签_水平分辨率, "282", 公开, PropertyTagXResolution
.常量 属性标签_水平分辨率单位, "20481", 公开, PropertyTagResolutionXUnit。1、每英寸，2.每厘米
.常量 属性标签_水平位置, "286", 公开, PropertyTagXPosition
.常量 属性标签_水平像素单位, "20753", 公开, PropertyTagPixelPerUnitX
.常量 属性标签_缩略图_YCbCr采样, "20536", 公开, PropertyTagThumbnailYCbCrSubsampling
.常量 属性标签_缩略图_YCbCr配置, "20537", 公开, PropertyTagThumbnailYCbCrPositioning
.常量 属性标签_缩略图_YCbCr数据, "20535", 公开, PropertyTagThumbnailYCbCrCoefficients
.常量 属性标签_缩略图_白点色度, "20533", 公开, PropertyTagThumbnailWhitePoint
.常量 属性标签_缩略图_版权信息, "20539", 公开, PropertyTagThumbnailCopyRight
.常量 属性标签_缩略图_传输功能, "20529", 公开, PropertyTagThumbnailTransferFunction
.常量 属性标签_缩略图_垂直分辨率, "20526", 公开, PropertyTagThumbnailResolutionY
.常量 属性标签_缩略图_方向定位, "20521", 公开, PropertyTagThumbnailOrientation
.常量 属性标签_缩略图_分辨率单位, "20528", 公开, PropertyTagThumbnailResolutionUnit
.常量 属性标签_缩略图_高度, "20513", 公开, PropertyTagThumbnailImageHeight
.常量 属性标签_缩略图_更改时间, "20531", 公开, PropertyTagThumbnailDateTime
.常量 属性标签_缩略图_光度测量解释, "20516", 公开, PropertyTagThumbnailPhotometricInterp
.常量 属性标签_缩略图_黑白参考, "20538", 公开, PropertyTagThumbnailRefBlackWhite
.常量 属性标签_缩略图_宽度, "20512", 公开, PropertyTagThumbnailImageWidth
.常量 属性标签_缩略图_每行字节数, "20523", 公开, PropertyTagThumbnailRowsPerStrip
.常量 属性标签_缩略图_每像素颜色分量, "20522", 公开, PropertyTagThumbnailSamplesPerPixel
.常量 属性标签_缩略图_描述, "20517", 公开, PropertyTagThumbnailImageDescription
.常量 属性标签_缩略图_软件名, "20530", 公开, PropertyTagThumbnailSoftwareUsed
.常量 属性标签_缩略图_设备制型号, "20519", 公开, PropertyTagThumbnailEquipModel
.常量 属性标签_缩略图_设备制造商, "20518", 公开, PropertyTagThumbnailEquipMake
.常量 属性标签_缩略图_数据配置, "20527", 公开, PropertyTagThumbnailPlanarConfig
.常量 属性标签_缩略图_水平分辨率, "20525", 公开, PropertyTagThumbnailResolutionX
.常量 属性标签_缩略图_位深, "20514", 公开, PropertyTagThumbnailBitsPerSample
.常量 属性标签_缩略图_压缩, "20515", 公开, PropertyTagThumbnailCompression
.常量 属性标签_缩略图_重要颜色, "20534", 公开, PropertyTagThumbnailPrimaryChromaticities
.常量 属性标签_缩略图_字节偏移量, "20520", 公开, PropertyTagThumbnailStripOffsets
.常量 属性标签_缩略图_字节总数, "20524", 公开, PropertyTagThumbnailStripBytesCount
.常量 属性标签_缩略图_作者, "20532", 公开, PropertyTagThumbnailArtist
.常量 属性标签_缩略图大小, "20504", 公开, PropertyTagThumbnailSize。总字节大小。
.常量 属性标签_缩略图高度, "20500", 公开, PropertyTagThumbnailHeight
.常量 属性标签_缩略图格式, "20498", 公开, PropertyTagThumbnailFormat。0、原始RGB，1、JPEG
.常量 属性标签_缩略图行字节数, "20503", 公开, PropertyTagThumbnailRawBytes
.常量 属性标签_缩略图宽度, "20499", 公开, PropertyTagThumbnailWidth
.常量 属性标签_缩略图色板数量, "20502", 公开, PropertyTagThumbnailPlanes
.常量 属性标签_缩略图数据, "20507", 公开, PropertyTagThumbnailData
.常量 属性标签_缩略图位深, "20501", 公开, PropertyTagThumbnailColorDepth
.常量 属性标签_缩略图压缩大小, "20505", 公开, PropertyTagThumbnailCompressedSize。
.常量 属性标签_填充顺序, "266", 公开, PropertyTagFillOrder
.常量 属性标签_调色板, "320", 公开, PropertyTagColorMap
.常量 属性标签_图像标题, "800", 公开, PropertyTagImageTitle
.常量 属性标签_图像高度, "257", 公开, PropertyTagImageHeight
.常量 属性标签_图像宽度, "256", 公开, PropertyTagImageWidth
.常量 属性标签_图像描述, "270", 公开, PropertyTagImageDescription
.常量 属性标签_图像源, "41728", 公开, PropertyTagExifFileSource
.常量 属性标签_网格大小, "20497", 公开, PropertyTagGridSize
.常量 属性标签_网格角度, "20492", 公开, PropertyTagHalftoneDegree
.常量 属性标签_网格频率, "20490", 公开, PropertyTagHalftoneLPI
.常量 属性标签_网格频率单位, "20491", 公开, PropertyTagHalftoneLPIUnit
.常量 属性标签_网格是否默认屏幕, "20495", 公开, PropertyTagHalftoneScreen
.常量 属性标签_网格形状, "20493", 公开, PropertyTagHalftoneShape
.常量 属性标签_网格杂项, "20494", 公开, PropertyTagHalftoneMisc
.常量 属性标签_位深, "258", 公开, PropertyTagBitsPerSample
.常量 属性标签_文档名称, "269", 公开, PropertyTagDocumentName
.常量 属性标签_相关音频文件, "40964", 公开, PropertyTagExifRelatedWav
.常量 属性标签_像素单位, "20752", 公开, PropertyTagPixelUnit
.常量 属性标签_新子文件, "254", 公开, PropertyTagNewSubfileType
.常量 属性标签_循环次数, "20737", 公开, PropertyTagLoopCount。0、无限。
.常量 属性标签_压缩, "259", 公开, PropertyTagCompression
.常量 属性标签_压缩BPP, "37122", 公开, PropertyTagExifCompBPP
.常量 属性标签_颜色成分, "336", 公开, PropertyTagDotRange
.常量 属性标签_颜色传输功能, "20506", 公开, PropertyTagColorTransferFunction
.常量 属性标签_颜色空间, "40961", 公开, PropertyTagExifColorSpace
.常量 属性标签_页码, "297", 公开, PropertyTagPageNumber
.常量 属性标签_页名称, "285", 公开, PropertyTagPageName
.常量 属性标签_有效高度, "40963", 公开, PropertyTagExifPixYDim
.常量 属性标签_有效宽度, "40962", 公开, PropertyTagExifPixXDim
.常量 属性标签_预测, "317", 公开, PropertyTagPredictor
.常量 属性标签_原始时间, "36867", 公开, PropertyTagExifDTOrig
.常量 属性标签_原始时间2, "37521", 公开, PropertyTagExifDTOrigSS
.常量 属性标签_帧延时, "20736", 公开, PropertyTagFrameDelay
.常量 属性标签_直方图调色板, "20755", 公开, PropertyTagPaletteHistogram
.常量 属性标签_制造商记录, "37500", 公开, PropertyTagExifMakerNote
.常量 属性标签_置墨水, "332", 公开, PropertyTagInkSet
.常量 属性标签_重要颜色, "319", 公开, PropertyTagPrimaryChromaticities
.常量 属性标签_主机名, "316", 公开, PropertyTagHostComputer
.常量 属性标签_主要线路, "41492", 公开, PropertyTagExifSubjectLoc
.常量 属性标签_注释标记, "37510", 公开, PropertyTagExifUserComment
.常量 属性标签_子文件, "255", 公开, PropertyTagSubfileType
.常量 属性标签_自动对焦, "37382", 公开, PropertyTagExifSubjectDist
.常量 属性标签_字节偏移量, "273", 公开, PropertyTagStripOffsets
.常量 属性标签_字节总数, "279", 公开, PropertyTagStripBytesCount
.常量 属性标签_最大采样值, "281", 公开, PropertyTagMaxSampleValue
.常量 属性标签_最大光圈, "37381", 公开, PropertyTagExifMaxAperture。00.00到99.99
.常量 属性标签_最小采样值, "280", 公开, PropertyTagMinSampleValue
.常量 属性标签_作品类型, "41729", 公开, PropertyTagExifSceneType
.常量 属性标签_作者, "315", 公开, PropertyTagArtist
.常量 属性值类型_短整数型, "3", 公开, PropertyTagTypeShort
.常量 属性值类型_未定义, "7", 公开, PropertyTagTypeUndefined
.常量 属性值类型_小数型, "9", 公开, PropertyTagTypeSLONG
.常量 属性值类型_小数型对, "10", 公开, PropertyTagTypeSRational。表示成对的小数数组
.常量 属性值类型_整数型, "4", 公开, PropertyTagTypeLong
.常量 属性值类型_整数型对, "5", 公开, PropertyTagTypeRational。表示成对的整数数组
.常量 属性值类型_字符型, "2", 公开, PropertyTagTypeASCII
.常量 属性值类型_字节型, "1", 公开, PropertyTagTypeByte
.常量 刷新方式_立即, "0", 公开, Flush
.常量 刷新方式_同步, "1", 公开, Sync
.常量 算法模式_低质量, "1", 公开, InterpolationModeLowQuality
.常量 算法模式_高质量, "2", 公开, InterpolationModeHighQuality
.常量 算法模式_高质量双三次, "7", 公开, InterpolationModeHighQualityBicubic
.常量 算法模式_高质量双线性, "6", 公开, InterpolationModeHighQualityBilinear
.常量 算法模式_邻近, "5", 公开, InterpolationModeNearestNeighbor
.常量 算法模式_默认, "0", 公开, InterpolationModeDefault
.常量 算法模式_双三次, "4", 公开, InterpolationModeBicubic
.常量 算法模式_双线性, "3", 公开, InterpolationModeBilinear
.常量 算法模式_无效, "-1", 公开, InterpolationModeInvalid
.常量 填充模式_环绕, "1", 公开, Winding 指定环绕填充模式。  
.常量 填充模式_交替, "0", 公开, Alternate 指定交替填充模式。  
.常量 调色板标志_半色, "4", 公开, PaletteFlagsHalftone
.常量 调色板标志_含透明色, "1", 公开, PaletteFlagsHasAlpha
.常量 调色板标志_灰度, "2", 公开, PaletteFlagsGrayScale
.常量 图像格式_BMP, "“{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatBMP
.常量 图像格式_EMF, "“{B96B3CAC-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatEMF
.常量 图像格式_GIF, "“{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatGIF
.常量 图像格式_ICO, "“{B96B3CB5-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatIcon
.常量 图像格式_JPEG, "“{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatJPEG
.常量 图像格式_PNG, "“{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatPNG
.常量 图像格式_TIFF, "“{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatTIFF
.常量 图像格式_WMF, "“{B96B3CAD-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatWMF
.常量 图像格式_内存BMP, "“{B96B3CAA-0728-11D3-9D7B-0000F81EF32E}”", 公开, ImageFormatMemoryBMP
.常量 图像类型_图元文件, "2", 公开, ImageTypeMetafile
.常量 图像类型_未知, "0", 公开, ImageTypeUnknown
.常量 图像类型_位图, "1", 公开, ImageTypeBitmap
.常量 图像属性_高速缓存, "131072", 公开, ImageFlagsCaching
.常量 图像属性_含DPI, "4096", 公开, ImageFlagsHasRealDPI
.常量 图像属性_含半透明, "4", 公开, ImageFlagsHasTranslucent
.常量 图像属性_含透明, "2", 公开, ImageFlagsHasAlpha
.常量 图像属性_含像素尺寸, "8192", 公开, ImageFlagsHasRealPixelSize
.常量 图像属性_可部分缩放, "8", 公开, ImageFlagsPartiallyScalable
.常量 图像属性_可缩放, "1", 公开, ImageFlagsScalable
.常量 图像属性_色彩空间CMYK, "32", 公开, ImageFlagsColorSpaceCMYK
.常量 图像属性_色彩空间RGB, "16", 公开, ImageFlagsColorSpaceRGB
.常量 图像属性_色彩空间YCBCR, "128", 公开, ImageFlagsColorSpaceYCBCR
.常量 图像属性_色彩空间YCCK, "256", 公开, ImageFlagsColorSpaceYCCK
.常量 图像属性_色彩空间灰度, "64", 公开, ImageFlagsColorSpaceGRAY
.常量 图像属性_无, "0", 公开, ImageFlagsNone
.常量 图像属性_只读, "65536", 公开, ImageFlagsReadOnly
.常量 图像锁定模式_读, "1", 公开, ImageLockModeRead
.常量 图像锁定模式_写, "2", 公开, ImageLockModeWrite
.常量 图像锁定模式_用户分配缓冲区, "4", 公开, ImageLockModeUserInputBuf 
.常量 图元文件单位_GDI, "7", 公开, MetafileFrameUnitGdi。0.01毫米
.常量 图元文件单位_点, "3", 公开, MetafileFrameUnitPoint。1/72英寸
.常量 图元文件单位_毫米, "6", 公开, MetafileFrameUnitMillimeter
.常量 图元文件单位_文档, "5", 公开, MetafileFrameUnitDocument。1/300英寸
.常量 图元文件单位_像素, "2", 公开, MetafileFrameUnitPixel
.常量 图元文件单位_英寸, "4", 公开, MetafileFrameUnitInch
.常量 图元文件类型_Emf, "3", 公开, MetafileTypeEmf
.常量 图元文件类型_EmfPlusDual, "5", 公开, MetafileTypeEmfPlusDual
.常量 图元文件类型_EmfPlusOnly, "4", 公开, MetafileTypeEmfPlusOnly
.常量 图元文件类型_Wmf, "1", 公开, MetafileTypeWmf
.常量 图元文件类型_WmfAldus, "2", 公开, MetafileTypeWmfAldus
.常量 图元文件类型_无效, "0", 公开, MetafileTypeInvalid
.常量 文本对齐_居中, "1", 公开, StringAlignmentCenter 
.常量 文本对齐_靠近, "0", 公开, StringAlignmentNear
.常量 文本对齐_远离, "2", 公开, StringAlignmentFar 
.常量 文本格式标志_Unicode, "32", 公开, StringFormatFlagsDisplayFormatControl
.常量 文本格式标志_包含结尾空字符, "2048", 公开, StringFormatFlagsMeasureTrailingSpaces
.常量 文本格式标志_不裁剪, "16384", 公开, StringFormatFlagsNoClip
.常量 文本格式标志_不换行, "4096", 公开, StringFormatFlagsNoWrap
.常量 文本格式标志_方向垂直, "2", 公开, StringFormatFlagsDirectionVertical
.常量 文本格式标志_方向右到左, "1", 公开, StringFormatFlagsDirectionRightToLeft
.常量 文本格式标志_禁止不支持字符, "1024", 公开, StringFormatFlagsNoFontFallback
.常量 文本格式标志_允许部分延伸, "4", 公开, StringFormatFlagsNoFitBlackBox
.常量 文本格式标志_整行布局, "8192", 公开, StringFormatFlagsLineLimit。若要确保看到的都是整行，请指定此值，并仔细地提供格式化矩形，使其高度至少为一个行高
.常量 文本数字替换_本地, "3", 公开, StringDigitSubstituteTraditional
.常量 文本数字替换_国家, "2", 公开, StringDigitSubstituteNational
.常量 文本数字替换_无, "1", 公开, StringDigitSubstituteNone 
.常量 文本数字替换_用户定义, "0", 公开, StringDigitSubstituteUser
.常量 文本修整_单词, "2", 公开, StringTrimmingWord。指定将文本修整成最接近的单词。
.常量 文本修整_单词和省略号, "4", 公开, StringTrimmingEllipsisWord。指定将文本修整成最接近的单词，并在被修整的行的末尾插入一个省略号。
.常量 文本修整_路径和省略号, "5", 公开, StringTrimmingEllipsisPath。中心从被修整的行移除并用省略号替换。这种算法尽可能多地保留了行中的最后一个由斜杠分隔的段。
.常量 文本修整_无, "0", 公开, StringTrimmingNone。指定不进行任何修整。
.常量 文本修整_字符, "1", 公开, StringTrimmingCharacter。指定将文本修整成最接近的字符。
.常量 文本修整_字符和省略号, "3", 公开, StringTrimmingEllipsisCharacter。指定将文本修整成最接近的字符，并在被修整的行的末尾插入一个省略号。 
.常量 文本渲染模式_ClearType文本和hinting技术, "5", 公开, TextRenderingHintClearTypeGridFit
.常量 文本渲染模式_符号位图, "2", 公开, TextRenderingHintSingleBitPerPixel
.常量 文本渲染模式_符号位图和hinting技术, "1", 公开, TextRenderingHintSingleBitPerPixelGridFit
.常量 文本渲染模式_抗锯齿, "4", 公开, TextRenderingHintAntiAlias
.常量 文本渲染模式_抗锯齿和hinting技术, "3", 公开, TextRenderingHintAntiAliasGridFit
.常量 文本渲染模式_系统默认, "0", 公开, TextRenderingHintSystemDefault
.常量 线帽样式_方锚头帽, "17", 公开, LineCapSquareAnchor
.常量 线帽样式_方线帽, "1", 公开, LineCapSquare
.常量 线帽样式_箭头状锚头帽, "20", 公开, LineCapArrowAnchor
.常量 线帽样式_菱形锚头帽, "19", 公开, LineCapDiamondAnchor
.常量 线帽样式_没有锚, "16", 公开, LineCapNoAnchor
.常量 线帽样式_平线帽, "0", 公开, LineCapFlat
.常量 线帽样式_三角线帽, "3", 公开, LineCapTriangle
.常量 线帽样式_圆锚头帽, "18", 公开, LineCapRoundAnchor
.常量 线帽样式_圆线帽, "2", 公开, LineCapRound
.常量 线帽样式_自定义线帽, "255", 公开, LineCapCustom
.常量 线性渐变模式_从上到下, "1", 公开, Vertical 指定从上到下的渐变。
.常量 线性渐变模式_从右上到左下, "3", 公开, BackwardDiagonal 指定从右上到左下的渐变。
.常量 线性渐变模式_从左到右, "0", 公开, Horizontal 指定从左到右的渐变。
.常量 线性渐变模式_从左上到右下, "2", 公开, ForwardDiagonal 指定从左上到右下的渐变。
.常量 像素格式_16bppARGB1555, "397319", 公开, Format16bppArgb1555 像素格式为每像素 16 位。该颜色信息指定 32
.常量 像素格式_16bppGrayScale, "1052676", 公开, Format16bppGrayScale 像素格式为每像素 16 位。该颜色信息指定 65536 种灰色调。
.常量 像素格式_16bppRGB555, "135173", 公开, Format16bppRgb555 指定格式为每像素 16 位；红色、绿色和蓝色分量各使用 5 位。剩余的 1 位未使用。
.常量 像素格式_16bppRGB565, "135174", 公开, Format16bppRgb565 指定格式为每像素 16 位；红色分量使用 5 位，绿色分量使用 6 位，蓝色分量使用 5 位。
.常量 像素格式_1bppIndexed, "196865", 公开, Format1bppIndexed 指定像素格式为每像素 1 位，并指定它使用索引颜色。因此颜色表中有两种颜色。
.常量 像素格式_24bppRGB, "137224", 公开, Format24bppRgb 指定格式为每像素 24 位；红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppARGB, "2498570", 公开, Format32bppArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppPARGB, "925707", 公开, Format32bppPArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_32bppRGB, "139273", 公开, Format32bppRgb 指定格式为每像素 32 位；红色、绿色和蓝色分量各使用 8 位。剩余的 8 位未使用。
.常量 像素格式_48bppRGB, "1060876", 公开, Format48bppRgb 指定格式为每像素 48 位；红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_4bppIndexed, "197634", 公开, Format4bppIndexed 指定格式为每像素 4 位而且已创建索引。
.常量 像素格式_64bppARGB, "3424269", 公开, Format64bppArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppPARGB, "1851406", 公开, Format64bppPArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_8bppIndexed, "198659", 公开, Format8bppIndexed 指定格式为每像素 8 位而且已创建索引。因此颜色表中有 256 种颜色。
.常量 像素格式_Alpha, "262144", 公开, Alpha 像素数据包含没有进行过自左乘的 alpha 值。
.常量 像素格式_Canonical, "2097152", 公开, Canonical 保留。
.常量 像素格式_Extended, "1048576", 公开, Extended 保留。
.常量 像素格式_GDI, "131072", 公开, Gdi 像素数据包含 GDI 颜色。
.常量 像素格式_Indexed, "65536", 公开, Indexed 该像素数据包含颜色索引值，这意味着这些值是系统颜色表中颜色的索引，而不是单个颜色值。
.常量 像素格式_PAlpha, "524288", 公开, PAlpha 像素格式包含自左乘的 alpha 值。
.常量 像素格式_Undefined, "0", 公开, Undefined 未定义像素格式。
.常量 像素偏移模式_不偏移, "3", 公开, PixelOffsetModeNone
.常量 像素偏移模式_高性能, "1", 公开, PixelOffsetModeHighSpeed
.常量 像素偏移模式_高质量, "2", 公开, PixelOffsetModeHighQuality
.常量 像素偏移模式_默认, "0", 公开, PixelOffsetModeDefault
.常量 像素偏移模式_无效, "-1", 公开, PixelOffsetModeInvalid
.常量 像素偏移模式_一半, "4", 公开, PixelOffsetModeHalf
.常量 虚线类型_点划线, "3", 公开, DashStyleDashDot
.常量 虚线类型_点线, "2", 公开, DashStyleDot
.常量 虚线类型_划线, "1", 公开, DashStyleDash
.常量 虚线类型_实线, "0", 公开, DashStyleSolid
.常量 虚线类型_双点划线, "4", 公开, DashStyleDashDotDot
.常量 虚线类型_自定义, "5", 公开, DashStyleCustom
.常量 虚线帽样式_方线帽, "0", 公开, DashCapFlat
.常量 虚线帽样式_三角线帽, "3", 公开, DashCapTriangle
.常量 虚线帽样式_圆线帽, "2", 公开, DashCapRound
.常量 旋转翻转_不旋转不翻转, "0", 公开, RotateNoneFlipNone
.常量 旋转翻转_不旋转垂直翻转, "6", 公开, RotateNoneFlipY
.常量 旋转翻转_不旋转水平翻转, "4", 公开, RotateNoneFlipX
.常量 旋转翻转_不旋转水平和垂直翻转, "2", 公开, RotateNoneFlipXY
.常量 旋转翻转_旋转180度不翻转, "2", 公开, Rotate180FlipNone
.常量 旋转翻转_旋转180度垂直翻转, "4", 公开, Rotate180FlipY
.常量 旋转翻转_旋转180度水平翻转, "6", 公开, Rotate180FlipX
.常量 旋转翻转_旋转180度水平和垂直翻转, "0", 公开, Rotate180FlipXY
.常量 旋转翻转_旋转270度不翻转, "3", 公开, Rotate270FlipNone
.常量 旋转翻转_旋转270度垂直翻转, "5", 公开, Rotate270FlipY
.常量 旋转翻转_旋转270度水平翻转, "7", 公开, Rotate270FlipX
.常量 旋转翻转_旋转270度水平和垂直翻转, "1", 公开, Rotate270FlipXY
.常量 旋转翻转_旋转90度不翻转, "1", 公开, Rotate90FlipNone
.常量 旋转翻转_旋转90度垂直翻转, "7", 公开, Rotate90FlipY
.常量 旋转翻转_旋转90度水平翻转, "5", 公开, Rotate90FlipX
.常量 旋转翻转_旋转90度水平和垂直翻转, "3", 公开, Rotate90FlipXY
.常量 颜色矩阵标志_分别, "2", 公开, ColorMatrixFlagsAltGray。颜色是一个矩阵，灰度是另一个矩阵。
.常量 颜色矩阵标志_忽略灰度, "1", 公开, ColorMatrixFlagsSkipGrays。不对灰度进行调整
.常量 颜色矩阵标志_默认, "0", 公开, ColorMatrixFlagsDefault。所有的颜色值（包括灰度）是由相同的颜色调整矩阵调整的指定
.常量 颜色调整类型_画笔, "3", 公开, ColorAdjustTypePen。用于图元文件中的画笔
.常量 颜色调整类型_画刷, "2", 公开, ColorAdjustTypeBrush。用于图元文件中的画刷
.常量 颜色调整类型_默认, "0", 公开, ColorAdjustTypeDefault。适应用各类型
.常量 颜色调整类型_位图, "1", 公开, ColorAdjustTypeBitmap。用于位图
.常量 颜色调整类型_文本, "4", 公开, ColorAdjustTypeText。用于图元文件中的文本的画刷
.常量 阴影风格_百分05阴影, "6", 公开, Percent05 指定 5% 阴影。前景色与背景色的比例为 5:100。
.常量 阴影风格_百分10阴影, "7", 公开, Percent10 指定 10% 阴影。前景色与背景色的比例为 10:100。
.常量 阴影风格_百分20阴影, "8", 公开, Percent20 指定 20% 阴影。前景色与背景色的比例为 20:100。
.常量 阴影风格_百分25阴影, "9", 公开, Percent25 指定 25% 阴影。前景色与背景色的比例为 25:100。
.常量 阴影风格_百分30阴影, "10", 公开, Percent30 指定 30% 阴影。前景色与背景色的比例为 30:100。
.常量 阴影风格_百分40阴影, "11", 公开, Percent40 指定 40% 阴影。前景色与背景色的比例为 40:100。
.常量 阴影风格_百分50阴影, "12", 公开, Percent50 指定 50% 阴影。前景色与背景色的比例为 50:100。
.常量 阴影风格_百分60阴影, "13", 公开, Percent60 指定 60% 阴影。前景色与背景色的比例为 60:100。
.常量 阴影风格_百分70阴影, "14", 公开, Percent70 指定 70% 阴影。前景色与背景色的比例为 70:100。
.常量 阴影风格_百分75阴影, "15", 公开, Percent75 指定 75% 阴影。前景色与背景色的比例为 75:100。
.常量 阴影风格_百分80阴影, "16", 公开, Percent80 指定 80% 阴影。前景色与背景色的比例为 80:100。
.常量 阴影风格_百分90阴影, "17", 公开, Percent90 指定 90% 阴影。前景色与背景色的比例为 90:100。
.常量 阴影风格_边线金刚石, "51", 公开, OutlinedDiamond 指定互相交叉的正向对角线和反向对角线，但这些对角线不是锯齿消除的。
.常量 阴影风格_编织, "40", 公开, Weave 指定具有织物外观的阴影。
.常量 阴影风格_波浪线, "37", 公开, Wave 指定由代字号“~”构成的水平线。
.常量 阴影风格_草皮, "42", 公开, Divot 指定具有草皮层外观的阴影。
.常量 阴影风格_垂直线, "1", 公开, Vertical 垂直线的图案。
.常量 阴影风格_垂直虚线, "33", 公开, DashedVertical 指定虚线垂直线。
.常量 阴影风格_粗垂直线, "28", 公开, DarkVertical 指定垂直线的两边夹角比 Vertical 小 50% 并且宽度是其两倍。
.常量 阴影风格_粗水平线, "29", 公开, DarkHorizontal 指定水平线的两边夹角比水平小 50% 并且宽度是 HatchStyleHorizontal 的两倍。
.常量 阴影风格_粗向上对角线, "21", 公开, DarkUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，宽度是其两倍，但这些直线不是锯齿消除的。
.常量 阴影风格_粗向下对角线, "20", 公开, DarkDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其两边夹角比 ForwardDiagonal 小 50%，宽度是其两倍。此阴影图案不是锯齿消除的。
.常量 阴影风格_大棋盘, "50", 公开, LargeCheckerBoard 指定具有棋盘外观的阴影，棋盘所具有的方格大小是 SmallCheckerBoard 大小的两倍。
.常量 阴影风格_大网格, "4", 公开, LargeGrid 指定阴影样式 Cross。
.常量 阴影风格_大五彩纸屑, "35", 公开, LargeConfetti 指定具有五彩纸屑外观的阴影，并且它是由比 SmallConfetti 更大的片构成的。
.常量 阴影风格_对角砖块, "38", 公开, DiagonalBrick 指定具有分层砖块外观的阴影，它从顶点到底点向左倾斜。
.常量 阴影风格_花格子, "41", 公开, Plaid 指定具有格子花呢材料外观的阴影。
.常量 阴影风格_交叉点线, "44", 公开, DottedDiamond 指定互相交叉的正向对角线和反向对角线，每一对角线都是由点构成的。
.常量 阴影风格_交叉斜线, "5", 公开, DiagonalCross 指定互相交叉的正向对角线和反向对角线。这些直线是锯齿消除的。
.常量 阴影风格_金刚石, "52", 公开, SolidDiamond 指定具有对角放置的棋盘外观的阴影。
.常量 阴影风格_宽向上对角线, "23", 公开, WideUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其间距与阴影样式 BackwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_宽向下对角线, "22", 公开, WideDownwardDiagonal 指定从顶点到底点向右倾斜的对角线，其间距与阴影样式 ForwardDiagonal 相同，宽度是其三倍，但它们不是锯齿消除的。
.常量 阴影风格_密垂直线, "26", 公开, NarrowVertical 指定垂直线的两边夹角比阴影样式 Vertical 小 75%（或者比 LightVertical 小 25%）。
.常量 阴影风格_密水平线, "27", 公开, NarrowHorizontal 指定水平线的两边夹角比阴影样式 Horizontal 小 75%（或者比 LightHorizontal 小 25%）。
.常量 阴影风格_球形, "47", 公开, Sphere 指定具有球体彼此相邻放置的外观的阴影。
.常量 阴影风格_曲线, "36", 公开, ZigZag 指定由 Z 字形构成的水平线。
.常量 阴影风格_十字点线, "43", 公开, DottedGrid 指定互相交叉的水平线和垂直线，每一直线都是由点构成的。
.常量 阴影风格_十字线, "4", 公开, Cross 指定交叉的水平线和垂直线。
.常量 阴影风格_水平线, "0", 公开, Horizontal 水平线的图案。
.常量 阴影风格_水平虚线, "32", 公开, DashedHorizontal 指定虚线水平线。
.常量 阴影风格_水平砖块, "39", 公开, HorizontalBrick 指定具有水平分层砖块外观的阴影。
.常量 阴影风格_瓦片, "45", 公开, Shingle 指定带有对角分层鹅卵石外观的阴影，它从顶点到底点向右倾斜。
.常量 阴影风格_网格, "46", 公开, Trellis 指定具有格架外观的阴影。
.常量 阴影风格_细垂直线, "24", 公开, LightVertical 指定垂直线的两边夹角比 Vertical 小 50%。
.常量 阴影风格_细水平线, "25", 公开, LightHorizontal 指定水平线，其两边夹角比 Horizontal 小 50%。
.常量 阴影风格_细向上对角线, "19", 公开, LightUpwardDiagonal 指定从顶点到底点向左倾斜的对角线，其两边夹角比 BackwardDiagonal 小 50%，但这些直线不是锯齿消除的。
.常量 阴影风格_细向下对角线, "18", 公开, LightDownwardDiagonal
.常量 阴影风格_小棋盘, "49", 公开, SmallCheckerBoard 指定带有棋盘外观的阴影。
.常量 阴影风格_小网格, "48", 公开, SmallGrid 指定互相交叉的水平线和垂直线，其两边夹角比阴影样式 Cross 小 50%。
.常量 阴影风格_小五彩纸屑, "34", 公开, SmallConfetti 指定带有五彩纸屑外观的阴影。
.常量 阴影风格_右斜线, "3", 公开, BackwardDiagonal 从右上到左下的对角线的线条图案。
.常量 阴影风格_右斜虚线, "30", 公开, DashedDownwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向右倾斜。
.常量 阴影风格_左斜线, "2", 公开, ForwardDiagonal 从左上到右下的对角线的线条图案。
.常量 阴影风格_左斜虚线, "31", 公开, DashedUpwardDiagonal 指定虚线对角线，这些对角线从顶点到底点向左倾斜。
.常量 帧维面_分辨率, "“{84236F7B-3BD3-428F-8DAB-4EA1439CA315}”", 公开
.常量 帧维面_时间, "“{6AEDBD6D-3FB5-418A-83A6-7F45229DC872}”", 公开, 用于 GIF
.常量 帧维面_页, "“{7462DC86-6180-4C7E-8E3F-EE7333A7A483}”", 公开, 用于 TIFF
.常量 字体风格_加粗, "1", 公开
.常量 字体风格_加粗倾斜, "3", 公开
.常量 字体风格_普通, "0", 公开
.常量 字体风格_倾斜, "2", 公开
.常量 字体风格_删除线, "8", 公开
.常量 字体风格_下划线, "4", 公开
.常量 坐标空间_设备, "2", 公开, CoordinateSpaceDevice
.常量 坐标空间_世界, "0", 公开, CoordinateSpaceWorld
.常量 坐标空间_页, "1", 公开, CoordinateSpacePage

模块名称：彗星HTTP应用模块
作者：邓学彬(泪闯天涯)
版本：1.0


------------------------------

.版本 2

.子程序 彗星HTTP读文本, 文本型, 公开, 有可能线程阻塞,请在外部加超时判断
.参数 完整网址, 文本型
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空
.参数 附加协议头, 文本型, 可空
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息

.子程序 彗星HTTP读文件, 字节集, 公开, 有可能线程阻塞,请在外部加超时判断
.参数 完整网址, 文本型
.参数 访问方式, 文本型, 可空, "GET" or "POST",为空默认"GET"
.参数 代理地址, 文本型, 可空
.参数 附加协议头, 文本型, 可空
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息

.子程序 彗星URL编码, 文本型, 公开, 返回已编码的URL
.参数 Bin_URL, 文本型

.子程序 彗星URL编码_UTF8, 文本型, 公开, 返回已编码的URL
.参数 Bin_URL, 文本型

.子程序 彗星URL解码, 文本型, 公开, 返回已解码的URL
.参数 Bin_URL, 文本型

.子程序 彗星URL解码_UTF8, 文本型, 公开, 返回已解码的URL
.参数 Bin_URL, 文本型

.子程序 彗星打开指定网址, , 公开, 调用默认浏览器打开指定网址
.参数 要打开的网址, 文本型

.DLL命令 MultiByteToWideChar, 整数型, , "MultiByteToWideChar", 公开
    .参数 CodePage, 整数型
    .参数 dwFlags, 整数型
    .参数 lpMultiByteStr, 文本型, 传址
    .参数 cchMultiByte, 整数型
    .参数 lpWideCharStr, 字节集, 传址
    .参数 cchWideChar, 整数型

.DLL命令 WideCharToMultiByte, 整数型, "kernel32", "WideCharToMultiByte", 公开
    .参数 CodePage, 整数型
    .参数 dwFlags, 整数型
    .参数 lpWideCharStr, 字节集, 传址
    .参数 cchWideChar, 整数型
    .参数 lpMultiByteStr, 文本型, 传址
    .参数 cchMultiByte, 整数型
    .参数 lpDefaultChar, 整数型
    .参数 lpUsedDefaultChar, 整数型


.版本 2
.支持库 xplib
.支持库 eAPI
.支持库 iext2
.支持库 spec
.支持库 iconv
.支持库 internet

.程序集 窗口程序集1
.程序集变量 初始化完毕, 逻辑型
.程序集变量 SUI_Window, SUI_Window
.程序集变量 SUI_MsgBox, SUI_MsgBox

.子程序 __启动窗口_创建完毕
.局部变量 字体列表, 文本型, , "0"
.局部变量 i, 整数型
.局部变量 存在微软雅黑, 逻辑型

XP风格 (1)  ' 对于自带控件使用xp风格
初始化完毕 ＝ 假
SUI_Initialize (#默认底图, , 假)  ' 初始化SUI界面引擎

字体列表 ＝ 取系统字体列表 ()  ' 防止不存在微软雅黑字体
存在微软雅黑 ＝ 假
.计次循环首 (取数组成员数 (字体列表), i)
    .如果真 (字体列表 [i] ＝ “微软雅黑”)
        存在微软雅黑 ＝ 真
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (取反 (存在微软雅黑))
    SUIFontName (“宋体”)
.如果真结束

SUITemplete (#SUI_Templete_Metro)  ' 对于SUI控件使用metro风格
SUI_LoadResource ()  ' 加载资源
pIcon ＝ SUILoadImage (#图标)
pEditIco ＝ SUILoadImage (#用户名)
pEditIco2 ＝ SUILoadImage (#文件夹)
pEditIco3 ＝ SUILoadImage (#密码)
pBtnIco ＝ SUILoadImage (#设置)
SUILoadImages (#皮肤按钮, { 24, 24, 24 }, 真, , , pSkin)

SUI_Window.Ptr (, 到整数 (&MsgCallBack))  ' 绑定事件
SUI_Window.Create (_启动窗口.取窗口句柄 (), 假, 假, 假, 假, , , 假, “信息输出”, SUITextColor (), 真, 真, 假, 0)  ' 创建信息输出窗口
SUI_Window.Icon (pIcon)
.如果 (取反 (文件是否存在 (取运行目录 () ＋ “/配置.ini”)))
    SUI_Window.Show (真)
    线程关闭API (线程创建API (0, 0, &初始化, 0, 0, 0))  ' 第一次启动初始化
.否则
    直接启动 ()  ' 不是第一次启动 直接进入启动器主界面
.如果结束



.子程序 MsgCallBack, 逻辑型
.参数 hwnd, 整数型
.参数 wMsg, 整数型
.参数 wParam, 整数型
.参数 lParam, 整数型
.局部变量 i, 整数型

.判断开始 (wMsg ＝ #WM_DESTROY)
    ' 销毁自己的资源
    SUIDeleteImage (pIcon)
    .计次循环首 (取数组成员数 (pSkin), i)
        SUIDeleteImage (pSkin [i])
    .计次循环尾 ()
    SUIDeleteImage (pEditIco)
    SUIDeleteImage (pBtnIco)
    SUIDeleteImage (pEditIco2)
    SUIDeleteImage (pEditIco3)
    ' 销毁引擎
    SUI_Remove (真)
    输出调试文本 (“End”)
.默认

.判断结束
返回 (假)

.子程序 输出
.参数 文本颜色, 整数型
.参数 文本, 文本型
.局部变量 字符格式, 字符格式

字符格式.文本颜色 ＝ 文本颜色
超级编辑框1.起始选择位置 ＝ 取文本长度 (超级编辑框1.内容)
超级编辑框1.置选择区字符格式 (字符格式)
超级编辑框1.被选择文本 ＝ 文本
.如果真 (超级编辑框1.取行数 () ≥ 2000)
    超级编辑框1.内容 ＝ “”
.如果真结束
超级编辑框1.发送信息 (277, 7, 0)

.子程序 初始化
.局部变量 信息, 文本型, , "3"
.局部变量 MsgRet, 整数型
.局部变量 是否64位, 逻辑型
.局部变量 最佳内存, 文本型

输出 (#白色, “初始化中...” ＋ #换行符)
延迟 (500)
输出 (#白色, “正在检查系统信息...” ＋ #换行符)
是否64位 ＝ 是否64位 ()
.如果 (是否64位)
    输出 (#黄色, “您正在使用64位系统” ＋ #换行符)
.否则
    输出 (#黄色, “您正在使用32位系统” ＋ #换行符)
.如果结束
延迟 (500)
输出 (#白色, “正在检查java信息...” ＋ #换行符)
java信息 (信息)
延迟 (500)
.如果 (信息 [1] ＝ “”)
    MsgRet ＝ SUI_MsgBox.Create (_启动窗口.取窗口句柄 (), “mclauncher+”, “您也许还未安装java运行环境” ＋ #换行符 ＋ “选择” ＋ #引号 ＋ “是” ＋ #引号 ＋ “将会跳转到java官方网站” ＋ #换行符 ＋ “如果您知道您已经安装 请选择” ＋ #引号 ＋ “否” ＋ #引号 ＋ “将使用默认值”, 真, 真, #询问图标, 假, { “否”, “是” }, 1, 假, , 假)
    .如果真 (SUI_MsgBox.Ret (MsgRet) ＝ 2)
        打开指定网址 (“http://www.java.com”)
    .如果真结束
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “java路径”, “”)
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “不强制”)
.否则
    .如果 (信息 [3] ＝ “64位”)
        输出 (#黄色, “您已安装64位java ” ＋ 信息 [1] ＋ #换行符)
        写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “强制64位”)
    .否则
        输出 (#黄色, “您已安装32位java ” ＋ 信息 [1] ＋ #换行符)
        .如果真 (是否64位)
            输出 (#黄色, “您正在使用64位系统 推荐到www.java.com下载64位java以增强流畅度” ＋ #换行符)
        .如果真结束
        写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “不强制”)
    .如果结束
    .如果真 (信息 [1] ≠ “1.7”)
        输出 (#黄色, “您也许没有使用java7 推荐到www.java.com下载此版本以便支持更多mod” ＋ #换行符)
    .如果真结束
    输出 (#黄色, “路径:” ＋ 信息 [2] ＋ #换行符)
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “java路径”, 信息 [2])
.如果结束
延迟 (500)
输出 (#黄色, “检查是否安装minecraft...” ＋ #换行符)
.如果 (是否安装游戏 ())
    输出 (#黄色, “您已安装minecraft!” ＋ #换行符)
.否则
    SUI_MsgBox.Create (_启动窗口.取窗口句柄 (), “mclauncher+”, “您还未安装minecraft” ＋ #换行符 ＋ “请初始化完成后进入” ＋ #引号 ＋ “下载中心” ＋ #引号 ＋ “来安装minecraft~” ＋ #换行符 ＋ “如果您确信您已经安装了minecraft” ＋ #换行符 ＋ “ 请将本文件和.minecraft放在同一文件夹内”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
.如果结束
延迟 (500)
输出 (#白色, “正在为您设置最佳内存大小...” ＋ #换行符)
最佳内存 ＝ 最佳内存 (是否64位)
输出 (#黄色, “您的最佳内存设定为” ＋ 最佳内存 ＋ “M” ＋ #换行符)
写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “内存”, 最佳内存)
延迟 (500)
输出 (#黄色, “初始化完毕!单击左键继续...” ＋ #换行符)
初始化完毕 ＝ 真

.子程序 _超级编辑框1_鼠标左键被按下, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

.如果真 (初始化完毕)
    初始化完毕 ＝ 假
    直接启动 ()
.如果真结束


.子程序 直接启动

SUI_Window.Show (假)  ' 隐藏信息输出窗体
载入 (窗口1, , 假)
SUIDispatchMessage ()  ' 消息循环


.子程序 是否安装游戏, 逻辑型

返回 (文件是否存在 (取运行目录 () ＋ “/.minecraft”))

.子程序 下载中心初始化
.局部变量 i, 整数型
.局部变量 分割, 文本型, , "0"
.局部变量 分割2, 文本型, , "0"
.局部变量 文本, 文本型

SUI_Window.Show (真)  ' 显示信息输出窗体
输出 (#白色, “正在读取下载中心的列表...” ＋ #换行符)


文本 ＝ 到文本 (编码转换 (HTTP读文件 (“http://mclauncherplus.sinaapp.com/api/?m=download”), #编码_UTF_8, #编码_GB2312, ))
分割 ＝ 分割文本 (文本, “|”, )
下载个数 ＝ 取数组成员数 (分割)
重定义数组 (下载项目, 假, 下载个数)
.计次循环首 (下载个数, i)
    分割2 ＝ 分割文本 (分割 [i], “<>”, )
    下载项目 [i].标题 ＝ 分割2 [1]
    下载项目 [i].地址 ＝ 分割2 [2]
.计次循环尾 ()
SUI_Window.Show (假)
.如果 (下载个数 ＝ 0)
    SUI_MsgBox.Create (_启动窗口.取窗口句柄 (), “mclauncher+”, “获取失败,也许是网络问题”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
.否则
    载入 (窗口3, 窗口1, 真)  ' 载入下载中心
.如果结束

.版本 2
.支持库 eAPI
.支持库 dp1
.支持库 shell
.支持库 internet
.支持库 spec
.支持库 iconv

.程序集 窗口程序集2
.程序集变量 SUI_MsgBox, SUI_MsgBox
.程序集变量 SUI_Window, SUI_Window
.程序集变量 BkgOrder, 整数型
.程序集变量 hImageButtons, 整数型
.程序集变量 hButtons, 整数型, , "3"
.程序集变量 hlinks, 整数型, , "9"
.程序集变量 haboutlink, 整数型
.程序集变量 hslabel, 整数型, , "10"
.程序集变量 hsedit, 整数型, , "4"
.程序集变量 hSlider
.程序集变量 hsbutton, 整数型, , "4"
.程序集变量 hsradiobutton, 整数型, , "3"
.程序集变量 hsradiobutton2, 整数型, , "3"
.程序集变量 hsswithcer, 整数型
.程序集变量 hlabel, 整数型
.程序集变量 hsave, 整数型
.程序集变量 hflinks, 整数型, , "4"
.程序集变量 hflinksa, 文本型, , "4"
.程序集变量 hscheckbox1, 整数型
.程序集变量 hsswithcer2, 整数型
.程序集变量 hcount, 整数型

.子程序 _窗口1_创建完毕
.局部变量 i, 整数型
.局部变量 slidermax, 整数型
.局部变量 启动模式, 文本型
.局部变量 游戏名字, 文本型
.局部变量 最大内存, 文本型
.局部变量 java路径, 文本型
.局部变量 l, 整数型
.局部变量 s, 文本型
.局部变量 密码, 文本型
.局部变量 文件名, 文本型
.局部变量 默认, 文本型
.局部变量 文件, 文本型

' 动态创建控件并读取设定
hcount ＝ SUI_Window.AddLabel (10, 290, 300, 20, “”, 假, 假, #白色, 12, 假, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)

hflinks [1] ＝ SUI_Window.AddLink (10, 310, 90, 20, 真, “minecraft吧”, 真, #白色, 12, 假, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack2))
hflinks [2] ＝ SUI_Window.AddLink (100, 310, 95, 20, 真, “mc中文论坛”, 真, #白色, 12, 假, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack2))
hflinks [3] ＝ SUI_Window.AddLink (185, 310, 80, 20, 真, “McMySkin”, 真, #白色, 12, 假, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack2))
hflinks [4] ＝ SUI_Window.AddLink (265, 310, 90, 20, 真, “SkinMe”, 真, #白色, 12, 假, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack2))
hflinksa [1] ＝ “http://tieba.baidu.com/f?kw=minecraft”
hflinksa [2] ＝ “http://www.mcbbs.net/forum.php”
hflinksa [3] ＝ “http://mcmyskin.com/”
hflinksa [4] ＝ “http://www.skinme.co/”
.计次循环首 (8, i)
    hlinks [i] ＝ SUI_Window.AddLink (24, 56 ＋ (i － 1) × 24, 248, 13, 真, “”, 真, #白色, 14, 真, 假, 假, 假, 假, 假, 真, 到整数 (&ContrlCallBack2))
.计次循环尾 ()
hlinks [9] ＝ SUI_Window.AddLink (24, 252, 248, 13, 真, “”, 真, #绿色, 14, 真, 假, 假, 假, 假, 假, 真, 到整数 (&ContrlCallBack2))
hImageButtons ＝ SUI_Window.AddImage (500, 1, 24, 23, pSkin [1], pSkin [3], pSkin [2], , 真, 假)
hButtons [1] ＝ SUI_Window.AddButton (309, 285, 80, , , 假, “启动游戏”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
hButtons [2] ＝ SUI_Window.AddButton (394, 285, 80, , , 假, “下载中心”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
hButtons [3] ＝ SUI_Window.AddButton (480, 285, 80, , pBtnIco, 假, “打开设置”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
hlabel ＝ SUI_Window.AddLabel (24, 32, 248, 24, “推荐服务器”, 真, 假, #黄色, 16, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 假, 假, 假)
s ＝ “mclauncher+ ” ＋ #版本号 ＋ “ By MoeMonkey”
l ＝ 540 － 取文本长度 (s) × 6
haboutlink ＝ SUI_Window.AddLink (l, 313, 320, 20, 假, s, 真, #白色, 12, 假, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack2))

hslabel [1] ＝ SUI_Window.AddLabel (20, 32, 80, 25, “游戏名字”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hsedit [1] ＝ SUI_Window.AddEdit (100, 32, 100, 25, pEditIco, 假, , #SUI_FontSize, 30, #SUI_EditType_Normal, , , , 假, 假, 假, #StringFormat_Middle, 真, 真, 真, 真, 真, 假)
hslabel [2] ＝ SUI_Window.AddLabel (20, 65, 80, 25, “最大内存”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hsedit [2] ＝ SUI_Window.AddEdit (100, 65, 60, 25, , , , #SUI_FontSize, 30, #SUI_EditType_Normal, , , , 假, 假, 假, #StringFormat_Middle, 假, 假, 假, 假, 真, 真)
hslabel [3] ＝ SUI_Window.AddLabel (135, 65, 80, 25, “MB”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hsbutton [1] ＝ SUI_Window.AddButton (200, 65, 59, 25, , , “最佳内存”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
slidermax ＝ 取内存容量信息 (#接口常量.总物理内存)  ' 设定slider的最大值
.如果真 (取反 (是否64位 ()) 且 slidermax ＞ 1536)
    slidermax ＝ 1536
.如果真结束
hSlider ＝ SUI_Window.AddSlider (28, 95, 232, 28, 512, slidermax, 到整数 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “内存”, “512”)) － 512, 真, 真, 假)
hslabel [4] ＝ SUI_Window.AddLabel (20, 130, 80, 25, “java路径”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hsbutton [2] ＝ SUI_Window.AddButton (130, 130, 59, 25, , , “手动查找”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
hsbutton [3] ＝ SUI_Window.AddButton (200, 130, 59, 25, , , “自动搜索”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
hsedit [3] ＝ SUI_Window.AddEdit (30, 162, 228, 25, pEditIco2, 假, , #SUI_FontSize, 30, #SUI_EditType_Normal, , , , 假, 假, 假, #StringFormat_Middle, 真, 真, 真, 真, 真, 假)
hslabel [5] ＝ SUI_Window.AddLabel (28, 185, 232, 25, “java目录下的bin文件夹 留空为默认值”, 真, 假, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hslabel [6] ＝ SUI_Window.AddLabel (20, 212, 80, 25, “启动模式”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
hsbutton [4] ＝ SUI_Window.AddButton (200, 212, 59, 25, , , “自动选择”, #黑色, #SUI_FontSize, 假, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 到整数 (&ContrlCallBack2))
启动模式 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “启动模式”, “不强制”)
.如果 (启动模式 ＝ “强制64位”)
    hsradiobutton [1] ＝ SUI_Window.AddRadioButton (35, 240, 80, 18, 假, “强制64位”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton [1] ＝ SUI_Window.AddRadioButton (35, 240, 80, 18, 假, “强制64位”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束
.如果 (启动模式 ＝ “强制32位”)
    hsradiobutton [2] ＝ SUI_Window.AddRadioButton (115, 240, 80, 18, 假, “强制32位”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton [2] ＝ SUI_Window.AddRadioButton (115, 240, 80, 18, 假, “强制32位”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束
.如果 (启动模式 ＝ “不强制”)
    hsradiobutton [3] ＝ SUI_Window.AddRadioButton (195, 240, 80, 18, 假, “不强制”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton [3] ＝ SUI_Window.AddRadioButton (195, 240, 80, 18, 假, “不强制”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束
hslabel [7] ＝ SUI_Window.AddLabel (10, 260, 160, 25, “使用java.exe启动”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
.如果 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “java.exe”, ) ＝ “启用”)
    hsswithcer ＝ SUI_Window.AddSwithcer (180, 260, 真, 真, 真, 假)
.否则
    hsswithcer ＝ SUI_Window.AddSwithcer (180, 260, 假, 真, 真, 假)
.如果结束
hslabel [8] ＝ SUI_Window.AddLabel (10, 287, 145, 25, “显示推荐服务器”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 真, 假, 假)
文件 ＝ 取当前目录 () ＋ “\nolist”
.如果真 (文件是否存在 (文件))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “显示推荐服务器”, “不启用”)
    删除文件 (文件)
.如果真结束
.如果 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “显示推荐服务器”, “启用”) ＝ “启用”)
    hsswithcer2 ＝ SUI_Window.AddSwithcer (180, 287, 真, 真, 真, 假)
.否则
    hsswithcer2 ＝ SUI_Window.AddSwithcer (180, 287, 假, 真, 真, 假)
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “普通登录”, “启用”) ＝ “启用”)
    hscheckbox1 ＝ SUI_Window.AddCheckBox (205, 32, 60, 25, “普通”, #白色, 假, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hscheckbox1 ＝ SUI_Window.AddCheckBox (205, 32, 60, 25, “普通”, #白色, 假, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束
hslabel [9] ＝ SUI_Window.AddLabel (268, 32, 40, 25, “密码”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
hsedit [4] ＝ SUI_Window.AddEdit (309, 32, 155, 25, pEditIco3, 假, , #SUI_FontSize, 30, #SUI_EditType_PassWord, , , , 假, 假, 假, #StringFormat_Middle, 真, 真, 真, 真, 真, 假)
hslabel [10] ＝ SUI_Window.AddLabel (268, 65, 40, 25, “方式”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
启动模式 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “登录方式”, “MineLogin”)
.如果 (启动模式 ＝ “MineLogin”)
    hsradiobutton2 [1] ＝ SUI_Window.AddRadioButton (309, 68, 90, 18, 假, “MineLogin”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton2 [1] ＝ SUI_Window.AddRadioButton (309, 68, 90, 18, 假, “MineLogin”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束
.如果 (启动模式 ＝ “mcsign”)
    hsradiobutton2 [2] ＝ SUI_Window.AddRadioButton (400, 68, 80, 18, 假, “mcsign”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 真, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton2 [2] ＝ SUI_Window.AddRadioButton (400, 68, 80, 18, 假, “mcsign”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 真, 假, 到整数 (&ContrlCallBack3))
.如果结束
.如果 (启动模式 ＝ “正版”)
    hsradiobutton2 [3] ＝ SUI_Window.AddRadioButton (470, 68, 80, 18, 假, “正版”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 真, 到整数 (&ContrlCallBack3))
.否则
    hsradiobutton2 [3] ＝ SUI_Window.AddRadioButton (470, 68, 80, 18, 假, “正版”, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假, 到整数 (&ContrlCallBack3))
.如果结束

hsave ＝ SUI_Window.AddLabel (255, 5, 80, 20, “已保存设置...”, 真, 假, #白色, 12, 真, 假, 假, 假, 假, 假, #StringFormat_Middle, #StringFormat_Middle, 假, 假, 假)
' 绑定事件
SUI_Window.Ptr (到整数 (&MsgCallBack2), 到整数 (&MsgCallBack2))
' 读取底图资源
文件名 ＝ 寻找文件 (取运行目录 () ＋ “\image\*.*”, )
.判断循环首 (文件名 ≠ “”)
    .如果真 (取文本左边 (文件名, 1) ≠ “.”)
        加入成员 (皮肤, 读入文件 (取运行目录 () ＋ “\image\” ＋ 文件名))
    .如果真结束
    文件名 ＝ 寻找文件 (, )
.判断循环尾 ()
.如果真 (取数组成员数 (皮肤) ≠ 0)
    置随机数种子 ()
    BkgOrder ＝ 取随机数 (1, 取数组成员数 (皮肤))
    SUI_Window.SetBkg (皮肤 [BkgOrder], #SUI_BkgType_Tensile)
.如果真结束
' 创建主窗口
SUI_Window.Create (窗口1.取窗口句柄 (), 真, 假, 假, 假, , , 假, “Minecraft”, SUITextColor (), 真, 真, 假, 0)
' 读取配置 写入edit控件
游戏名字 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “游戏名字”, )
SUI_Window.Control_Edit (hsedit [1], , , 游戏名字, , , , , , 真)
最大内存 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “内存”, )
SUI_Window.Control_Edit (hsedit [2], , , 最大内存, , , , , , 真)
java路径 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “java路径”, )
SUI_Window.Control_Edit (hsedit [3], , , java路径, , , , , , 真)
密码 ＝ 到文本 (解密数据 (到字节集 (读入文件 (取运行目录 () ＋ “\密码.dat”)), “'ix[]a;]'5+.465ex';fjm1\'4ue8';]”, #RC4算法))
SUI_Window.Control_Edit (hsedit [4], , , 密码, , , , , , 真)
' 不显示设置
显示设置 (假)
SUI_Window.Icon (pIcon)
' 绑定事件
SUI_Window.Event (hImageButtons, #SUI_Event_LOnClick, 到整数 (&ContrlCallBack2))
SUI_Window.Event (hSlider, #SUI_Event_SliderValue, 到整数 (&ContrlCallBack4))
SUI_Window.Event (hsswithcer2, #SUI_Event_LOnClick, 到整数 (&ContrlCallBack3))
' 显示主窗体
SUI_Window.Show (真)
' 多线程验证版本 获取服务器列表
线程关闭API (线程创建API (0, 0, &验证版本, 0, 0, 0))

.子程序 MsgCallBack2, 逻辑型
.参数 hwnd, 整数型
.参数 wMsg, 整数型
.参数 wParam, 整数型
.参数 lParam, 整数型
.局部变量 MsgRet, 整数型

.判断开始 (wMsg ＝ #WM_CLOSE)
    ' 关闭窗体时停留在设置页时 保存设置
    .如果真 (SUI_Window.Data_Str (hButtons [3], #SUI_Member_TextStr, ) ＝ “关闭设置”)
        保存设置 (假)
        闪烁 ()
    .如果真结束
    返回 (假)
.判断 (wMsg ＝ #WM_DESTROY)
    结束 ()
.默认

.判断结束
返回 (假)

.子程序 ContrlCallBack2, , , 控件回调函数演示 
.参数 Type, 整数型, , 控件类型 #SUI_Type_
.参数 hID, 整数型, , 控件ID
.局部变量 i, 整数型
.局部变量 最大内存, 文本型
.局部变量 启动模式, 文本型
.局部变量 游戏名字, 文本型
.局部变量 java路径, 文本型
.局部变量 是否64位, 逻辑型
.局部变量 最佳内存, 文本型
.局部变量 文字, 文本型
.局部变量 信息, 文本型, , "3"
.局部变量 MsgRet, 整数型
.局部变量 密码, 文本型
.局部变量 错误代码, 整数型
.局部变量 模式, 文本型
.局部变量 文本, 文本型
.局部变量 分割, 文本型, , "0"

.判断开始 (Type ＝ #SUI_Type_Button)
    .判断开始 (hID ＝ hButtons [2])
        下载中心初始化 ()
    .判断 (hID ＝ hsbutton [1])
        是否64位 ＝ 是否64位 ()
        最佳内存 ＝ 最佳内存 (是否64位)
        .如果 (是否64位)
            文字 ＝ “是64位系统,没有最大内存限制”
        .否则
            文字 ＝ “是32位系统,存在1.5G~2G之间的最大内存限制”
        .如果结束
        SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您的电脑” ＋ 文字 ＋ #换行符 ＋ “您的电脑物理内存为:” ＋ 到文本 (取内存容量信息 (#接口常量.总物理内存)) ＋ “MB” ＋ #换行符 ＋ “已经您将最大内存设定为比较适合您的:” ＋ 最佳内存 ＋ “MB” ＋ #换行符 ＋ #换行符 ＋ “正确的最大内存设定会使您的游戏流畅度增加 减少内存溢出导致游戏崩溃的可能性”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        SUI_Window.Control_Edit (hsedit [2], , , 最佳内存, , , , , , 真)
        SUI_Window.Control_Slider (hSlider, , , 到整数 (最佳内存) － 512, 真)
    .判断 (hID ＝ hsbutton [2])
        java路径 ＝ 浏览文件夹 (“请选择java目录下的bin文件夹”, )
        .如果真 (java路径 ≠ “”)
            .如果真 (取文本右边 (java路径, 1) ≠ “\”)
                java路径 ＝ java路径 ＋ “\”
            .如果真结束
            SUI_Window.Control_Edit (hsedit [3], , , java路径, , , , , , 真)
        .如果真结束

    .判断 (hID ＝ hsbutton [3])
        java信息 (信息)
        .如果 (信息 [1] ＝ “”)
            MsgRet ＝ SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您也许还未安装java运行环境” ＋ #换行符 ＋ “选择” ＋ #引号 ＋ “是” ＋ #引号 ＋ “将会跳转到java官方网站” ＋ #换行符 ＋ “如果您知道您已经安装 请选择” ＋ #引号 ＋ “否” ＋ #引号 ＋ “将使用默认值”, 真, 真, #询问图标, 假, { “否”, “是” }, 1, 假, , 假)
            .如果真 (SUI_MsgBox.Ret (MsgRet) ＝ 2)
                打开指定网址 (“http://www.java.com”)
            .如果真结束
            SUI_Window.Control_Edit (hsedit [3], , , “”, , , , , , 真)
        .否则
            SUI_Window.Control_Edit (hsedit [3], , , 信息 [2], , , , , , 真)
        .如果结束

    .判断 (hID ＝ hsbutton [4])
        java信息 (信息)
        .如果 (信息 [1] ＝ “”)
            MsgRet ＝ SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您也许还未安装java运行环境” ＋ #换行符 ＋ “选择” ＋ #引号 ＋ “是” ＋ #引号 ＋ “将会跳转到java官方网站” ＋ #换行符 ＋ “如果您知道您已经安装 请选择” ＋ #引号 ＋ “否” ＋ #引号 ＋ “将使用默认值”, 真, 真, #询问图标, 假, { “否”, “是” }, 1, 假, , 假)
            .如果真 (SUI_MsgBox.Ret (MsgRet) ＝ 2)
                打开指定网址 (“http://www.java.com”)
            .如果真结束
            SUI_Window.Control_RadioButton (hsradiobutton [3], , , 真, , 真)
            SUI_Window.Control_RadioButton (hsradiobutton [2], , , 假, , 真)
            SUI_Window.Control_RadioButton (hsradiobutton [1], , , 假, , 真)

        .否则
            .如果 (信息 [3] ＝ “64位”)
                .如果真 (是否64位)
                    SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您正在使用64位系统 推荐到www.java.com下载64位java以增强流畅度”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                .如果真结束
                SUI_Window.Control_RadioButton (hsradiobutton [3], , , 假, , 真)
                SUI_Window.Control_RadioButton (hsradiobutton [2], , , 假, , 真)
                SUI_Window.Control_RadioButton (hsradiobutton [1], , , 真, , 真)
            .否则
                SUI_Window.Control_RadioButton (hsradiobutton [3], , , 真, , 真)
                SUI_Window.Control_RadioButton (hsradiobutton [2], , , 假, , 真)
                SUI_Window.Control_RadioButton (hsradiobutton [1], , , 假, , 真)

            .如果结束
            .如果真 (信息 [1] ≠ “1.7”)
                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您也许没有使用java7 推荐到www.java.com下载此版本以便支持更多mod”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
            .如果真结束

        .如果结束

    .默认

    .判断结束
    .如果真 (SUI_Window.Data_Str (hButtons [3], #SUI_Member_TextStr, ) ＝ “关闭设置”)
        保存设置 (真)
    .如果真结束
    .判断开始 (hID ＝ hButtons [3])
        .如果 (SUI_Window.Data_Str (hID, #SUI_Member_TextStr, ) ＝ “打开设置”)
            显示设置 (真)
        .否则
            显示设置 (假)
        .如果结束

    .判断 (hID ＝ hButtons [1])
        .如果 (取反 (是否安装游戏 ()))
            SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “您还未安装minecraft” ＋ #换行符 ＋ “请初始化完成后进入” ＋ #引号 ＋ “下载中心” ＋ #引号 ＋ “来安装minecraft~” ＋ #换行符 ＋ “如果您确信您已经安装了minecraft” ＋ #换行符 ＋ “ 请将本文件和.minecraft放在同一文件夹内”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        .否则
            游戏名字 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “游戏名字”, )
            .如果 (游戏名字 ＝ “”)
                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “来给自己起一个好听的名字吧!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                显示设置 (真)
            .否则
                最大内存 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “内存”, )
                启动模式 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “启动模式”, “不强制”)
                java路径 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “java路径”, )
                .如果 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “java.exe”, ) ＝ “启用”)
                    java路径 ＝ java路径 ＋ “java.exe”
                .否则
                    java路径 ＝ java路径 ＋ “javaw.exe”
                .如果结束
                .判断开始 (启动模式 ＝ “强制64位”)
                    启动模式 ＝ “-d64 ”
                .判断 (启动模式 ＝ “强制32位”)
                    启动模式 ＝ “-d32 ”
                .判断 (启动模式 ＝ “不强制”)
                    启动模式 ＝ “”
                .默认

                .判断结束
                .如果 (java路径 ≠ “javaw.exe” 且 java路径 ≠ “java.exe” 且 取反 (文件是否存在 (java路径)))
                    SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “找不到java文件 请检查路径是否设置正确(结尾必须是\bin\)”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                .否则
                    .如果 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “普通登录”, “启用”) ≠ “启用”)
                        模式 ＝ 读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “登录方式”, “MineLogin”)
                        .判断开始 (模式 ＝ “MineLogin”)
                            密码 ＝ 到文本 (解密数据 (到字节集 (读入文件 (取运行目录 () ＋ “\密码.dat”)), “'ix[]a;]'5+.465ex';fjm1\'4ue8';]”, #RC4算法))
                            错误代码 ＝ 到数值 (到文本 (HTTP读文件 (“http://www.minelogin.com/ml/login.php?username=” ＋ 游戏名字 ＋ “&password=” ＋ 密码)))
                            .判断开始 (错误代码 ＝ 0)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “使用MineLogin时出现网络问题”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 1)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “MineLogin用户名或密码不合法”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 2)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “使用MineLogin时出现内部错误”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 3)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “MineLogin用户不存在”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 4)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “MineLogin需要验证”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 5)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “MineLogin密码错误”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断 (错误代码 ＝ 100)
                                启动游戏 (游戏名字, 最大内存, 启动模式, java路径)
                            .默认
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “使用MineLogin时出现未知错误 错误代码” ＋ 到文本 (错误代码), 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .判断结束


                        .判断 (模式 ＝ “mcsign”)
                            SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “mcsign还没开发 别着急”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                        .判断 (模式 ＝ “正版”)
                            密码 ＝ 到文本 (解密数据 (到字节集 (读入文件 (取运行目录 () ＋ “\密码.dat”)), “'ix[]a;]'5+.465ex';fjm1\'4ue8';]”, #RC4算法))
                            文本 ＝ 彗星HTTP读文本 (“http://login.minecraft.net/”, “POST”, , , “user=” ＋ 游戏名字 ＋ “&password=” ＋ 密码 ＋ “&version=13”, )
                            分割 ＝ 分割文本 (文本, “:”, )
                            .如果 (取数组成员数 (分割) ≠ 5)
                                SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “正版登录失败,请检查密码是否正确,网络是否正常”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
                            .否则
                                启动游戏 (分割 [3] ＋ “ ” ＋ 分割 [4], 最大内存, 启动模式, java路径)
                            .如果结束

                        .默认

                        .判断结束

                    .否则
                        启动游戏 (游戏名字, 最大内存, 启动模式, java路径)
                    .如果结束



                .如果结束



            .如果结束

        .如果结束

    .默认

    .判断结束



.判断 (Type ＝ #SUI_Type_Link)

    .如果 (hID ＝ haboutlink)
        载入 (窗口2, , 假)
    .否则
        .计次循环首 (服务器数, i)
            .如果真 (hID ＝ hlinks [i])
                打开指定网址 (服务器信息 [i].地址)
            .如果真结束

        .计次循环尾 ()
        .计次循环首 (4, i)
            .如果真 (hID ＝ hflinks [i])
                打开指定网址 (hflinksa [i])
            .如果真结束

        .计次循环尾 ()

    .如果结束

.判断 (Type ＝ #SUI_Type_Image)
    换肤 ()
.默认

.判断结束




.子程序 ContrlCallBack3, , , 控件回调函数演示 
.参数 Type, 整数型, , 控件类型 #SUI_Type_
.参数 hID, 整数型, , 控件ID
.参数 bCheck, 逻辑型, , 是否选中或开关等

.判断开始 (Type ＝ #SUI_Type_RadioButton)
    .判断开始 (hID ＝ hsradiobutton [1])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [2], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [2], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [3], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [3], , , 假, , 真)
        .如果真结束

    .判断 (hID ＝ hsradiobutton [2])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [1], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [1], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [3], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [3], , , 假, , 真)
        .如果真结束

    .判断 (hID ＝ hsradiobutton [3])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [1], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [1], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton [2], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton [2], , , 假, , 真)
        .如果真结束

    .默认

    .判断结束
    .判断开始 (hID ＝ hsradiobutton2 [1])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [2], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [2], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [3], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [3], , , 假, , 真)
        .如果真结束

    .判断 (hID ＝ hsradiobutton2 [2])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [1], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [1], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [3], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [3], , , 假, , 真)
        .如果真结束

    .判断 (hID ＝ hsradiobutton2 [3])
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [1], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [1], , , 假, , 真)
        .如果真结束
        .如果真 (SUI_Window.Data_Bool (hsradiobutton2 [2], #SUI_Member_bCheck, ))
            SUI_Window.Control_RadioButton (hsradiobutton2 [2], , , 假, , 真)
        .如果真结束

    .默认

    .判断结束



.判断 (Type ＝ #SUI_Type_CheckBox)
    显示方式 (取反 (bCheck))
.判断 (Type ＝ #SUI_Type_Switcher)
    .如果 (bCheck)
        服务器数 ＝ 取数组成员数 (服务器信息)
    .否则
        服务器数 ＝ 0
    .如果结束

.默认

.判断结束






.子程序 ContrlCallBack4, , , 控件回调函数演示 
.参数 Type, 整数型, , 控件类型 #SUI_Type_
.参数 hID, 整数型, , 控件ID
.参数 value, 整数型, , 是否选中或开关等

.判断开始 (Type ＝ #SUI_Type_Slider)
    SUI_Window.Control_Edit (hsedit [2], , , 到文本 (value), , , , , , 真)
.默认

.判断结束


.子程序 换肤
.局部变量 i, 整数型

.如果真 (取数组成员数 (皮肤) ≠ 0)
    .计次循环首 (SUI_Window.NumOfControl (), i)
        SUI_Window.Data_Bool (i, #SUI_Member_bUpdate, 真)
    .计次循环尾 ()
    BkgOrder ＝ BkgOrder ＋ 1  ' 皮肤计数增加
    .如果真 (BkgOrder ＞ 取数组成员数 (皮肤))
        BkgOrder ＝ 1
    .如果真结束
    SUI_Window.SetBkg (皮肤 [BkgOrder], #SUI_BkgType_Tensile)
    SUI_Window.Redraw ()
    SUI_Window.Flash (真)
    .计次循环首 (SUI_Window.NumOfControl (), i)
        SUI_Window.Data_Bool (i, #SUI_Member_bUpdate, 假)
    .计次循环尾 ()
.如果真结束


.子程序 显示设置
.参数 是否显示, 逻辑型
.局部变量 i, 整数型
.局部变量 反值, 逻辑型

.如果 (是否显示)
    SUI_Window.Control_Button (hButtons [3], , , “关闭设置”, 真)
.否则
    SUI_Window.Control_Button (hButtons [3], , , “打开设置”, 真)
.如果结束

反值 ＝ 取反 (是否显示)
.如果真 (服务器数 ≠ 0)
    SUI_Window.Control_Label (hlabel, 反值, 是否显示, , , 真)
.如果真结束

.计次循环首 (服务器数, i)
    SUI_Window.Control_Link (hlinks [i], 反值, 是否显示, 服务器信息 [i].标题, 真)
.计次循环尾 ()


.计次循环首 (8, i)
    SUI_Window.Control_Label (hslabel [i], 是否显示, , , , 真)
.计次循环尾 ()
.计次循环首 (3, i)
    SUI_Window.Control_Edit (hsedit [i], 是否显示, , , , , , , , 真)
.计次循环尾 ()
.计次循环首 (4, i)
    SUI_Window.Control_Button (hsbutton [i], 是否显示, , , 真)
.计次循环尾 ()
.计次循环首 (3, i)
    SUI_Window.Control_RadioButton (hsradiobutton [i], 是否显示, , , , 真)
.计次循环尾 ()
SUI_Window.Control_Slider (hSlider, 是否显示, , , 真)
SUI_Window.Control_Switcher (hsswithcer, 是否显示, , , , 真)
SUI_Window.Control_CheckBox (hscheckbox1, 是否显示, , , , 真)
SUI_Window.Control_Switcher (hsswithcer2, 是否显示, , , , 真)
显示方式 (取反 (SUI_Window.Data_Bool (hscheckbox1, #SUI_Member_bCheck, )) 且 是否显示)


.子程序 保存设置
.参数 闪烁, 逻辑型


写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “游戏名字”, SUI_Window.Data_Str (hsedit [1], #SUI_Member_TextStr, ))
写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “内存”, SUI_Window.Data_Str (hsedit [2], #SUI_Member_TextStr, ))
写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “java路径”, SUI_Window.Data_Str (hsedit [3], #SUI_Member_TextStr, ))
.如果真 (SUI_Window.Data_Bool (hsradiobutton [1], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “强制64位”)
.如果真结束
.如果真 (SUI_Window.Data_Bool (hsradiobutton [2], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “强制32位”)
.如果真结束
.如果真 (SUI_Window.Data_Bool (hsradiobutton [3], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “启动模式”, “不强制”)
.如果真结束
.如果 (SUI_Window.Data_Bool (hsswithcer, #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “java.exe”, “启用”)
.否则
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “java.exe”, “不启用”)
.如果结束
.如果 (SUI_Window.Data_Bool (hsswithcer2, #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “显示推荐服务器”, “启用”)
.否则
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “显示推荐服务器”, “不启用”)
.如果结束
.如果 (SUI_Window.Data_Bool (hscheckbox1, #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “普通登录”, “启用”)
.否则
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “普通登录”, “不启用”)
.如果结束
写到文件 (取运行目录 () ＋ “\密码.dat”, 加密数据 (到字节集 (SUI_Window.Data_Str (hsedit [4], #SUI_Member_TextStr, )), “'ix[]a;]'5+.465ex';fjm1\'4ue8';]”, #RC4算法))
.如果真 (SUI_Window.Data_Bool (hsradiobutton2 [1], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “登录方式”, “MineLogin”)
.如果真结束
.如果真 (SUI_Window.Data_Bool (hsradiobutton2 [2], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “登录方式”, “mcsign”)
.如果真结束
.如果真 (SUI_Window.Data_Bool (hsradiobutton2 [3], #SUI_Member_bCheck, ))
    写配置项 (取运行目录 () ＋ “\” ＋ “配置.ini”, “mcluncher+”, “登录方式”, “正版”)
.如果真结束
.如果真 (闪烁)
    线程关闭API (线程创建API (0, 0, &闪烁, 0, 0, 0))
.如果真结束


.子程序 闪烁

' 闪烁标签
.计次循环首 (2, )
    ' SUI_Window.Data_Bool (hsave, #SUI_Member_bVisible, 真)
    SUI_Window.Control_Label (hsave, 真, , , , 真)
    ' SUI_Window.Redraw ()
    ' SUI_Window.Flash (真)
    延迟 (100)
    ' SUI_Window.Data_Bool (hsave, #SUI_Member_bVisible, 假)
    SUI_Window.Control_Label (hsave, 假, , , , 真)
    ' SUI_Window.Redraw ()
    ' SUI_Window.Flash (真)
    延迟 (100)
.计次循环尾 ()


.子程序 验证版本
.局部变量 最新版本, 文本型
.局部变量 公告, 文本型
.局部变量 i, 整数型
.局部变量 文本, 文本型
.局部变量 分割, 文本型, , "0"
.局部变量 分割2, 文本型, , "0"

文本 ＝ 到文本 (编码转换 (HTTP读文件 (“http://mclauncherplus.sinaapp.com/api/?m=info”), #编码_UTF_8, #编码_GB2312, ))
分割 ＝ 分割文本 (文本, “|”, )
.如果真 (取数组成员数 (分割) ＝ 2)
    最新版本 ＝ 分割 [1]
    公告 ＝ 分割 [2]
    .如果真 (读配置项 (取运行目录 () ＋ “/配置.ini”, “mcluncher+”, “显示推荐服务器”, “启用”) ＝ “启用”)
        文本 ＝ 到文本 (编码转换 (HTTP读文件 (“http://mclauncherplus.sinaapp.com/api/?m=list”), #编码_UTF_8, #编码_GB2312, ))
        分割 ＝ 分割文本 (文本, “|”, )
        服务器数 ＝ 取数组成员数 (分割)
        .如果真 (服务器数 ≠ 0)
            重定义数组 (服务器信息, 假, 服务器数)
            .计次循环首 (服务器数, i)
                分割2 ＝ 分割文本 (分割 [i], “<>”, )
                服务器信息 [i].标题 ＝ 分割2 [1]
                服务器信息 [i].地址 ＝ 分割2 [2]
            .计次循环尾 ()
            .如果真 (SUI_Window.Data_Str (hButtons [3], #SUI_Member_TextStr, ) ＝ “打开设置”)
                SUI_Window.Control_Label (hlabel, 真, 假, , , 真)
                .计次循环首 (服务器数, i)
                    SUI_Window.Control_Link (hlinks [i], 真, 假, 服务器信息 [i].标题, 真)
                .计次循环尾 ()

            .如果真结束

        .如果真结束

    .如果真结束
    .如果真 (最新版本 ≠ #版本号)
        SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, “有新版本啦!版本号是” ＋ 最新版本 ＋ “,建议下载中心下载!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
    .如果真结束
    .如果真 (公告 ≠ “”)
        SUI_MsgBox.Create (窗口1.取窗口句柄 (), “mclauncher+”, 公告, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
    .如果真结束

.如果真结束

SUI_Window.Control_Label (hcount, , , “今天mclauncher+已经被使用了 ” ＋ 到文本 (HTTP读文件 (“http://mclauncherplus.sinaapp.com/api/?m=count”)) ＋ “ 次~”, , 真)


.子程序 显示方式
.参数 是否显示, 逻辑型
.局部变量 i, 整数型

.计次循环首 (3, i)
    SUI_Window.Control_RadioButton (hsradiobutton2 [i], 是否显示, , , , 真)
.计次循环尾 ()
SUI_Window.Control_Label (hslabel [9], 是否显示, , , , 真)
SUI_Window.Control_Label (hslabel [10], 是否显示, , , , 真)
SUI_Window.Control_Edit (hsedit [4], 是否显示, , , , , , , , 真)
.计次循环首 (SUI_Window.NumOfControl (), i)
    SUI_Window.Data_Bool (i, #SUI_Member_bUpdate, 真)
.计次循环尾 ()
SUI_Window.Redraw ()
SUI_Window.Flash (真)
.计次循环首 (SUI_Window.NumOfControl (), i)
    SUI_Window.Data_Bool (i, #SUI_Member_bUpdate, 假)
.计次循环尾 ()

.子程序 启动游戏
.参数 游戏名字, 文本型
.参数 最大内存, 文本型
.参数 启动模式, 文本型
.参数 java路径, 文本型
.局部变量 命令行, 文本型

写环境变量 (“appdata”, 取运行目录 ())
命令行 ＝ 启动模式 ＋ “-Xincgc -Xms512m -Xmx” ＋ 最大内存 ＋ “m -cp jinput.jar;lwjgl.jar;lwjgl_util.jar;minecraft.jar -Djava.library.path=” ＋ #引号 ＋ “.\natives” ＋ #引号 ＋ “ net.minecraft.client.Minecraft ” ＋ 游戏名字
执行 (#打开文件, java路径, 命令行, 到文本 (取运行目录 ()) ＋ “\.minecraft\bin”, )
销毁 ()
.版本 2

.程序集 窗口程序集3
.程序集变量 SUI_Window, SUI_Window

.子程序 _窗口2_创建完毕

SUI_Window.AddImage (240, 42, 128, 128, pIcon, , , , 真, 真)
SUI_Window.AddLabel (10, 50, 380, 25, “作者:MoeMonkey”, 真, 假, #黄色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.AddLabel (10, 80, 380, 25, “百度ID:猴儿”, 真, 假, #黄色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.AddLabel (10, 110, 380, 25, “邮箱:admin@postwind.com”, 真, 假, #黄色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.AddLabel (10, 140, 380, 25, “网站:http://www.postwind.com”, 真, 假, #黄色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.AddLabel (10, 170, 380, 25, “感谢百度Minecraft吧吧务组参与测试并提出修改意见”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.AddLabel (10, 200, 380, 25, “如果您对启动器有任何问题或建议 请及时联系我”, 真, 假, #白色, 14, 真, 假, 假, 假, 假, 假, #StringFormat_Left, #StringFormat_Middle, 真, 假, 假)
SUI_Window.Create (窗口2.取窗口句柄 (), 真, 假, 假, 假, , , 假, “关于mclauncher+ ” ＋ #版本号, SUITextColor (), 真, 真, 假, 0)
SUI_Window.Icon (pIcon)
SUI_Window.Show (真)

.版本 2
.支持库 eCompress
.支持库 shell
.支持库 spec

.程序集 窗口程序集4
.程序集变量 SUI_Window, SUI_Window
.程序集变量 SUI_MsgBox, SUI_MsgBox
.程序集变量 hlinks, 整数型, , "10"
.程序集变量 hProgress, 整数型
.程序集变量 线程句柄, 整数型

.子程序 _窗口3_创建完毕
.局部变量 i, 整数型

.如果 (寻找文本 (下载项目 [1].标题, #版本号, , 假) ＝ -1)
    hlinks [1] ＝ SUI_Window.AddLink (24, 50, 272, 13, 真, “启动器有更新:” ＋ 下载项目 [1].标题, 真, #红色, 14, 真, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack5))
.否则
    hlinks [1] ＝ SUI_Window.AddLink (24, 50, 272, 13, 真, “您已更新最新版本:” ＋ 下载项目 [1].标题, 真, #白色, 14, 真, 假, 假, 假, 假, 真, 真, 到整数 (&ContrlCallBack5))
.如果结束
.计次循环首 (下载个数 － 1, i)
    hlinks [i ＋ 1] ＝ SUI_Window.AddLink (24, 50 ＋ i × 24, 272, 13, 真, 下载项目 [1 ＋ i].标题, 真, #白色, 14, 真, 假, 假, 假, 假, 真, 假, 到整数 (&ContrlCallBack5))
.计次循环尾 ()


hProgress ＝ SUI_Window.AddProgress (24, 80 ＋ (i － 1) × 24, 272, 0, 10000, 10000, #SUI_ProgressTemplete_Glass1, “就绪”, #黑色, 10, 假, 真, 真)
高度 ＝ 140 ＋ (i － 1) × 24
SUI_Window.Ptr (, 到整数 (&MsgCallBack3))
SUI_Window.Create (窗口3.取窗口句柄 (), 真, 假, 假, 假, , , 假, “下载中心”, SUITextColor (), 真, 真, 假, 0)
SUI_Window.Icon (pIcon)
SUI_Window.Show (真)



.子程序 MsgCallBack3, 逻辑型
.参数 hwnd, 整数型
.参数 wMsg, 整数型
.参数 wParam, 整数型
.参数 lParam, 整数型
.局部变量 i, 整数型

.判断开始 (wMsg ＝ #WM_DESTROY)
    .如果真 (SUI_Window.Data_Str (hProgress, #SUI_Member_TextStr, ) ≠ “就绪”)
        线程中止API (线程句柄, 0)
        线程关闭API (线程句柄)
    .如果真结束
    关闭文件 (文件号)
    删除文件 (取运行目录 () ＋ “/tmp”)
    输出调试文本 (“download exit”)
.默认

.判断结束
返回 (假)

.子程序 ContrlCallBack5, , , 控件回调函数演示 
.参数 Type, 整数型, , 控件类型 #SUI_Type_
.参数 hID, 整数型, , 控件ID
.局部变量 i, 整数型
.局部变量 MsgRet, 整数型
.局部变量 i2, 整数型

.判断开始 (Type ＝ #SUI_Type_Link)
    .如果 (SUI_Window.Data_Str (hlinks [1], #SUI_Member_TextStr, ) ＝ “停止下载”)
        MsgRet ＝ SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “正在下载中...确定要停止下载吗”, 真, 真, #询问图标, 假, { “否”, “是” }, 1, 假, , 假)
        .如果真 (SUI_MsgBox.Ret (MsgRet) ＝ 2)
            线程中止API (线程句柄, 0)
            线程关闭API (线程句柄)
            关闭文件 (文件号)
            删除文件 (取运行目录 () ＋ “/tmp”)
            .如果 (寻找文本 (下载项目 [1].标题, #版本号, , 假) ＝ -1)
                SUI_Window.Control_Link (hlinks [1], , , “启动器有更新:” ＋ 下载项目 [1].标题, 真)
            .否则
                SUI_Window.Control_Link (hlinks [1], , 真, “您已更新最新版本:” ＋ 下载项目 [1].标题, 真)
            .如果结束

            .计次循环首 (下载个数 － 1, i)
                SUI_Window.Control_Link (hlinks [i ＋ 1], 真, , , 真)
            .计次循环尾 ()
            SUI_Window.Control_Progress (hProgress, , “就绪”, , 10000, 真)


        .如果真结束

    .否则
        .计次循环首 (下载个数, i)
            .如果真 (hID ＝ hlinks [i])
                MsgRet ＝ SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “确定要下载” ＋ 下载项目 [i].标题 ＋ “吗?” ＋ #换行符 ＋ “原有游戏文件夹名将会被改加.bak 请及时取出备份防止下一次更新游戏自动清空备份”, 真, 真, #询问图标, 假, { “否”, “是” }, 1, 假, , 假)
                .如果真 (SUI_MsgBox.Ret (MsgRet) ＝ 2)
                    SUI_Window.Control_Link (hlinks [1], , 假, “停止下载”, 真)
                    .计次循环首 (下载个数 － 1, i2)
                        SUI_Window.Control_Link (hlinks [i2 ＋ 1], 假, , , 真)
                    .计次循环尾 ()
                    线程句柄 ＝ 线程创建API (0, 0, &HTTP进度下载, i, 0, 0)
                    SUI_Window.Control_Progress (hProgress, , “正在连接服务器...”, , 10000, 真)
                .如果真结束

            .如果真结束

        .计次循环尾 ()


    .如果结束

.默认

.判断结束


.子程序 进度显示
.参数 总大小, 整数型
.参数 目前下载, 整数型
.参数 目前时间, 整数型
.参数 实际下载, 整数型
.局部变量 下载速度, 双精度小数型
.局部变量 剩余时间, 双精度小数型
.局部变量 文本, 文本型

下载速度 ＝ 四舍五入 (实际下载 × 1000 ÷ 1024 ÷ 目前时间, 2)
文本 ＝ 到文本 (四舍五入 (目前下载 × 100 ÷ 总大小, )) ＋ “% ” ＋ 到文本 (四舍五入 (目前下载 ÷ 1024 ÷ 1024, 2)) ＋ “MB/” ＋ 到文本 (四舍五入 (总大小 ÷ 1024 ÷ 1024, 2)) ＋ “MB ” ＋ 到文本 (下载速度) ＋ “KB/秒”
.如果真 (下载速度 ＞ 0)
    剩余时间 ＝ 到整数 ((总大小 － 目前下载) ÷ 1024 ÷ 下载速度)
    文本 ＝ 文本 ＋ “ 还有”
    .如果真 (剩余时间 ＼ 3600 ≠ 0)
        文本 ＝ 文本 ＋ 到文本 (剩余时间 ＼ 3600) ＋ “时”
    .如果真结束
    .如果真 (剩余时间 ＼ 60 ％ 60 ≠ 0)
        文本 ＝ 文本 ＋ 到文本 (剩余时间 ＼ 60 ％ 60) ＋ “分”
    .如果真结束
    文本 ＝ 文本 ＋ 到文本 (剩余时间 ％ 60) ＋ “秒”
.如果真结束
SUI_Window.Control_Progress (hProgress, , 文本, , 目前下载 × 10000 ÷ 总大小, 真)


.子程序 下载完成
.参数 是否为启动器, 逻辑型
.局部变量 i, 整数型

.如果 (是否为启动器)
    .如果 (ZIP压缩1.解压 (取运行目录 () ＋ “/tmp”, 取运行目录 ()) ＝ 1)
        SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装完成!稍等几秒会自动启动新版本...”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        写到文件 (取当前目录 () ＋ “\tmp.bat”, 到字节集 (#批处理))
        删除文件 (取运行目录 () ＋ “/tmp”)
        执行 (#打开文件, 取当前目录 () ＋ “\tmp.bat”, , , #隐藏窗口)
        SUI_Window.Control_Progress (hProgress, , “就绪”, , 10000, 真)
        销毁 ()
        .判断循环首 (是否已创建 (窗口3))
            处理事件 ()
            调试输出 (“aaaa”)
        .判断循环尾 ()
        结束 ()

    .否则
        SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装失败...请尝试重新下载!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
    .如果结束


.否则
    SUI_Window.Control_Progress (hProgress, , “正在替换旧游戏...”, , 10000, 真)
    .如果 (文件是否存在 (取运行目录 () ＋ “/.minecraft”))
        删除目录 (取运行目录 () ＋ “/.minecraft.bak”)
        .如果 (文件更名 (取运行目录 () ＋ “/.minecraft”, 取运行目录 () ＋ “/.minecraft.bak”))
            .如果 (ZIP压缩1.解压 (取运行目录 () ＋ “/tmp”, 取运行目录 ()) ＝ 1)
                SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装完成!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
            .否则
                SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装失败...请尝试重新下载!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
            .如果结束

        .否则
            SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “无法替换旧游戏!请检查游戏是否正在运行,如多次重试无效请重启电脑再试!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        .如果结束

    .否则
        .如果 (ZIP压缩1.解压 (取运行目录 () ＋ “/tmp”, 取运行目录 ()) ＝ 1)
            SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装完成!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        .否则
            SUI_MsgBox.Create (窗口3.取窗口句柄 (), “mclauncher+”, “安装失败...请尝试重新下载!”, 真, 真, #信息图标, 假, { “确定” }, 1, 假, , 假)
        .如果结束

    .如果结束

.如果结束
.如果 (寻找文本 (下载项目 [1].标题, #版本号, , 假) ＝ -1)
    SUI_Window.Control_Link (hlinks [1], , , “启动器有更新:” ＋ 下载项目 [1].标题, 真)
.否则
    SUI_Window.Control_Link (hlinks [1], , 真, “您已更新最新版本:” ＋ 下载项目 [1].标题, 真)
.如果结束
.计次循环首 (下载个数 － 1, i)
    SUI_Window.Control_Link (hlinks [i ＋ 1], 真, , , 真)
.计次循环尾 ()
删除文件 (取运行目录 () ＋ “/tmp”)
SUI_Window.Control_Progress (hProgress, , “就绪”, , 10000, 真)

.子程序 _ZIP压缩1_解压缩进度, 逻辑型
.参数 已完成百分比, 整数型

SUI_Window.Control_Progress (hProgress, , “正在安装...” ＋ 到文本 (已完成百分比) ＋ “%”, , 已完成百分比 × 100, 真)

.版本 2
.支持库 spec
.支持库 eAPI

.程序集 程序集1

.子程序 是否64位, 逻辑型
.局部变量 szWinSysDir, 文本型
.局部变量 uSize, 整数型
.局部变量 unResult, 整数型
.局部变量 szKernel32File, 文本型
.局部变量 hLibKernel32, 整数型
.局部变量 lpIsWow64Process, 整数型
.局部变量 bIsWow64Process, 逻辑型

szWinSysDir ＝ 取空白文本 (256)
uSize ＝ 256
unResult ＝ GetSystemDirectory (szWinSysDir, uSize)
.如果真 (unResult ＞ 0)
    szKernel32File ＝ szWinSysDir ＋ “\kernel32.dll”
    hLibKernel32 ＝ LoadLibrary (szKernel32File)
.如果真结束
.如果真 (hLibKernel32 ＝ 0)
    hLibKernel32 ＝ LoadLibrary (“kernel32.dll”)
.如果真结束
.如果真 (hLibKernel32 ≠ 0)
    lpIsWow64Process ＝ GetProcAddress (hLibKernel32, “IsWow64Process”)
.如果真结束
.如果真 (lpIsWow64Process ≠ 0)
    .如果真 (IsWow64Process (GetCurrentProcess (), bIsWow64Process) ＝ 0)
        FreeLibrary (hLibKernel32)
        返回 (假)
    .如果真结束

.如果真结束
.如果真 (hLibKernel32 ＝ 0)
    FreeLibrary (hLibKernel32)
    返回 (假)
.如果真结束
返回 (bIsWow64Process)


.子程序 java信息
.参数 信息, 文本型, 参考 数组, 版本 路径 64位/32位

信息 [3] ＝ “64位”
.如果真 (是否64位 ())
    信息 [1] ＝ 读取64位注册表键值 (“HKEY_LOCAL_MACHINE”, “SOFTWARE\JavaSoft\Java Runtime Environment”, “CurrentVersion”)
    信息 [2] ＝ 读取64位注册表键值 (“HKEY_LOCAL_MACHINE”, “SOFTWARE\JavaSoft\Java Runtime Environment\” ＋ 信息 [1], “JavaHome”)
.如果真结束
.如果真 (删首尾空 (信息 [1]) ＝ “”)
    信息 [3] ＝ “32位”
    信息 [1] ＝ 读取32位注册表键值 (“HKEY_LOCAL_MACHINE”, “SOFTWARE\JavaSoft\Java Runtime Environment”, “CurrentVersion”)
    信息 [2] ＝ 读取32位注册表键值 (“HKEY_LOCAL_MACHINE”, “SOFTWARE\JavaSoft\Java Runtime Environment\” ＋ 信息 [1], “JavaHome”)
.如果真结束
.如果 (删首尾空 (信息 [1]) ＝ “”)
    信息 [2] ＝ “”
    信息 [1] ＝ “”
.否则
    信息 [2] ＝ 信息 [2] ＋ “\bin\”
.如果结束




.子程序 读取32位注册表键值, 文本型
.参数 根键, 文本型
.参数 子健路径, 文本型
.参数 键名, 文本型
.局部变量 fkey, 整数型

.判断开始 (删首尾空 (到大写 (根键)) ＝ “HKEY_CLASSES_ROOT”)
    fkey ＝ #根类
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_CURRENT_USER”)
    fkey ＝ #现行用户
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_LOCAL_MACHINE”)
    fkey ＝ #本地机器
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_USERS”)
    fkey ＝ #所有用户
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_CURRENT_CONFIG”)
    fkey ＝ #现行设置
.默认

.判断结束

返回 (取文本注册项 (fkey, 子健路径 ＋ “\” ＋ 键名, ))

.子程序 读取64位注册表键值, 文本型
.参数 根键, 文本型
.参数 子健路径, 文本型
.参数 键名, 文本型
.局部变量 hkey, 整数型
.局部变量 phkey, 整数型
.局部变量 oldwow64state, 整数型
.局部变量 lptype, 整数型
.局部变量 result, 文本型
.局部变量 resultsize, 整数型
.局部变量 type, 整数型

' 如果 (是否64位 ())
.判断开始 (删首尾空 (到大写 (根键)) ＝ “HKEY_CLASSES_ROOT”)
    hkey ＝ #HKEY_CLASSES_ROOT
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_CURRENT_USER”)
    hkey ＝ #HKEY_CURRENT_USER
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_LOCAL_MACHINE”)
    hkey ＝ #HKEY_LOCAL_MACHINE
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_USERS”)
    hkey ＝ #HKEY_USERS
.判断 (删首尾空 (到大写 (根键)) ＝ “HKEY_CURRENT_CONFIG”)
    hkey ＝ #HKEY_CURRENT_CONFIG
.默认

.判断结束
.如果真 (hkey ＝ 0)
    返回 (“”)
.如果真结束
.如果真 (API_Wow64DisableWow64FsRedirection (oldwow64state))  ' 关闭文件系统转向
    API_RegOpenKeyEx (hkey, 子健路径, 0, #KEY_ALL_WOW64, 取变量数据地址 (phkey))
    API_RegDisableReflectionKey (phkey)  ' 打开注册表转向（禁止特定项的注册表反射）
    lptype ＝ 0
    result ＝ 取空白文本 (1024)
    resultsize ＝ 1024
    API_RegQueryValueEx (phkey, 键名, 0, 取变量数据地址 (type), 取变量数据地址 (result), 取变量数据地址 (resultsize))
    API_RegQueryValueEx (phkey, 键名, 0, 取变量数据地址 (type), 取变量数据地址 (result), 取变量数据地址 (resultsize))
    API_RegEnableReflectionKey (phkey)  ' 打开注册表转向（开启特定项的注册表反射）
    API_RegCloseKey (phkey)
.如果真结束
API_Wow64RevertWow64FsRedirection (oldwow64state)  ' 打开文件系统转向
返回 (result)



.子程序 最佳内存, 文本型
.参数 是否64位, 逻辑型
.局部变量 内存大小, 整数型

内存大小 ＝ 取内存容量信息 (#接口常量.总物理内存)
.判断开始 (内存大小 ＜ 1024)
    返回 (“512”)
.判断 (内存大小 ＜ 2048)
    返回 (“1024”)
.判断 (是否64位)
    返回 (“2048”)
.默认
    返回 (“1024”)
.判断结束


.子程序 HTTP进度下载, 整数型, 公开, 进度下载HTTP指定文件
.参数 i, 整数型
.局部变量 dwFlags, 整数型
.局部变量 strAgent, 文本型
.局部变量 hOpen, 整数型
.局部变量 dwSize, 长整数型
.局部变量 szHead, 文本型
.局部变量 szTemp, 字节集
.局部变量 hConnect, 整数型
.局部变量 dwByteToRead, 整数型
.局部变量 dwSizeOfRq, 整数型
.局部变量 dwBytes, 长整数型
.局部变量 start, 整数型
.局部变量 end, 整数型
.局部变量 time, 整数型
.局部变量 网址, 文本型, , , 要下载的文件远程路径
.局部变量 文件名, 文本型, , , 要保存的位置
.局部变量 进度显示, 子程序指针, , , 回调函数，参数一为目前下载字节数；参数二为总字节数；参数三为现行下载时间

网址 ＝ 下载项目 [i].地址
文件名 ＝ 取运行目录 () ＋ “/tmp”
进度显示 ＝ &进度显示
InternetGetConnectedState (dwFlags, 0)
strAgent ＝ “Agent” ＋ 到文本 (取启动时间 ())
.如果 (位与 (dwFlags, 4) ＝ 0)
    hOpen ＝ InternetOpenA (strAgent, 4, 0, 0, 0)
.否则
    hOpen ＝ InternetOpenA (strAgent, 0, 0, 0, 0)
.如果结束
.如果真 (hOpen ＝ 0)
    信息框 (“Internet连接错误!”, 0, )
    返回 (-1)
.如果真结束
szHead ＝ “Accept: */*” ＋ #换行符 ＋ “Accept-Language: zh-cn” ＋ #换行符 ＋ “Accept-Encoding: gzip, deflate” ＋ #换行符 ＋ “User-Agent: Mozilla/4.0(compatible; MSIE 6.0; Windows NT 5.0; MyIE2; .NET CLR 1.1.4322)”
szTemp ＝ 取空白字节集 (10240)
hConnect ＝ InternetOpenUrlA (hOpen, 网址, szHead, 取文本长度 (szHead), 2214592768, 0)
.如果真 (hConnect ＝ 0)
    信息框 (“不能打开该URL!”, 0, )
    返回 (-1)
.如果真结束
dwByteToRead ＝ 0
dwSizeOfRq ＝ 4
dwBytes ＝ 0
文件号 ＝ 打开文件 (文件名, #重写, )
.如果真 (文件号 ＝ 0)
    信息框 (“临时文件被占用 请关闭启动器过一会再试试”, 0, )
    返回 (-1)
.如果真结束
.如果真 (HttpQueryInfoA (hConnect, 536870917, dwByteToRead, dwSizeOfRq, 0) ＝ 0)
    dwByteToRead ＝ 0
.如果真结束
start ＝ 取启动时间 ()
end ＝ 0
time ＝ 10
.循环判断首 ()
    .如果真 (InternetReadFile (hConnect, szTemp, 10240, dwSize) ＝ 0)
        信息框 (“读文件出错!”, 0, )
        关闭文件 (文件号)
        返回 (-1)
    .如果真结束
    .如果 (dwSize ＝ 0)
        跳出循环 ()
    .否则
        szTemp ＝ 取字节集左边 (szTemp, dwSize)
        写出字节集 (文件号, szTemp)
    .如果结束
    dwBytes ＝ dwBytes ＋ dwSize
    end ＝ 取启动时间 ()
    time ＝ end － start
    .如果真 (time ＝ 0)
        time ＝ 10
    .如果真结束
    CallWindowProcA (进度显示, dwByteToRead, dwBytes, time, dwBytes)
.循环判断尾 (真)
关闭文件 (文件号)
InternetCloseHandle (hOpen)
下载完成 (i ＝ 1)
返回 (0)
